{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\cash\\\\Cash.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaMoneyBillWave, FaChartLine, FaCashRegister, FaPercentage, FaChartPie } from \"react-icons/fa\";\nimport { getCash } from \"../api/CashApi\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\nimport { calculateInitialCash, calculateAvailableCash, calculateNetPL, calculateCashBalance, calculateTotalDeposits, calculateTotalWithdrawals, calculateROI } from \"./CashCalc\";\nimport { formatCash } from \"../func/functions\";\nconst Cash = () => {\n  const [cashData, setCashData] = useState(null);\n  const [dailyPnls, setDailyPnls] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true); // eslint-disable-next-line\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [cashResponse, pnlResponse, transactionsResponse] = await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\n        setCashData(cashResponse);\n        setDailyPnls(pnlResponse);\n        setTransactions(transactionsResponse);\n      } catch (error) {\n        setError(true);\n        console.error(\"Error fetching cash data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  const initialCash = cashData ? calculateInitialCash(cashData) : 0;\n  const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\n\n  // Calculate Total Cash = Initial Cash + All Deposits - All Withdrawals\n  const totalDeposits = transactions.length > 0 ? calculateTotalDeposits(transactions) : 0;\n  const totalWithdrawals = transactions.length > 0 ? calculateTotalWithdrawals(transactions) : 0;\n  const cash = formatCash(initialCash + totalDeposits - totalWithdrawals);\n  const cashBalance = transactions.length > 0 || netPL !== 0 ? formatCash(calculateCashBalance(initialCash, netPL, transactions)) : formatCash(initialCash);\n  const roi = initialCash !== 0 && netPL !== 0 ? `${calculateROI(initialCash, netPL).toFixed(2)}%` : \"0%\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaCashRegister, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Capital:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, formatCash(initialCash)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaChartPie, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Cash:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, cash))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaChartLine, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Net P/L:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, formatCash(netPL)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaMoneyBillWave, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Equity:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, cashBalance))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaPercentage, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"RoI:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, roi)))));\n};\nexport default Cash;\n\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   FaMoneyBillWave,\n//   FaChartLine,\n//   FaCashRegister,\n//   FaPercentage,\n//   FaChartPie,\n// } from \"react-icons/fa\";\n// import { getCash } from \"../api/CashApi\";\n// import { fetchDailyPnls } from \"../api/DailyPNLApi\";\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\n// import {\n//   calculateInitialCash,\n//   calculateAvailableCash,\n//   calculateNetPL,\n//   calculateCashBalance,\n//   calculateTotalDeposits,\n//   calculateTotalWithdrawals,\n//   calculateROI,\n// } from \"./CashCalc\";\n// import { formatCash } from \"../func/functions\";\n\n// const Cash = () => {\n//   const [cashData, setCashData] = useState(null);\n//   const [dailyPnls, setDailyPnls] = useState([]);\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true); // eslint-disable-next-line\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [cashResponse, pnlResponse, transactionsResponse] =\n//           await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\n\n//         setCashData(cashResponse);\n//         setDailyPnls(pnlResponse);\n//         setTransactions(transactionsResponse);\n//       } catch (error) {\n//         setError(true);\n//         console.error(\"Error fetching cash data:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) return <p>Loading...</p>;\n\n//   const initialCash = cashData ? calculateInitialCash(cashData) : 0;\n//   const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\n\n//   const availableCash =\n//     transactions.length > 0\n//       ? formatCash(calculateAvailableCash(initialCash, transactions))\n//       : formatCash(initialCash + netPL);\n\n//   const cashBalance =\n//     transactions.length > 0 || netPL !== 0\n//       ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\n//       : formatCash(initialCash);\n\n//   const roi =\n//     initialCash !== 0 && netPL !== 0\n//       ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\n//       : \"0%\";\n\n//   // Calculate Deposited/Withdrawn Cash\n//   const totalDeposits =\n//     transactions.length > 0 ? calculateTotalDeposits(transactions) : 0;\n//   const totalWithdrawals =\n//     transactions.length > 0 ? calculateTotalWithdrawals(transactions) : 0;\n//   const adjustedCash =\n//     formatCash(totalDeposits - totalWithdrawals) + initialCash; // Net deposits/withdrawals\n\n//   return (\n//     <div className=\"cash-container\">\n//       <div className=\"cash-card-container\">\n//         {/* Capital Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaCashRegister className=\"card-icon\" />\n//             <span className=\"label\">Capital:</span>\n//             <span className=\"value\">{formatCash(initialCash)}</span>\n//           </div>\n//         </div>\n\n//         {/* Adjusted Cash Card (Deposits - Withdrawals) */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaChartPie className=\"card-icon\" />\n//             <span className=\"label\">Adjusted Cash (Deposits/Withdrawals):</span>\n//             <span className=\"value\">{adjustedCash}</span>\n//           </div>\n//         </div>\n\n//         {/* Net P/L Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaChartLine className=\"card-icon\" />\n//             <span className=\"label\">Net P/L:</span>\n//             <span className=\"value\">{formatCash(netPL)}</span>\n//           </div>\n//         </div>\n\n//         {/* Cash Balance Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaMoneyBillWave className=\"card-icon\" />\n//             <span className=\"label\">Equity:</span>\n//             <span className=\"value\">{cashBalance}</span>\n//           </div>\n//         </div>\n\n//         {/* RoI Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaPercentage className=\"card-icon\" />\n//             <span className=\"label\">RoI:</span>\n//             <span className=\"value\">{roi}</span>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cash;\n\n// // import React, { useEffect, useState } from \"react\";\n// // import {\n// //   FaMoneyBillWave,\n// //   FaChartLine,\n// //   FaCashRegister,\n// //   FaPercentage,\n// //   FaChartPie,\n// // } from \"react-icons/fa\";\n// // import { getCash } from \"../api/CashApi\";\n// // import { fetchDailyPnls } from \"../api/DailyPNLApi\";\n// // import { fetchTransactions } from \"../api/TransactionsAPI\";\n// // import {\n// //   calculateInitialCash,\n// //   calculateAvailableCash,\n// //   calculateNetPL,\n// //   calculateCashBalance,\n// //   calculateROI,\n// // } from \"./CashCalc\";\n// // import { formatCash } from \"../func/functions\";\n\n// // const Cash = () => {\n// //   const [cashData, setCashData] = useState(null);\n// //   const [dailyPnls, setDailyPnls] = useState([]);\n// //   const [transactions, setTransactions] = useState([]);\n// //   const [loading, setLoading] = useState(true); // eslint-disable-next-line\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       try {\n// //         const [cashResponse, pnlResponse, transactionsResponse] =\n// //           await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\n\n// //         setCashData(cashResponse);\n// //         setDailyPnls(pnlResponse);\n// //         setTransactions(transactionsResponse);\n// //       } catch (error) {\n// //         setError(true);\n// //         console.error(\"Error fetching cash data:\", error);\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, []);\n\n// //   if (loading) return <p>Loading...</p>;\n\n// //   const initialCash = cashData ? calculateInitialCash(cashData) : 0;\n// //   const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\n\n// //   const availableCash =\n// //     transactions.length > 0\n// //       ? formatCash(calculateAvailableCash(initialCash, transactions))\n// //       : formatCash(initialCash + netPL);\n\n// //   const cashBalance =\n// //     transactions.length > 0 || netPL !== 0\n// //       ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\n// //       : formatCash(initialCash);\n\n// //   const roi =\n// //     initialCash !== 0 && netPL !== 0\n// //       ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\n// //       : \"0%\";\n\n// //   return (\n// //     <div className=\"cash-container\">\n// //       <div className=\"cash-card-container\">\n// //         {/* Initial Cash Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaCashRegister className=\"card-icon\" />\n// //             <span className=\"label\">Capital:</span>\n// //             <span className=\"value\">{formatCash(initialCash)}</span>\n// //           </div>\n// //         </div>\n\n// //         {/* Ajusted Cash Card this should be the cash deposited/withdrawn */}\n// //         {/* <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaChartPie className=\"card-icon\" />\n// //             <span className=\"label\">Total:</span>\n// //             <span className=\"value\">{availableCash}</span>\n// //           </div>\n// //         </div> */}\n\n// //         {/* Net P/L Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaChartLine className=\"card-icon\" />\n// //             <span className=\"label\">Net P/L:</span>\n// //             <span className=\"value\">{formatCash(netPL)}</span>\n// //           </div>\n// //         </div>\n\n// //         {/* Cash Balance Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaMoneyBillWave className=\"card-icon\" />\n// //             <span className=\"label\">Equity:</span>\n// //             <span className=\"value\">{cashBalance}</span>\n// //           </div>\n// //         </div>\n\n// //         {/* RoI Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaPercentage className=\"card-icon\" />\n// //             <span className=\"label\">RoI:</span>\n// //             <span className=\"value\">{roi}</span>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Cash;","map":{"version":3,"names":["React","useEffect","useState","FaMoneyBillWave","FaChartLine","FaCashRegister","FaPercentage","FaChartPie","getCash","fetchDailyPnls","fetchTransactions","calculateInitialCash","calculateAvailableCash","calculateNetPL","calculateCashBalance","calculateTotalDeposits","calculateTotalWithdrawals","calculateROI","formatCash","Cash","cashData","setCashData","dailyPnls","setDailyPnls","transactions","setTransactions","loading","setLoading","error","setError","fetchData","cashResponse","pnlResponse","transactionsResponse","Promise","all","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","initialCash","netPL","length","totalDeposits","totalWithdrawals","cash","cashBalance","roi","toFixed","className"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/cash/Cash.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FaMoneyBillWave,\r\n  FaChartLine,\r\n  FaCashRegister,\r\n  FaPercentage,\r\n  FaChartPie,\r\n} from \"react-icons/fa\";\r\nimport { getCash } from \"../api/CashApi\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\r\nimport {\r\n  calculateInitialCash,\r\n  calculateAvailableCash,\r\n  calculateNetPL,\r\n  calculateCashBalance,\r\n  calculateTotalDeposits,\r\n  calculateTotalWithdrawals,\r\n  calculateROI,\r\n} from \"./CashCalc\";\r\nimport { formatCash } from \"../func/functions\";\r\n\r\nconst Cash = () => {\r\n  const [cashData, setCashData] = useState(null);\r\n  const [dailyPnls, setDailyPnls] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true); // eslint-disable-next-line\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [cashResponse, pnlResponse, transactionsResponse] =\r\n          await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\r\n\r\n        setCashData(cashResponse);\r\n        setDailyPnls(pnlResponse);\r\n        setTransactions(transactionsResponse);\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(\"Error fetching cash data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  const initialCash = cashData ? calculateInitialCash(cashData) : 0;\r\n  const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\r\n\r\n  // Calculate Total Cash = Initial Cash + All Deposits - All Withdrawals\r\n  const totalDeposits =\r\n    transactions.length > 0 ? calculateTotalDeposits(transactions) : 0;\r\n  const totalWithdrawals =\r\n    transactions.length > 0 ? calculateTotalWithdrawals(transactions) : 0;\r\n  const cash = formatCash(initialCash + totalDeposits - totalWithdrawals);\r\n\r\n  const cashBalance =\r\n    transactions.length > 0 || netPL !== 0\r\n      ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\r\n      : formatCash(initialCash);\r\n\r\n  const roi =\r\n    initialCash !== 0 && netPL !== 0\r\n      ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\r\n      : \"0%\";\r\n\r\n  return (\r\n    <div className=\"cash-container\">\r\n      <div className=\"cash-card-container\">\r\n        {/* Capital Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaCashRegister className=\"card-icon\" />\r\n            <span className=\"label\">Capital:</span>\r\n            <span className=\"value\">{formatCash(initialCash)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Cash Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaChartPie className=\"card-icon\" />\r\n            <span className=\"label\">Cash:</span>\r\n            <span className=\"value\">{cash}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Net P/L Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaChartLine className=\"card-icon\" />\r\n            <span className=\"label\">Net P/L:</span>\r\n            <span className=\"value\">{formatCash(netPL)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Cash Balance Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaMoneyBillWave className=\"card-icon\" />\r\n            <span className=\"label\">Equity:</span>\r\n            <span className=\"value\">{cashBalance}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* RoI Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaPercentage className=\"card-icon\" />\r\n            <span className=\"label\">RoI:</span>\r\n            <span className=\"value\">{roi}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cash;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   FaMoneyBillWave,\r\n//   FaChartLine,\r\n//   FaCashRegister,\r\n//   FaPercentage,\r\n//   FaChartPie,\r\n// } from \"react-icons/fa\";\r\n// import { getCash } from \"../api/CashApi\";\r\n// import { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\r\n// import {\r\n//   calculateInitialCash,\r\n//   calculateAvailableCash,\r\n//   calculateNetPL,\r\n//   calculateCashBalance,\r\n//   calculateTotalDeposits,\r\n//   calculateTotalWithdrawals,\r\n//   calculateROI,\r\n// } from \"./CashCalc\";\r\n// import { formatCash } from \"../func/functions\";\r\n\r\n// const Cash = () => {\r\n//   const [cashData, setCashData] = useState(null);\r\n//   const [dailyPnls, setDailyPnls] = useState([]);\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true); // eslint-disable-next-line\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const [cashResponse, pnlResponse, transactionsResponse] =\r\n//           await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\r\n\r\n//         setCashData(cashResponse);\r\n//         setDailyPnls(pnlResponse);\r\n//         setTransactions(transactionsResponse);\r\n//       } catch (error) {\r\n//         setError(true);\r\n//         console.error(\"Error fetching cash data:\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   const initialCash = cashData ? calculateInitialCash(cashData) : 0;\r\n//   const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\r\n\r\n//   const availableCash =\r\n//     transactions.length > 0\r\n//       ? formatCash(calculateAvailableCash(initialCash, transactions))\r\n//       : formatCash(initialCash + netPL);\r\n\r\n//   const cashBalance =\r\n//     transactions.length > 0 || netPL !== 0\r\n//       ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\r\n//       : formatCash(initialCash);\r\n\r\n//   const roi =\r\n//     initialCash !== 0 && netPL !== 0\r\n//       ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\r\n//       : \"0%\";\r\n\r\n//   // Calculate Deposited/Withdrawn Cash\r\n//   const totalDeposits =\r\n//     transactions.length > 0 ? calculateTotalDeposits(transactions) : 0;\r\n//   const totalWithdrawals =\r\n//     transactions.length > 0 ? calculateTotalWithdrawals(transactions) : 0;\r\n//   const adjustedCash =\r\n//     formatCash(totalDeposits - totalWithdrawals) + initialCash; // Net deposits/withdrawals\r\n\r\n//   return (\r\n//     <div className=\"cash-container\">\r\n//       <div className=\"cash-card-container\">\r\n//         {/* Capital Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaCashRegister className=\"card-icon\" />\r\n//             <span className=\"label\">Capital:</span>\r\n//             <span className=\"value\">{formatCash(initialCash)}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Adjusted Cash Card (Deposits - Withdrawals) */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaChartPie className=\"card-icon\" />\r\n//             <span className=\"label\">Adjusted Cash (Deposits/Withdrawals):</span>\r\n//             <span className=\"value\">{adjustedCash}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Net P/L Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaChartLine className=\"card-icon\" />\r\n//             <span className=\"label\">Net P/L:</span>\r\n//             <span className=\"value\">{formatCash(netPL)}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Cash Balance Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaMoneyBillWave className=\"card-icon\" />\r\n//             <span className=\"label\">Equity:</span>\r\n//             <span className=\"value\">{cashBalance}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* RoI Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaPercentage className=\"card-icon\" />\r\n//             <span className=\"label\">RoI:</span>\r\n//             <span className=\"value\">{roi}</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cash;\r\n\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import {\r\n// //   FaMoneyBillWave,\r\n// //   FaChartLine,\r\n// //   FaCashRegister,\r\n// //   FaPercentage,\r\n// //   FaChartPie,\r\n// // } from \"react-icons/fa\";\r\n// // import { getCash } from \"../api/CashApi\";\r\n// // import { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\n// // import { fetchTransactions } from \"../api/TransactionsAPI\";\r\n// // import {\r\n// //   calculateInitialCash,\r\n// //   calculateAvailableCash,\r\n// //   calculateNetPL,\r\n// //   calculateCashBalance,\r\n// //   calculateROI,\r\n// // } from \"./CashCalc\";\r\n// // import { formatCash } from \"../func/functions\";\r\n\r\n// // const Cash = () => {\r\n// //   const [cashData, setCashData] = useState(null);\r\n// //   const [dailyPnls, setDailyPnls] = useState([]);\r\n// //   const [transactions, setTransactions] = useState([]);\r\n// //   const [loading, setLoading] = useState(true); // eslint-disable-next-line\r\n// //   const [error, setError] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchData = async () => {\r\n// //       try {\r\n// //         const [cashResponse, pnlResponse, transactionsResponse] =\r\n// //           await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\r\n\r\n// //         setCashData(cashResponse);\r\n// //         setDailyPnls(pnlResponse);\r\n// //         setTransactions(transactionsResponse);\r\n// //       } catch (error) {\r\n// //         setError(true);\r\n// //         console.error(\"Error fetching cash data:\", error);\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchData();\r\n// //   }, []);\r\n\r\n// //   if (loading) return <p>Loading...</p>;\r\n\r\n// //   const initialCash = cashData ? calculateInitialCash(cashData) : 0;\r\n// //   const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\r\n\r\n// //   const availableCash =\r\n// //     transactions.length > 0\r\n// //       ? formatCash(calculateAvailableCash(initialCash, transactions))\r\n// //       : formatCash(initialCash + netPL);\r\n\r\n// //   const cashBalance =\r\n// //     transactions.length > 0 || netPL !== 0\r\n// //       ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\r\n// //       : formatCash(initialCash);\r\n\r\n// //   const roi =\r\n// //     initialCash !== 0 && netPL !== 0\r\n// //       ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\r\n// //       : \"0%\";\r\n\r\n// //   return (\r\n// //     <div className=\"cash-container\">\r\n// //       <div className=\"cash-card-container\">\r\n// //         {/* Initial Cash Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaCashRegister className=\"card-icon\" />\r\n// //             <span className=\"label\">Capital:</span>\r\n// //             <span className=\"value\">{formatCash(initialCash)}</span>\r\n// //           </div>\r\n// //         </div>\r\n\r\n// //         {/* Ajusted Cash Card this should be the cash deposited/withdrawn */}\r\n// //         {/* <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaChartPie className=\"card-icon\" />\r\n// //             <span className=\"label\">Total:</span>\r\n// //             <span className=\"value\">{availableCash}</span>\r\n// //           </div>\r\n// //         </div> */}\r\n\r\n// //         {/* Net P/L Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaChartLine className=\"card-icon\" />\r\n// //             <span className=\"label\">Net P/L:</span>\r\n// //             <span className=\"value\">{formatCash(netPL)}</span>\r\n// //           </div>\r\n// //         </div>\r\n\r\n// //         {/* Cash Balance Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaMoneyBillWave className=\"card-icon\" />\r\n// //             <span className=\"label\">Equity:</span>\r\n// //             <span className=\"value\">{cashBalance}</span>\r\n// //           </div>\r\n// //         </div>\r\n\r\n// //         {/* RoI Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaPercentage className=\"card-icon\" />\r\n// //             <span className=\"label\">RoI:</span>\r\n// //             <span className=\"value\">{roi}</span>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Cash;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module"}