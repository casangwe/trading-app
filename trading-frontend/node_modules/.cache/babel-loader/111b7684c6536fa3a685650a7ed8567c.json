{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Graph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nconst Graph = () => {\n  const [profits, setProfits] = useState({});\n  useEffect(() => {\n    fetch(\"http://localhost:8000/profits\").then(response => response.json()).then(data => setProfits(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    if (Object.keys(profits).length > 0) {\n      renderChart();\n    }\n  }, [profits]);\n  const renderChart = () => {\n    const labels = Object.keys(profits);\n    const data = Object.values(profits);\n    const ctx = document.getElementById(\"myChart\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"Profits\",\n          data: data,\n          backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n          borderColor: \"rgba(54, 162, 235, 1)\",\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Profits Graph\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"myChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Graph;","map":{"version":3,"names":["React","useState","useEffect","Chart","Graph","profits","setProfits","fetch","then","response","json","data","catch","error","console","Object","keys","length","renderChart","labels","values","ctx","document","getElementById","type","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Graph.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nconst Graph = () => {\r\n  const [profits, setProfits] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/profits\")\r\n      .then((response) => response.json())\r\n      .then((data) => setProfits(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(profits).length > 0) {\r\n      renderChart();\r\n    }\r\n  }, [profits]);\r\n\r\n  const renderChart = () => {\r\n    const labels = Object.keys(profits);\r\n    const data = Object.values(profits);\r\n\r\n    const ctx = document.getElementById(\"myChart\");\r\n    new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: \"Profits\",\r\n            data: data,\r\n            backgroundColor: \"rgba(54, 162, 235, 0.2)\",\r\n            borderColor: \"rgba(54, 162, 235, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profits Graph</h1>\r\n      <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AAEjC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,UAAU,CAACK,IAAI,CAAC,CAAC,CAChCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACd,IAAIa,MAAM,CAACC,IAAI,CAACX,OAAO,CAAC,CAACY,MAAM,GAAG,CAAC,EAAE;MACnCC,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;EAEb,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,MAAM,GAAGJ,MAAM,CAACC,IAAI,CAACX,OAAO,CAAC;IACnC,MAAMM,IAAI,GAAGI,MAAM,CAACK,MAAM,CAACf,OAAO,CAAC;IAEnC,MAAMgB,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAC9C,IAAIpB,KAAK,CAACkB,GAAG,EAAE;MACbG,IAAI,EAAE,KAAK;MACXb,IAAI,EAAE;QACJQ,MAAM,EAAEA,MAAM;QACdM,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,SAAS;UAChBf,IAAI,EAAEA,IAAI;UACVgB,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEjC,KAAA,CAAAkC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACExC,KAAA,CAAAkC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,eAAiB,CAAC,eACtBxC,KAAA,CAAAkC,aAAA;IAAQO,EAAE,EAAC,SAAS;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAS,CAC1B,CAAC;AAEV,CAAC;AAED,eAAepC,KAAK"},"metadata":{},"sourceType":"module"}