{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\analysis\\\\AnalysisDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { performAnalysis } from \"./AnalysisGet\";\nconst AnalysisDisplay = () => {\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const results = await performAnalysis();\n        setAnalysisResults(results);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  if (error) {\n    console.error(\"Error fetching analysis data:\", error);\n  }\n  if (!analysisResults && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  const {\n    averageWin = 0,\n    averageLoss = 0\n  } = analysisResults || {};\n  const total = averageWin + averageLoss;\n  const winPercent = total > 0 ? averageWin / total * 100 : 50;\n  const data = [{\n    name: \"Average Win\",\n    value: winPercent,\n    color: \"#4a90e2\",\n    amount: averageWin\n  }, {\n    name: \"Average Loss\",\n    value: 100 - winPercent,\n    color: \"#f44336\",\n    amount: averageLoss\n  }];\n  const formatCash = value => `$${value.toFixed(2)}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-display-container\",\n    style: {\n      width: \"150px\",\n      margin: \"0 auto\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shadow-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    innerRadius: 50,\n    outerRadius: 70,\n    dataKey: \"value\",\n    startAngle: 90,\n    endAngle: -270,\n    stroke: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: entry.color,\n    style: {\n      transition: \"filter 0.3s\",\n      cursor: \"pointer\"\n    },\n    onMouseEnter: e => {\n      // Toggle shadow-circle visibility when hovering\n      document.querySelector(\".shadow-circle\").style.boxShadow = `0 0 25px ${entry.color}`;\n    },\n    onMouseLeave: () => {\n      // Remove shadow on mouse leave\n      document.querySelector(\".shadow-circle\").style.boxShadow = \"none\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          name,\n          amount\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }, name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"amount\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }\n        }, formatCash(amount)));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default AnalysisDisplay;\n\n// import React, { useState, useEffect } from \"react\";\n// import { performAnalysis } from \"./AnalysisGet\";\n// import { Line } from \"rc-progress\";\n\n// const AnalysisDisplay = () => {\n//   const [analysisResults, setAnalysisResults] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const results = await performAnalysis();\n//         setAnalysisResults(results);\n//       } catch (err) {\n//         setError(err);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const formatValue = (value, isCurrency = false) => {\n//     if (isNaN(value) || value === undefined) {\n//       return isCurrency ? \"$0.00\" : \"N/A\";\n//     }\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n//   };\n\n//   if (error) {\n//     console.error(\"Error fetching analysis data:\", error);\n//   }\n\n//   if (!analysisResults && !error) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const {\n//     absoluteReturn = 0,\n//     sharpeRatio = 0,\n//     winRate = 0,\n//     numberOfTrades = 0,\n//     winningTrades = 0,\n//     losingTrades = 0,\n//     averageWin = 0,\n//     averageLoss = 0,\n//     riskRewardRatio = 0,\n//   } = analysisResults || {};\n\n//   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\n//   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\n\n//   return (\n//     <div className=\"analysis-container\">\n//       <div className=\"analysis-metrics-row\">\n//         {/* Absolute Return Metric */}\n//         <div className=\"analysis-metric-top\">\n//           <h3>Absolute Return</h3>\n//           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\n//           <Line\n//             percent={absoluteReturnPercentage}\n//             strokeWidth=\"2\"\n//             trailWidth=\"2\"\n//             strokeColor={\"#4a90e2\"}\n//             trailColor=\"#d8e3ef\"\n//           />\n//         </div>\n\n//         {/* Sharpe Ratio Metric */}\n//         <div className=\"analysis-metric-top\">\n//           <h3>Sharpe Ratio</h3>\n//           <p>{formatValue(sharpeRatio)}</p>\n//           <Line\n//             percent={sharpeRatioPercentage}\n//             strokeWidth=\"2\"\n//             trailWidth=\"2\"\n//             strokeColor={\"#4a90e2\"}\n//             trailColor=\"#d8e3ef\"\n//           />\n//         </div>\n//       </div>\n\n//       {/* Trades, Wins, and Losses Row */}\n//       <div className=\"analysis-row\">\n//         <div className=\"analysis-circle\">\n//           <h3>Trades</h3>\n//           <p>{numberOfTrades}</p>\n//         </div>\n//         <div className=\"analysis-circle\">\n//           <h3>Wins</h3>\n//           <p>{winningTrades}</p>\n//         </div>\n//         <div className=\"analysis-circle\">\n//           <h3>Losses</h3>\n//           <p>{losingTrades}</p>\n//         </div>\n//       </div>\n\n//       {/* Additional Metrics Row */}\n//       <div className=\"analysis-metrics-row\">\n//         <div className=\"analysis-metric\">\n//           <h3>Win Rate</h3>\n//           <p>{formatValue(winRate)}%</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Avg. Win</h3>\n//           <p>{formatValue(averageWin, true)}</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Avg. Loss</h3>\n//           <p>{formatValue(averageLoss, true)}</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Risk Reward</h3>\n//           <p>{formatValue(riskRewardRatio)}</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AnalysisDisplay;","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Tooltip","ResponsiveContainer","performAnalysis","AnalysisDisplay","analysisResults","setAnalysisResults","error","setError","fetchData","results","err","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","averageWin","averageLoss","total","winPercent","data","name","value","color","amount","formatCash","toFixed","className","style","width","margin","position","height","innerRadius","outerRadius","dataKey","startAngle","endAngle","stroke","map","entry","index","key","fill","transition","cursor","onMouseEnter","e","document","querySelector","boxShadow","onMouseLeave","content","payload","length"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { performAnalysis } from \"./AnalysisGet\";\r\n\r\nconst AnalysisDisplay = () => {\r\n  const [analysisResults, setAnalysisResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const results = await performAnalysis();\r\n        setAnalysisResults(results);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    console.error(\"Error fetching analysis data:\", error);\r\n  }\r\n\r\n  if (!analysisResults && !error) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const { averageWin = 0, averageLoss = 0 } = analysisResults || {};\r\n  const total = averageWin + averageLoss;\r\n  const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\r\n\r\n  const data = [\r\n    {\r\n      name: \"Average Win\",\r\n      value: winPercent,\r\n      color: \"#4a90e2\",\r\n      amount: averageWin,\r\n    },\r\n    {\r\n      name: \"Average Loss\",\r\n      value: 100 - winPercent,\r\n      color: \"#f44336\",\r\n      amount: averageLoss,\r\n    },\r\n  ];\r\n\r\n  const formatCash = (value) => `$${value.toFixed(2)}`;\r\n\r\n  return (\r\n    <div\r\n      className=\"analysis-display-container\"\r\n      style={{ width: \"150px\", margin: \"0 auto\", position: \"relative\" }}\r\n    >\r\n      {/* Shadow div */}\r\n      <div className=\"shadow-circle\"></div>\r\n\r\n      {/* Pie Chart */}\r\n      <ResponsiveContainer width=\"100%\" height={150}>\r\n        <PieChart>\r\n          <Pie\r\n            data={data}\r\n            innerRadius={50}\r\n            outerRadius={70}\r\n            dataKey=\"value\"\r\n            startAngle={90}\r\n            endAngle={-270}\r\n            stroke=\"none\"\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={entry.color}\r\n                style={{\r\n                  transition: \"filter 0.3s\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  // Toggle shadow-circle visibility when hovering\r\n                  document.querySelector(\r\n                    \".shadow-circle\"\r\n                  ).style.boxShadow = `0 0 25px ${entry.color}`;\r\n                }}\r\n                onMouseLeave={() => {\r\n                  // Remove shadow on mouse leave\r\n                  document.querySelector(\".shadow-circle\").style.boxShadow =\r\n                    \"none\";\r\n                }}\r\n              />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip\r\n            cursor={false}\r\n            content={({ payload }) => {\r\n              if (payload && payload.length) {\r\n                const { name, amount } = payload[0].payload;\r\n                return (\r\n                  <div className=\"tooltip-content\">\r\n                    <p>{name}</p>\r\n                    <p className=\"amount\">{formatCash(amount)}</p>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            }}\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisDisplay;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { performAnalysis } from \"./AnalysisGet\";\r\n// import { Line } from \"rc-progress\";\r\n\r\n// const AnalysisDisplay = () => {\r\n//   const [analysisResults, setAnalysisResults] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const results = await performAnalysis();\r\n//         setAnalysisResults(results);\r\n//       } catch (err) {\r\n//         setError(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const formatValue = (value, isCurrency = false) => {\r\n//     if (isNaN(value) || value === undefined) {\r\n//       return isCurrency ? \"$0.00\" : \"N/A\";\r\n//     }\r\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n//   };\r\n\r\n//   if (error) {\r\n//     console.error(\"Error fetching analysis data:\", error);\r\n//   }\r\n\r\n//   if (!analysisResults && !error) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const {\r\n//     absoluteReturn = 0,\r\n//     sharpeRatio = 0,\r\n//     winRate = 0,\r\n//     numberOfTrades = 0,\r\n//     winningTrades = 0,\r\n//     losingTrades = 0,\r\n//     averageWin = 0,\r\n//     averageLoss = 0,\r\n//     riskRewardRatio = 0,\r\n//   } = analysisResults || {};\r\n\r\n//   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\r\n//   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\r\n\r\n//   return (\r\n//     <div className=\"analysis-container\">\r\n//       <div className=\"analysis-metrics-row\">\r\n//         {/* Absolute Return Metric */}\r\n//         <div className=\"analysis-metric-top\">\r\n//           <h3>Absolute Return</h3>\r\n//           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\r\n//           <Line\r\n//             percent={absoluteReturnPercentage}\r\n//             strokeWidth=\"2\"\r\n//             trailWidth=\"2\"\r\n//             strokeColor={\"#4a90e2\"}\r\n//             trailColor=\"#d8e3ef\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Sharpe Ratio Metric */}\r\n//         <div className=\"analysis-metric-top\">\r\n//           <h3>Sharpe Ratio</h3>\r\n//           <p>{formatValue(sharpeRatio)}</p>\r\n//           <Line\r\n//             percent={sharpeRatioPercentage}\r\n//             strokeWidth=\"2\"\r\n//             trailWidth=\"2\"\r\n//             strokeColor={\"#4a90e2\"}\r\n//             trailColor=\"#d8e3ef\"\r\n//           />\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Trades, Wins, and Losses Row */}\r\n//       <div className=\"analysis-row\">\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Trades</h3>\r\n//           <p>{numberOfTrades}</p>\r\n//         </div>\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Wins</h3>\r\n//           <p>{winningTrades}</p>\r\n//         </div>\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Losses</h3>\r\n//           <p>{losingTrades}</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Additional Metrics Row */}\r\n//       <div className=\"analysis-metrics-row\">\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Win Rate</h3>\r\n//           <p>{formatValue(winRate)}%</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Avg. Win</h3>\r\n//           <p>{formatValue(averageWin, true)}</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Avg. Loss</h3>\r\n//           <p>{formatValue(averageLoss, true)}</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Risk Reward</h3>\r\n//           <p>{formatValue(riskRewardRatio)}</p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}