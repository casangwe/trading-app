{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Plan.js\";\n// Plan.js\nimport React, { useEffect, useState } from \"react\";\nimport { fetchPlan } from \"./ApiCalls\";\nimport { successModal, unsuccessModal } from \"./Utility\";\nconst Plan = () => {\n  const [plans, setPlans] = useState([]);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [formData, setFormData] = useState({\n    dates: \"\",\n    category: \"\",\n    plan: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (showEditModal) {\n      setSelectedPlan({\n        ...selectedPlan,\n        [name]: value\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const fetchPlanData = async () => {\n    try {\n      const planData = await fetchPlan();\n      setPlans(planData);\n      successModal();\n    } catch (error) {\n      setError(error.message);\n      unsuccessModal(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchPlanData();\n  }, []);\n  const handleItemClick = plan => {\n    selectedPlan(plan);\n    setShowEditModal(true);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:8000/plan/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...formData\n        })\n      });\n      console.log(formData);\n      if (!response.ok) {\n        throw new Error(\"Failed to add Plan\");\n      }\n      successModal();\n      setShowModal(false);\n      setFormData({\n        dates: \"\",\n        category: \"\",\n        plan: \"\"\n      });\n      fetchPlanData();\n    } catch (error) {\n      console.log(\"Error adding Plan: \", error);\n    }\n  };\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formattedPlan = {\n        id: selectedPlan.id,\n        dates: selectedPlan.dates,\n        category: selectedPlan.category,\n        plan: selectedPlan.plan\n      };\n      const response = await fetch(`http://localhost:8000/plan/${selectedPlan.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formattedPlan)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update Trade\");\n      }\n      successModal();\n      setShowEditModal(false);\n      fetchPlanData();\n    } catch (error) {\n      console.log(\"Error updating Plan: \", error);\n    }\n  };\n  useEffect(() => {\n    if (selectedPlan) {\n      selectedPlan({\n        ...selectedPlan,\n        ...formData\n      });\n    }\n  }, [formData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"Plan\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Details about the trading plan.\"));\n};\nexport default Plan;","map":{"version":3,"names":["React","useEffect","useState","fetchPlan","successModal","unsuccessModal","Plan","plans","setPlans","error","setError","showModal","setShowModal","selectedPlan","setSelectedPlan","showEditModal","setShowEditModal","formData","setFormData","dates","category","plan","handleChange","e","name","value","target","fetchPlanData","planData","message","handleItemClick","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","console","log","ok","Error","handleEditSubmit","formattedPlan","id","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Plan.js"],"sourcesContent":["// Plan.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { fetchPlan } from \"./ApiCalls\";\r\nimport { successModal, unsuccessModal } from \"./Utility\";\r\n\r\nconst Plan = () => {\r\n  const [plans, setPlans] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    dates: \"\",\r\n    category: \"\",\r\n    plan: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (showEditModal) {\r\n      setSelectedPlan({ ...selectedPlan, [name]: value });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const fetchPlanData = async () => {\r\n    try {\r\n      const planData = await fetchPlan();\r\n      setPlans(planData);\r\n      successModal();\r\n    } catch (error) {\r\n      setError(error.message);\r\n      unsuccessModal(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchPlanData();\r\n  }, []);\r\n\r\n  const handleItemClick = (plan) => {\r\n    selectedPlan(plan);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/plan/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...formData }),\r\n      });\r\n      console.log(formData);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to add Plan\");\r\n      }\r\n      successModal();\r\n      setShowModal(false);\r\n      setFormData({\r\n        dates: \"\",\r\n        category: \"\",\r\n        plan: \"\",\r\n      });\r\n      fetchPlanData();\r\n    } catch (error) {\r\n      console.log(\"Error adding Plan: \", error);\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formattedPlan = {\r\n        id: selectedPlan.id,\r\n        dates: selectedPlan.dates,\r\n        category: selectedPlan.category,\r\n        plan: selectedPlan.plan,\r\n      };\r\n      const response = await fetch(\r\n        `http://localhost:8000/plan/${selectedPlan.id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formattedPlan),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update Trade\");\r\n      }\r\n      successModal();\r\n      setShowEditModal(false);\r\n      fetchPlanData();\r\n    } catch (error) {\r\n      console.log(\"Error updating Plan: \", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (selectedPlan) {\r\n      selectedPlan({ ...selectedPlan, ...formData });\r\n    }\r\n  }, [formData]);\r\n\r\n  return (\r\n    <div className=\"plan\">\r\n      <h2>Plan</h2>\r\n      {/* Add plan implementation here */}\r\n      <p>Details about the trading plan.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plan;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,YAAY,EAAEC,cAAc,QAAQ,WAAW;AAExD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,IAAIX,aAAa,EAAE;MACjBD,eAAe,CAAC;QAAE,GAAGD,YAAY;QAAE,CAACW,IAAI,GAAGC;MAAM,CAAC,CAAC;IACrD,CAAC,MAAM;MACLP,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE,CAACO,IAAI,GAAGC;MAAM,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,SAAS,CAAC,CAAC;MAClCK,QAAQ,CAACoB,QAAQ,CAAC;MAClBxB,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACoB,OAAO,CAAC;MACvBxB,cAAc,CAACI,KAAK,CAACoB,OAAO,CAAC;IAC/B;EACF,CAAC;EACD5B,SAAS,CAAC,MAAM;IACd0B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAIT,IAAI,IAAK;IAChCR,YAAY,CAACQ,IAAI,CAAC;IAClBL,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMe,YAAY,GAAG,MAAOR,CAAC,IAAK;IAChCA,CAAC,CAACS,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE,GAAGtB;QAAS,CAAC;MACtC,CAAC,CAAC;MACFuB,OAAO,CAACC,GAAG,CAACxB,QAAQ,CAAC;MACrB,IAAI,CAACgB,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;MACAvC,YAAY,CAAC,CAAC;MACdQ,YAAY,CAAC,KAAK,CAAC;MACnBM,WAAW,CAAC;QACVC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACR,CAAC,CAAC;MACFM,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACd+B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEhC,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,MAAMmC,gBAAgB,GAAG,MAAOrB,CAAC,IAAK;IACpCA,CAAC,CAACS,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMa,aAAa,GAAG;QACpBC,EAAE,EAAEjC,YAAY,CAACiC,EAAE;QACnB3B,KAAK,EAAEN,YAAY,CAACM,KAAK;QACzBC,QAAQ,EAAEP,YAAY,CAACO,QAAQ;QAC/BC,IAAI,EAAER,YAAY,CAACQ;MACrB,CAAC;MACD,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CACzB,8BAA6BrB,YAAY,CAACiC,EAAG,EAAC,EAC/C;QACEX,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,aAAa;MACpC,CACF,CAAC;MACD,IAAI,CAACZ,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACAvC,YAAY,CAAC,CAAC;MACdY,gBAAgB,CAAC,KAAK,CAAC;MACvBW,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACd+B,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEhC,KAAK,CAAC;IAC7C;EACF,CAAC;EACDR,SAAS,CAAC,MAAM;IACd,IAAIY,YAAY,EAAE;MAChBA,YAAY,CAAC;QAAE,GAAGA,YAAY;QAAE,GAAGI;MAAS,CAAC,CAAC;IAChD;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEjB,KAAA,CAAA+C,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBtD,KAAA,CAAA+C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,MAAQ,CAAC,eAEbtD,KAAA,CAAA+C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iCAAkC,CAClC,CAAC;AAEV,CAAC;AAED,eAAehD,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}