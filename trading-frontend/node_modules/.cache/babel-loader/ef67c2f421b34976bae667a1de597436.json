{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/home.css\";\nimport Account from \"./Account\";\nimport NewTrade from \"./NewTrade\";\nimport RecentTrades from \"./RecentTrades\";\nimport BiggestWinsLosses from \"./BiggestWinsLosses\";\nimport { formatDate, showSuccessModal, showUnsuccessModal, makeElementDraggable } from \"./Utility\";\nimport Watchlist from \"./Watchlist\";\nconst Home = () => {\n  const [recentTrades, setRecentTrades] = useState([]);\n  useEffect(() => {\n    fetchRecentTrades(); //get trades from backend\n  }, []);\n  const fetchRecentTrades = () => {\n    fetch(\"http://localhost:8000/trades/\").then(response => response.json()).then(data => {\n      setRecentTrades(data); // Update state with fetched data\n    }).catch(error => {\n      console.error(\"Error fetching recent trades:\", error);\n    });\n  };\n\n  // submit new trade\n  const handleNewTradeSubmit = formData => {\n    // POST request to backend to add new trade\n    fetch(\"http://localhost:8000/trades/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      if (response.ok) {\n        fetchRecentTrades();\n        showSuccessModal();\n      } else {\n        throw new Error(response.statusText); // Throw an error with the response status text\n      }\n    }).catch(error => {\n      console.error(\"Error adding new trade:\", error);\n      showUnsuccessModal(error.message); // Show the error modal with the error message\n    });\n  };\n\n  // Function to refresh the list of recent trades\n  const handleRefresh = () => {\n    fetchRecentTrades();\n    showSuccessModal();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    trades: recentTrades,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewTrade, {\n    onTradeSubmit: handleNewTradeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RecentTrades, {\n    recentTrades: recentTrades,\n    formatDate: formatDate,\n    onRefresh: handleRefresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BiggestWinsLosses, {\n    recentTrades: recentTrades,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Watchlist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","Account","NewTrade","RecentTrades","BiggestWinsLosses","formatDate","showSuccessModal","showUnsuccessModal","makeElementDraggable","Watchlist","Home","recentTrades","setRecentTrades","fetchRecentTrades","fetch","then","response","json","data","catch","error","console","handleNewTradeSubmit","formData","method","headers","body","JSON","stringify","ok","Error","statusText","message","handleRefresh","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","trades","onTradeSubmit","onRefresh"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/home.css\";\r\nimport Account from \"./Account\";\r\nimport NewTrade from \"./NewTrade\";\r\nimport RecentTrades from \"./RecentTrades\";\r\nimport BiggestWinsLosses from \"./BiggestWinsLosses\";\r\nimport {\r\n  formatDate,\r\n  showSuccessModal,\r\n  showUnsuccessModal,\r\n  makeElementDraggable,\r\n} from \"./Utility\";\r\nimport Watchlist from \"./Watchlist\";\r\n\r\nconst Home = () => {\r\n  const [recentTrades, setRecentTrades] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRecentTrades(); //get trades from backend\r\n  }, []);\r\n\r\n  const fetchRecentTrades = () => {\r\n    fetch(\"http://localhost:8000/trades/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setRecentTrades(data); // Update state with fetched data\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching recent trades:\", error);\r\n      });\r\n  };\r\n\r\n  // submit new trade\r\n  const handleNewTradeSubmit = (formData) => {\r\n    // POST request to backend to add new trade\r\n    fetch(\"http://localhost:8000/trades/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          fetchRecentTrades();\r\n          showSuccessModal();\r\n        } else {\r\n          throw new Error(response.statusText); // Throw an error with the response status text\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding new trade:\", error);\r\n        showUnsuccessModal(error.message); // Show the error modal with the error message\r\n      });\r\n  };\r\n\r\n  // Function to refresh the list of recent trades\r\n  const handleRefresh = () => {\r\n    fetchRecentTrades();\r\n    showSuccessModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Account trades={recentTrades} />\r\n      <NewTrade onTradeSubmit={handleNewTradeSubmit} />\r\n      <RecentTrades\r\n        recentTrades={recentTrades}\r\n        formatDate={formatDate}\r\n        onRefresh={handleRefresh}\r\n      />\r\n      <BiggestWinsLosses recentTrades={recentTrades} />\r\n      <Watchlist />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}