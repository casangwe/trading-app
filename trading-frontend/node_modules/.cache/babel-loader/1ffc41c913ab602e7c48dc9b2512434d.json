{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\BiggestWinsLosses.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/biggestWinsLosses.css\";\nconst BiggestWinsLosses = ({\n  recentTrades\n}) => {\n  const [profitTrades, setProfitTrades] = useState([]);\n  useEffect(() => {\n    console.log(\"Recent trades:\", recentTrades);\n    if (recentTrades && recentTrades.length > 0) {\n      const tradesWithExitPrices = recentTrades.filter(trade => trade.exitPrice);\n      console.log(\"Trades with exit prices:\", tradesWithExitPrices);\n      const tradesWithProfits = tradesWithExitPrices.map(trade => ({\n        ...trade,\n        profitData: calculateProfit(trade)\n      }));\n      console.log(\"Trades with profits:\", tradesWithProfits);\n      const sortedTrades = tradesWithProfits.sort((a, b) => parseFloat(b.profitData.profit) - parseFloat(a.profitData.profit));\n      console.log(\"Sorted trades:\", sortedTrades);\n      const top5Trades = sortedTrades.slice(0, 5);\n      console.log(\"Top 5 trades:\", top5Trades);\n      setProfitTrades(top5Trades);\n    }\n  }, [recentTrades]);\n  const calculateProfit = trade => {\n    if (trade.entryPrice && trade.exitPrice) {\n      const entryPrice = parseFloat(trade.entryPrice);\n      const exitPrice = parseFloat(trade.exitPrice);\n      const profit = exitPrice - entryPrice;\n      const profitPercent = (profit / entryPrice * 100).toFixed(2);\n      return {\n        profit: profit.toFixed(2),\n        profitPercent\n      };\n    }\n    return {\n      profit: \"N/A\",\n      profitPercent: \"N/A\"\n    }; // Handle missing prices\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"biggest-wins-losses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Top 5 Profitable Trades\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, profitTrades.map(trade => /*#__PURE__*/React.createElement(\"li\", {\n    key: trade.trade_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Symbol: \", trade.option_symbol), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Profit: $\", trade.profitData.profit, \" (\", trade.profitData.profitPercent, \"%)\")))));\n};\nexport default BiggestWinsLosses;\n\n// import React from \"react\";\n// import \"./styles/biggestWinsLosses.css\";\n\n// const BiggestWinsLosses = ({ trades }) => {\n//   return (\n//     <div className=\"wins-lost\">\n//       <div className=\"card\">\n//         <p>P/L</p>\n//         <p className=\"menu\">::</p>\n//       </div>\n//       <div className=\"card-list\">\n//         <ul className=\"cards\"></ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BiggestWinsLosses;","map":{"version":3,"names":["React","useState","useEffect","BiggestWinsLosses","recentTrades","profitTrades","setProfitTrades","console","log","length","tradesWithExitPrices","filter","trade","exitPrice","tradesWithProfits","map","profitData","calculateProfit","sortedTrades","sort","a","b","parseFloat","profit","top5Trades","slice","entryPrice","profitPercent","toFixed","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","trade_id","option_symbol"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/BiggestWinsLosses.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/biggestWinsLosses.css\";\r\n\r\nconst BiggestWinsLosses = ({ recentTrades }) => {\r\n  const [profitTrades, setProfitTrades] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Recent trades:\", recentTrades);\r\n    if (recentTrades && recentTrades.length > 0) {\r\n      const tradesWithExitPrices = recentTrades.filter(\r\n        (trade) => trade.exitPrice\r\n      );\r\n      console.log(\"Trades with exit prices:\", tradesWithExitPrices);\r\n\r\n      const tradesWithProfits = tradesWithExitPrices.map((trade) => ({\r\n        ...trade,\r\n        profitData: calculateProfit(trade),\r\n      }));\r\n      console.log(\"Trades with profits:\", tradesWithProfits);\r\n\r\n      const sortedTrades = tradesWithProfits.sort(\r\n        (a, b) =>\r\n          parseFloat(b.profitData.profit) - parseFloat(a.profitData.profit)\r\n      );\r\n      console.log(\"Sorted trades:\", sortedTrades);\r\n\r\n      const top5Trades = sortedTrades.slice(0, 5);\r\n      console.log(\"Top 5 trades:\", top5Trades);\r\n\r\n      setProfitTrades(top5Trades);\r\n    }\r\n  }, [recentTrades]);\r\n\r\n  const calculateProfit = (trade) => {\r\n    if (trade.entryPrice && trade.exitPrice) {\r\n      const entryPrice = parseFloat(trade.entryPrice);\r\n      const exitPrice = parseFloat(trade.exitPrice);\r\n      const profit = exitPrice - entryPrice;\r\n      const profitPercent = ((profit / entryPrice) * 100).toFixed(2);\r\n      return { profit: profit.toFixed(2), profitPercent };\r\n    }\r\n    return { profit: \"N/A\", profitPercent: \"N/A\" }; // Handle missing prices\r\n  };\r\n\r\n  return (\r\n    <div className=\"biggest-wins-losses\">\r\n      <h2>Top 5 Profitable Trades</h2>\r\n      <ul>\r\n        {profitTrades.map((trade) => (\r\n          <li key={trade.trade_id}>\r\n            <p>Symbol: {trade.option_symbol}</p>\r\n            <p>\r\n              Profit: ${trade.profitData.profit} (\r\n              {trade.profitData.profitPercent}%)\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiggestWinsLosses;\r\n\r\n// import React from \"react\";\r\n// import \"./styles/biggestWinsLosses.css\";\r\n\r\n// const BiggestWinsLosses = ({ trades }) => {\r\n//   return (\r\n//     <div className=\"wins-lost\">\r\n//       <div className=\"card\">\r\n//         <p>P/L</p>\r\n//         <p className=\"menu\">::</p>\r\n//       </div>\r\n//       <div className=\"card-list\">\r\n//         <ul className=\"cards\"></ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BiggestWinsLosses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}