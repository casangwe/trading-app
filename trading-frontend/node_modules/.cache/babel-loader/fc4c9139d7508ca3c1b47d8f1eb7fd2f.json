{"ast":null,"code":"// components/controllers/api/CashApi.js\n\nconst API_BASE_URL = \"http://localhost:8000\";\nconst getToken = () => {\n  return localStorage.getItem(\"access_token\");\n};\n\n// Function to get cash data for a specific user\nexport const getCash = async userId => {\n  const token = getToken();\n  console.log(\"userId\");\n  try {\n    const response = await fetch(`${API_BASE_URL}/cash/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      const errorDetails = await response.json();\n      throw new Error(`Error fetching cash data: ${errorDetails.detail || response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Get Cash Error:\", error);\n    throw error;\n  }\n};\n\n// Function to create a new cash record\nexport const createCash = async cashData => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${API_BASE_URL}/cash/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(cashData)\n    });\n    if (!response.ok) {\n      const errorDetails = await response.json();\n      throw new Error(`Error creating cash record: ${errorDetails.detail || response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Create Cash Error:\", error);\n    throw error;\n  }\n};\n\n// Function to update an existing cash record\nexport const updateCash = async (userId, cashData) => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${API_BASE_URL}/cash/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(cashData)\n    });\n    if (!response.ok) {\n      const errorDetails = await response.json();\n      throw new Error(`Error updating cash record: ${errorDetails.detail || response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Update Cash Error:\", error);\n    throw error;\n  }\n};\n\n// Function to delete a cash record\nexport const deleteCash = async userId => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${API_BASE_URL}/cash/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      const errorDetails = await response.json();\n      throw new Error(`Error deleting cash record: ${errorDetails.detail || response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Delete Cash Error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getToken","localStorage","getItem","getCash","userId","token","console","log","response","fetch","method","headers","Authorization","ok","errorDetails","json","Error","detail","statusText","error","createCash","cashData","body","JSON","stringify","updateCash","deleteCash"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/api/CashApi.js"],"sourcesContent":["// components/controllers/api/CashApi.js\r\n\r\nconst API_BASE_URL = \"http://localhost:8000\";\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem(\"access_token\");\r\n};\r\n\r\n// Function to get cash data for a specific user\r\nexport const getCash = async (userId) => {\r\n  const token = getToken();\r\n  console.log(\"userId\");\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/cash/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      const errorDetails = await response.json();\r\n      throw new Error(\r\n        `Error fetching cash data: ${\r\n          errorDetails.detail || response.statusText\r\n        }`\r\n      );\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Get Cash Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to create a new cash record\r\nexport const createCash = async (cashData) => {\r\n  const token = getToken();\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/cash/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(cashData),\r\n    });\r\n    if (!response.ok) {\r\n      const errorDetails = await response.json();\r\n      throw new Error(\r\n        `Error creating cash record: ${\r\n          errorDetails.detail || response.statusText\r\n        }`\r\n      );\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Create Cash Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to update an existing cash record\r\nexport const updateCash = async (userId, cashData) => {\r\n  const token = getToken();\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/cash/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(cashData),\r\n    });\r\n    if (!response.ok) {\r\n      const errorDetails = await response.json();\r\n      throw new Error(\r\n        `Error updating cash record: ${\r\n          errorDetails.detail || response.statusText\r\n        }`\r\n      );\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Cash Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to delete a cash record\r\nexport const deleteCash = async (userId) => {\r\n  const token = getToken();\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/cash/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      const errorDetails = await response.json();\r\n      throw new Error(\r\n        `Error deleting cash record: ${\r\n          errorDetails.detail || response.statusText\r\n        }`\r\n      );\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Cash Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}