{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\func\\\\functions.js\";\n// components/controllers/func/functions.js\n\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\n// Existing utility functions\nexport const formatDate = dateStr => {\n  if (!dateStr || !dateStr.includes(\"-\")) return \"\";\n  const dateParts = dateStr.split(\"-\");\n  const month = dateParts[1];\n  const day = dateParts[2];\n  return `${month}/${day}`;\n};\nexport const ProtectedRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem(\"access_token\");\n  if (!token) {\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/start\",\n      replace: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    });\n  }\n  return children;\n};\nexport const decodeJWT = token => {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(atob(base64).split(\"\").map(c => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2)).join(\"\"));\n  return JSON.parse(jsonPayload);\n};\nexport const getUserId = () => {\n  const userDataString = localStorage.getItem(\"user_data\");\n  if (!userDataString) {\n    console.error(\"No user data found in localStorage\");\n    return null;\n  }\n  try {\n    const userData = JSON.parse(userDataString);\n    return userData.sub;\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n    return null;\n  }\n};\nexport const formatCash = amount => {\n  if (typeof amount === \"string\") {\n    amount = parseFloat(amount);\n  }\n  if (typeof amount !== \"number\") return \"\";\n  return amount.toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n};\nexport const splitText = text => {\n  return text.split(\"|\").map((part, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    style: {\n      marginTop: \"10px\",\n      marginBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, part.trim()));\n};\n\n// New utility functions\n\n// Resizes textarea based on its content\nexport const handleTextAreaResize = e => {\n  e.target.style.height = \"auto\";\n  e.target.style.height = `${e.target.scrollHeight}px`;\n};\n\n// Toggle edit mode for fields\nexport const toggleEdit = (setIsEditable, setShowUpdateButton) => {\n  setIsEditable(true);\n  setShowUpdateButton(true);\n};\n\n// Handles form submission\nexport const handleSubmit = (e, onSave, formData, setShowUpdateButton, setIsEditable) => {\n  e.preventDefault();\n  onSave(formData);\n  setShowUpdateButton(false);\n  setIsEditable(false);\n};\n\n// //components/controllers/func/functions.js\n\n// import React from \"react\";\n// import { Navigate } from \"react-router-dom\";\n\n// export const formatDate = (dateStr) => {\n//   if (!dateStr || !dateStr.includes(\"-\")) return \"\";\n//   const dateParts = dateStr.split(\"-\");\n//   const month = dateParts[1];\n//   const day = dateParts[2];\n//   return `${month}/${day}`;\n// };\n\n// export const ProtectedRoute = ({ children }) => {\n//   const token = localStorage.getItem(\"access_token\");\n\n//   if (!token) {\n//     return <Navigate to=\"/start\" replace />;\n//   }\n\n//   return children;\n// };\n\n// export const decodeJWT = (token) => {\n//   const base64Url = token.split(\".\")[1];\n//   const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n//   const jsonPayload = decodeURIComponent(\n//     atob(base64)\n//       .split(\"\")\n//       .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\n//       .join(\"\")\n//   );\n\n//   return JSON.parse(jsonPayload);\n// };\n\n// export const getUserId = () => {\n//   const userDataString = localStorage.getItem(\"user_data\");\n//   if (!userDataString) {\n//     console.error(\"No user data found in localStorage\");\n//     return null;\n//   }\n\n//   try {\n//     const userData = JSON.parse(userDataString);\n//     return userData.sub;\n//   } catch (error) {\n//     console.error(\"Error parsing user data:\", error);\n//     return null;\n//   }\n// };\n\n// export const formatCash = (amount) => {\n//   if (typeof amount === \"string\") {\n//     amount = parseFloat(amount);\n//   }\n//   if (typeof amount !== \"number\") return \"\";\n\n//   return amount.toLocaleString(\"en-US\", {\n//     style: \"currency\",\n//     currency: \"USD\",\n//     minimumFractionDigits: 2,\n//     maximumFractionDigits: 2,\n//   });\n// };\n// export const splitText = (text) => {\n//   return text.split(\"|\").map((part, index) => (\n//     <p key={index} style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n//       {part.trim()}\n//     </p>\n//   ));\n// };","map":{"version":3,"names":["React","Navigate","formatDate","dateStr","includes","dateParts","split","month","day","ProtectedRoute","children","token","localStorage","getItem","createElement","to","replace","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","decodeJWT","base64Url","base64","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","getUserId","userDataString","console","error","userData","sub","formatCash","amount","parseFloat","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","splitText","text","part","index","key","marginTop","marginBottom","trim","handleTextAreaResize","e","target","height","scrollHeight","toggleEdit","setIsEditable","setShowUpdateButton","handleSubmit","onSave","formData","preventDefault"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/func/functions.js"],"sourcesContent":["// components/controllers/func/functions.js\r\n\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n// Existing utility functions\r\nexport const formatDate = (dateStr) => {\r\n  if (!dateStr || !dateStr.includes(\"-\")) return \"\";\r\n  const dateParts = dateStr.split(\"-\");\r\n  const month = dateParts[1];\r\n  const day = dateParts[2];\r\n  return `${month}/${day}`;\r\n};\r\n\r\nexport const ProtectedRoute = ({ children }) => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  if (!token) {\r\n    return <Navigate to=\"/start\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport const decodeJWT = (token) => {\r\n  const base64Url = token.split(\".\")[1];\r\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  const jsonPayload = decodeURIComponent(\r\n    atob(base64)\r\n      .split(\"\")\r\n      .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\r\n      .join(\"\")\r\n  );\r\n\r\n  return JSON.parse(jsonPayload);\r\n};\r\n\r\nexport const getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const formatCash = (amount) => {\r\n  if (typeof amount === \"string\") {\r\n    amount = parseFloat(amount);\r\n  }\r\n  if (typeof amount !== \"number\") return \"\";\r\n\r\n  return amount.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n};\r\n\r\nexport const splitText = (text) => {\r\n  return text.split(\"|\").map((part, index) => (\r\n    <p key={index} style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n      {part.trim()}\r\n    </p>\r\n  ));\r\n};\r\n\r\n// New utility functions\r\n\r\n// Resizes textarea based on its content\r\nexport const handleTextAreaResize = (e) => {\r\n  e.target.style.height = \"auto\";\r\n  e.target.style.height = `${e.target.scrollHeight}px`;\r\n};\r\n\r\n// Toggle edit mode for fields\r\nexport const toggleEdit = (setIsEditable, setShowUpdateButton) => {\r\n  setIsEditable(true);\r\n  setShowUpdateButton(true);\r\n};\r\n\r\n// Handles form submission\r\nexport const handleSubmit = (\r\n  e,\r\n  onSave,\r\n  formData,\r\n  setShowUpdateButton,\r\n  setIsEditable\r\n) => {\r\n  e.preventDefault();\r\n  onSave(formData);\r\n  setShowUpdateButton(false);\r\n  setIsEditable(false);\r\n};\r\n\r\n// //components/controllers/func/functions.js\r\n\r\n// import React from \"react\";\r\n// import { Navigate } from \"react-router-dom\";\r\n\r\n// export const formatDate = (dateStr) => {\r\n//   if (!dateStr || !dateStr.includes(\"-\")) return \"\";\r\n//   const dateParts = dateStr.split(\"-\");\r\n//   const month = dateParts[1];\r\n//   const day = dateParts[2];\r\n//   return `${month}/${day}`;\r\n// };\r\n\r\n// export const ProtectedRoute = ({ children }) => {\r\n//   const token = localStorage.getItem(\"access_token\");\r\n\r\n//   if (!token) {\r\n//     return <Navigate to=\"/start\" replace />;\r\n//   }\r\n\r\n//   return children;\r\n// };\r\n\r\n// export const decodeJWT = (token) => {\r\n//   const base64Url = token.split(\".\")[1];\r\n//   const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n//   const jsonPayload = decodeURIComponent(\r\n//     atob(base64)\r\n//       .split(\"\")\r\n//       .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\r\n//       .join(\"\")\r\n//   );\r\n\r\n//   return JSON.parse(jsonPayload);\r\n// };\r\n\r\n// export const getUserId = () => {\r\n//   const userDataString = localStorage.getItem(\"user_data\");\r\n//   if (!userDataString) {\r\n//     console.error(\"No user data found in localStorage\");\r\n//     return null;\r\n//   }\r\n\r\n//   try {\r\n//     const userData = JSON.parse(userDataString);\r\n//     return userData.sub;\r\n//   } catch (error) {\r\n//     console.error(\"Error parsing user data:\", error);\r\n//     return null;\r\n//   }\r\n// };\r\n\r\n// export const formatCash = (amount) => {\r\n//   if (typeof amount === \"string\") {\r\n//     amount = parseFloat(amount);\r\n//   }\r\n//   if (typeof amount !== \"number\") return \"\";\r\n\r\n//   return amount.toLocaleString(\"en-US\", {\r\n//     style: \"currency\",\r\n//     currency: \"USD\",\r\n//     minimumFractionDigits: 2,\r\n//     maximumFractionDigits: 2,\r\n//   });\r\n// };\r\n// export const splitText = (text) => {\r\n//   return text.split(\"|\").map((part, index) => (\r\n//     <p key={index} style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n//       {part.trim()}\r\n//     </p>\r\n//   ));\r\n// };\r\n"],"mappings":"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C9BF,CAAC,CAACC,MAAM,CAACd,KAAK,CAACe,MAAM,GAAI,GAAEF,CAAC,CAACC,MAAM,CAACE,YAAa,IAAG;AACtD,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGA,CAACC,aAAa,EAAEC,mBAAmB,KAAK;EAChED,aAAa,CAAC,IAAI,CAAC;EACnBC,mBAAmB,CAAC,IAAI,CAAC;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGA,CAC1BP,CAAC,EACDQ,MAAM,EACNC,QAAQ,EACRH,mBAAmB,EACnBD,aAAa,KACV;EACHL,CAAC,CAACU,cAAc,CAAC,CAAC;EAClBF,MAAM,CAACC,QAAQ,CAAC;EAChBH,mBAAmB,CAAC,KAAK,CAAC;EAC1BD,aAAa,CAAC,KAAK,CAAC;AACtB,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}