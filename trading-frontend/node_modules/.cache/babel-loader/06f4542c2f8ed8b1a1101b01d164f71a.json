{"ast":null,"code":"// AnalysisGet.js\n\nimport { getCash } from \"../api/CashApi\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { fetchTrades } from \"../api/TradesAPI\";\nimport { calculateSharpeRatio, calculateTotalROI, calculateNumberOfTrades, calculateTotalNetPL, calculateCashBalance, calculateWinningTrades, calculateLosingTrades, calculateWinRate, calculateAverageWin, calculateAverageLoss, calculateRiskRewardRatio, calculateMaximumDrawdown } from \"./AnalysisCalc\";\nexport const performAnalysis = async () => {\n  try {\n    // Fetch necessary data from the APIs\n    const cashData = await getCash();\n    const dailyPnls = await fetchDailyPnls();\n    const trades = await fetchTrades();\n\n    // Check and log fetched data\n    console.log(\"Fetched Cash Data:\", cashData);\n    console.log(\"Fetched Daily P&L Data:\", dailyPnls);\n    console.log(\"Fetched Trades Data:\", trades);\n\n    // Calculate metrics\n    const totalROI = calculateTotalROI(trades);\n    const numberOfTrades = calculateNumberOfTrades(trades);\n    const sharpeRatio = calculateSharpeRatio(dailyPnls);\n    const netPL = calculateTotalNetPL(trades);\n    const cashBalance = calculateCashBalance(cashData.initial_cash, netPL);\n    const winningTrades = calculateWinningTrades(trades);\n    const losingTrades = calculateLosingTrades(trades);\n    const winRate = calculateWinRate(trades);\n    const averageWin = calculateAverageWin(trades);\n    const averageLoss = calculateAverageLoss(trades);\n    const riskRewardRatio = calculateRiskRewardRatio(trades);\n    const maximumDrawdown = calculateMaximumDrawdown(dailyPnls);\n\n    // Prepare the results object\n    const analysisResults = {\n      totalROI,\n      numberOfTrades,\n      sharpeRatio,\n      netPL,\n      cashBalance,\n      winningTrades,\n      losingTrades,\n      winRate,\n      averageWin,\n      averageLoss,\n      riskRewardRatio,\n      maximumDrawdown\n    };\n    return analysisResults;\n  } catch (error) {\n    console.error(\"Analysis Error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getCash","fetchDailyPnls","fetchTrades","calculateSharpeRatio","calculateTotalROI","calculateNumberOfTrades","calculateTotalNetPL","calculateCashBalance","calculateWinningTrades","calculateLosingTrades","calculateWinRate","calculateAverageWin","calculateAverageLoss","calculateRiskRewardRatio","calculateMaximumDrawdown","performAnalysis","cashData","dailyPnls","trades","console","log","totalROI","numberOfTrades","sharpeRatio","netPL","cashBalance","initial_cash","winningTrades","losingTrades","winRate","averageWin","averageLoss","riskRewardRatio","maximumDrawdown","analysisResults","error"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisGet.js"],"sourcesContent":["// AnalysisGet.js\r\n\r\nimport { getCash } from \"../api/CashApi\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\nimport {\r\n  calculateSharpeRatio,\r\n  calculateTotalROI,\r\n  calculateNumberOfTrades,\r\n  calculateTotalNetPL,\r\n  calculateCashBalance,\r\n  calculateWinningTrades,\r\n  calculateLosingTrades,\r\n  calculateWinRate,\r\n  calculateAverageWin,\r\n  calculateAverageLoss,\r\n  calculateRiskRewardRatio,\r\n  calculateMaximumDrawdown,\r\n} from \"./AnalysisCalc\";\r\n\r\nexport const performAnalysis = async () => {\r\n  try {\r\n    // Fetch necessary data from the APIs\r\n    const cashData = await getCash();\r\n    const dailyPnls = await fetchDailyPnls();\r\n    const trades = await fetchTrades();\r\n\r\n    // Check and log fetched data\r\n    console.log(\"Fetched Cash Data:\", cashData);\r\n    console.log(\"Fetched Daily P&L Data:\", dailyPnls);\r\n    console.log(\"Fetched Trades Data:\", trades);\r\n\r\n    // Calculate metrics\r\n    const totalROI = calculateTotalROI(trades);\r\n    const numberOfTrades = calculateNumberOfTrades(trades);\r\n    const sharpeRatio = calculateSharpeRatio(dailyPnls);\r\n    const netPL = calculateTotalNetPL(trades);\r\n    const cashBalance = calculateCashBalance(cashData.initial_cash, netPL);\r\n    const winningTrades = calculateWinningTrades(trades);\r\n    const losingTrades = calculateLosingTrades(trades);\r\n    const winRate = calculateWinRate(trades);\r\n    const averageWin = calculateAverageWin(trades);\r\n    const averageLoss = calculateAverageLoss(trades);\r\n    const riskRewardRatio = calculateRiskRewardRatio(trades);\r\n    const maximumDrawdown = calculateMaximumDrawdown(dailyPnls);\r\n\r\n    // Prepare the results object\r\n    const analysisResults = {\r\n      totalROI,\r\n      numberOfTrades,\r\n      sharpeRatio,\r\n      netPL,\r\n      cashBalance,\r\n      winningTrades,\r\n      losingTrades,\r\n      winRate,\r\n      averageWin,\r\n      averageLoss,\r\n      riskRewardRatio,\r\n      maximumDrawdown,\r\n    };\r\n\r\n    return analysisResults;\r\n  } catch (error) {\r\n    console.error(\"Analysis Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,SAASA,OAAO,QAAQ,gBAAgB;AACxC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,oBAAoB,EACpBC,iBAAiB,EACjBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,sBAAsB,EACtBC,qBAAqB,EACrBC,gBAAgB,EAChBC,mBAAmB,EACnBC,oBAAoB,EACpBC,wBAAwB,EACxBC,wBAAwB,QACnB,gBAAgB;AAEvB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAAC,CAAC;IAChC,MAAMiB,SAAS,GAAG,MAAMhB,cAAc,CAAC,CAAC;IACxC,MAAMiB,MAAM,GAAG,MAAMhB,WAAW,CAAC,CAAC;;IAElC;IACAiB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAAC;IAC3CG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,SAAS,CAAC;IACjDE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC;;IAE3C;IACA,MAAMG,QAAQ,GAAGjB,iBAAiB,CAACc,MAAM,CAAC;IAC1C,MAAMI,cAAc,GAAGjB,uBAAuB,CAACa,MAAM,CAAC;IACtD,MAAMK,WAAW,GAAGpB,oBAAoB,CAACc,SAAS,CAAC;IACnD,MAAMO,KAAK,GAAGlB,mBAAmB,CAACY,MAAM,CAAC;IACzC,MAAMO,WAAW,GAAGlB,oBAAoB,CAACS,QAAQ,CAACU,YAAY,EAAEF,KAAK,CAAC;IACtE,MAAMG,aAAa,GAAGnB,sBAAsB,CAACU,MAAM,CAAC;IACpD,MAAMU,YAAY,GAAGnB,qBAAqB,CAACS,MAAM,CAAC;IAClD,MAAMW,OAAO,GAAGnB,gBAAgB,CAACQ,MAAM,CAAC;IACxC,MAAMY,UAAU,GAAGnB,mBAAmB,CAACO,MAAM,CAAC;IAC9C,MAAMa,WAAW,GAAGnB,oBAAoB,CAACM,MAAM,CAAC;IAChD,MAAMc,eAAe,GAAGnB,wBAAwB,CAACK,MAAM,CAAC;IACxD,MAAMe,eAAe,GAAGnB,wBAAwB,CAACG,SAAS,CAAC;;IAE3D;IACA,MAAMiB,eAAe,GAAG;MACtBb,QAAQ;MACRC,cAAc;MACdC,WAAW;MACXC,KAAK;MACLC,WAAW;MACXE,aAAa;MACbC,YAAY;MACZC,OAAO;MACPC,UAAU;MACVC,WAAW;MACXC,eAAe;MACfC;IACF,CAAC;IAED,OAAOC,eAAe;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdhB,OAAO,CAACgB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}