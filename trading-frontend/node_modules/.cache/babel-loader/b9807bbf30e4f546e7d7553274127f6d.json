{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\analysis\\\\AnalysisDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { performAnalysis } from \"./AnalysisGet\";\nconst AnalysisDisplay = () => {\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(null); // Track hovered segment\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const results = await performAnalysis();\n        setAnalysisResults(results);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  if (error) {\n    console.error(\"Error fetching analysis data:\", error);\n  }\n  if (!analysisResults && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  const {\n    averageWin = 0,\n    averageLoss = 0\n  } = analysisResults || {};\n  const total = averageWin + averageLoss;\n  const winPercent = total > 0 ? averageWin / total * 100 : 50;\n  const data = [{\n    name: \"Average Win\",\n    value: winPercent,\n    color: \"#4a90e2\",\n    amount: averageWin\n  }, {\n    name: \"Average Loss\",\n    value: 100 - winPercent,\n    color: \"#f44336\",\n    amount: averageLoss\n  }];\n  const formatCash = value => `$${value.toFixed(2)}`;\n  const renderActiveShape = props => {\n    const {\n      cx,\n      cy,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill\n    } = props;\n    return /*#__PURE__*/React.createElement(\"g\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      cx: cx,\n      cy: cy,\n      r: innerRadius + 10 // Slightly expand the inner radius on hover\n      ,\n      fill: \"none\",\n      stroke: fill,\n      strokeWidth: 10,\n      style: {\n        filter: `drop-shadow(0px 0px 10px ${fill})`\n      } // Apply shadow effect here\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: `M ${cx + Math.cos(startAngle * Math.PI / 180) * innerRadius} ${cy + Math.sin(startAngle * Math.PI / 180) * innerRadius} A ${innerRadius} ${innerRadius} 0 1 1 ${cx + Math.cos(endAngle * Math.PI / 180) * innerRadius} ${cy + Math.sin(endAngle * Math.PI / 180) * innerRadius} L ${cx + Math.cos(endAngle * Math.PI / 180) * outerRadius} ${cy + Math.sin(endAngle * Math.PI / 180) * outerRadius} A ${outerRadius} ${outerRadius} 0 1 0 ${cx + Math.cos(startAngle * Math.PI / 180) * outerRadius} ${cy + Math.sin(startAngle * Math.PI / 180) * outerRadius} Z`,\n      fill: fill,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-display-container\",\n    style: {\n      width: \"150px\",\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    activeIndex: activeIndex,\n    activeShape: renderActiveShape,\n    data: data,\n    innerRadius: 50,\n    outerRadius: 70,\n    dataKey: \"value\",\n    startAngle: 90,\n    endAngle: -270,\n    onMouseEnter: (_, index) => setActiveIndex(index),\n    onMouseLeave: () => setActiveIndex(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: entry.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          name,\n          amount\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        }, name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"amount\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }\n        }, formatCash(amount)));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default AnalysisDisplay;\n\n// import React, { useState, useEffect } from \"react\";\n// import { performAnalysis } from \"./AnalysisGet\";\n// import { Line } from \"rc-progress\";\n\n// const AnalysisDisplay = () => {\n//   const [analysisResults, setAnalysisResults] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const results = await performAnalysis();\n//         setAnalysisResults(results);\n//       } catch (err) {\n//         setError(err);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const formatValue = (value, isCurrency = false) => {\n//     if (isNaN(value) || value === undefined) {\n//       return isCurrency ? \"$0.00\" : \"N/A\";\n//     }\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n//   };\n\n//   if (error) {\n//     console.error(\"Error fetching analysis data:\", error);\n//   }\n\n//   if (!analysisResults && !error) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const {\n//     absoluteReturn = 0,\n//     sharpeRatio = 0,\n//     winRate = 0,\n//     numberOfTrades = 0,\n//     winningTrades = 0,\n//     losingTrades = 0,\n//     averageWin = 0,\n//     averageLoss = 0,\n//     riskRewardRatio = 0,\n//   } = analysisResults || {};\n\n//   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\n//   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\n\n//   return (\n//     <div className=\"analysis-container\">\n//       <div className=\"analysis-metrics-row\">\n//         {/* Absolute Return Metric */}\n//         <div className=\"analysis-metric-top\">\n//           <h3>Absolute Return</h3>\n//           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\n//           <Line\n//             percent={absoluteReturnPercentage}\n//             strokeWidth=\"2\"\n//             trailWidth=\"2\"\n//             strokeColor={\"#4a90e2\"}\n//             trailColor=\"#d8e3ef\"\n//           />\n//         </div>\n\n//         {/* Sharpe Ratio Metric */}\n//         <div className=\"analysis-metric-top\">\n//           <h3>Sharpe Ratio</h3>\n//           <p>{formatValue(sharpeRatio)}</p>\n//           <Line\n//             percent={sharpeRatioPercentage}\n//             strokeWidth=\"2\"\n//             trailWidth=\"2\"\n//             strokeColor={\"#4a90e2\"}\n//             trailColor=\"#d8e3ef\"\n//           />\n//         </div>\n//       </div>\n\n//       {/* Trades, Wins, and Losses Row */}\n//       <div className=\"analysis-row\">\n//         <div className=\"analysis-circle\">\n//           <h3>Trades</h3>\n//           <p>{numberOfTrades}</p>\n//         </div>\n//         <div className=\"analysis-circle\">\n//           <h3>Wins</h3>\n//           <p>{winningTrades}</p>\n//         </div>\n//         <div className=\"analysis-circle\">\n//           <h3>Losses</h3>\n//           <p>{losingTrades}</p>\n//         </div>\n//       </div>\n\n//       {/* Additional Metrics Row */}\n//       <div className=\"analysis-metrics-row\">\n//         <div className=\"analysis-metric\">\n//           <h3>Win Rate</h3>\n//           <p>{formatValue(winRate)}%</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Avg. Win</h3>\n//           <p>{formatValue(averageWin, true)}</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Avg. Loss</h3>\n//           <p>{formatValue(averageLoss, true)}</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Risk Reward</h3>\n//           <p>{formatValue(riskRewardRatio)}</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AnalysisDisplay;","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Tooltip","ResponsiveContainer","performAnalysis","AnalysisDisplay","analysisResults","setAnalysisResults","error","setError","activeIndex","setActiveIndex","fetchData","results","err","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","averageWin","averageLoss","total","winPercent","data","name","value","color","amount","formatCash","toFixed","renderActiveShape","props","cx","cy","innerRadius","outerRadius","startAngle","endAngle","fill","r","stroke","strokeWidth","style","filter","d","Math","cos","PI","sin","className","width","margin","height","activeShape","dataKey","onMouseEnter","_","index","onMouseLeave","map","entry","key","cursor","content","payload","length"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { performAnalysis } from \"./AnalysisGet\";\r\n\r\nconst AnalysisDisplay = () => {\r\n  const [analysisResults, setAnalysisResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [activeIndex, setActiveIndex] = useState(null); // Track hovered segment\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const results = await performAnalysis();\r\n        setAnalysisResults(results);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    console.error(\"Error fetching analysis data:\", error);\r\n  }\r\n\r\n  if (!analysisResults && !error) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const { averageWin = 0, averageLoss = 0 } = analysisResults || {};\r\n  const total = averageWin + averageLoss;\r\n  const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\r\n\r\n  const data = [\r\n    {\r\n      name: \"Average Win\",\r\n      value: winPercent,\r\n      color: \"#4a90e2\",\r\n      amount: averageWin,\r\n    },\r\n    {\r\n      name: \"Average Loss\",\r\n      value: 100 - winPercent,\r\n      color: \"#f44336\",\r\n      amount: averageLoss,\r\n    },\r\n  ];\r\n\r\n  const formatCash = (value) => `$${value.toFixed(2)}`;\r\n\r\n  const renderActiveShape = (props) => {\r\n    const { cx, cy, innerRadius, outerRadius, startAngle, endAngle, fill } =\r\n      props;\r\n    return (\r\n      <g>\r\n        <circle\r\n          cx={cx}\r\n          cy={cy}\r\n          r={innerRadius + 10} // Slightly expand the inner radius on hover\r\n          fill=\"none\"\r\n          stroke={fill}\r\n          strokeWidth={10}\r\n          style={{ filter: `drop-shadow(0px 0px 10px ${fill})` }} // Apply shadow effect here\r\n        />\r\n        <path\r\n          d={`M ${cx + Math.cos((startAngle * Math.PI) / 180) * innerRadius} ${\r\n            cy + Math.sin((startAngle * Math.PI) / 180) * innerRadius\r\n          } A ${innerRadius} ${innerRadius} 0 1 1 ${\r\n            cx + Math.cos((endAngle * Math.PI) / 180) * innerRadius\r\n          } ${cy + Math.sin((endAngle * Math.PI) / 180) * innerRadius} L ${\r\n            cx + Math.cos((endAngle * Math.PI) / 180) * outerRadius\r\n          } ${\r\n            cy + Math.sin((endAngle * Math.PI) / 180) * outerRadius\r\n          } A ${outerRadius} ${outerRadius} 0 1 0 ${\r\n            cx + Math.cos((startAngle * Math.PI) / 180) * outerRadius\r\n          } ${cy + Math.sin((startAngle * Math.PI) / 180) * outerRadius} Z`}\r\n          fill={fill}\r\n        />\r\n      </g>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"analysis-display-container\"\r\n      style={{ width: \"150px\", margin: \"0 auto\" }}\r\n    >\r\n      <ResponsiveContainer width=\"100%\" height={150}>\r\n        <PieChart>\r\n          <Pie\r\n            activeIndex={activeIndex}\r\n            activeShape={renderActiveShape}\r\n            data={data}\r\n            innerRadius={50}\r\n            outerRadius={70}\r\n            dataKey=\"value\"\r\n            startAngle={90}\r\n            endAngle={-270}\r\n            onMouseEnter={(_, index) => setActiveIndex(index)}\r\n            onMouseLeave={() => setActiveIndex(null)}\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={entry.color} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip\r\n            cursor={false}\r\n            content={({ payload }) => {\r\n              if (payload && payload.length) {\r\n                const { name, amount } = payload[0].payload;\r\n                return (\r\n                  <div className=\"tooltip-content\">\r\n                    <p>{name}</p>\r\n                    <p className=\"amount\">{formatCash(amount)}</p>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            }}\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisDisplay;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { performAnalysis } from \"./AnalysisGet\";\r\n// import { Line } from \"rc-progress\";\r\n\r\n// const AnalysisDisplay = () => {\r\n//   const [analysisResults, setAnalysisResults] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const results = await performAnalysis();\r\n//         setAnalysisResults(results);\r\n//       } catch (err) {\r\n//         setError(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const formatValue = (value, isCurrency = false) => {\r\n//     if (isNaN(value) || value === undefined) {\r\n//       return isCurrency ? \"$0.00\" : \"N/A\";\r\n//     }\r\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n//   };\r\n\r\n//   if (error) {\r\n//     console.error(\"Error fetching analysis data:\", error);\r\n//   }\r\n\r\n//   if (!analysisResults && !error) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const {\r\n//     absoluteReturn = 0,\r\n//     sharpeRatio = 0,\r\n//     winRate = 0,\r\n//     numberOfTrades = 0,\r\n//     winningTrades = 0,\r\n//     losingTrades = 0,\r\n//     averageWin = 0,\r\n//     averageLoss = 0,\r\n//     riskRewardRatio = 0,\r\n//   } = analysisResults || {};\r\n\r\n//   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\r\n//   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\r\n\r\n//   return (\r\n//     <div className=\"analysis-container\">\r\n//       <div className=\"analysis-metrics-row\">\r\n//         {/* Absolute Return Metric */}\r\n//         <div className=\"analysis-metric-top\">\r\n//           <h3>Absolute Return</h3>\r\n//           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\r\n//           <Line\r\n//             percent={absoluteReturnPercentage}\r\n//             strokeWidth=\"2\"\r\n//             trailWidth=\"2\"\r\n//             strokeColor={\"#4a90e2\"}\r\n//             trailColor=\"#d8e3ef\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Sharpe Ratio Metric */}\r\n//         <div className=\"analysis-metric-top\">\r\n//           <h3>Sharpe Ratio</h3>\r\n//           <p>{formatValue(sharpeRatio)}</p>\r\n//           <Line\r\n//             percent={sharpeRatioPercentage}\r\n//             strokeWidth=\"2\"\r\n//             trailWidth=\"2\"\r\n//             strokeColor={\"#4a90e2\"}\r\n//             trailColor=\"#d8e3ef\"\r\n//           />\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Trades, Wins, and Losses Row */}\r\n//       <div className=\"analysis-row\">\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Trades</h3>\r\n//           <p>{numberOfTrades}</p>\r\n//         </div>\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Wins</h3>\r\n//           <p>{winningTrades}</p>\r\n//         </div>\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Losses</h3>\r\n//           <p>{losingTrades}</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Additional Metrics Row */}\r\n//       <div className=\"analysis-metrics-row\">\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Win Rate</h3>\r\n//           <p>{formatValue(winRate)}%</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Avg. Win</h3>\r\n//           <p>{formatValue(averageWin, true)}</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Avg. Loss</h3>\r\n//           <p>{formatValue(averageLoss, true)}</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Risk Reward</h3>\r\n//           <p>{formatValue(riskRewardRatio)}</p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisDisplay;\r\n"],"mappings":"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AA;MAAAC,YAAA;IAAA;EAAA,CACH,CACO,CACS,CAClB,CAAC;AAEV,CAAC;AAED,eAAejB,eAAe;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}