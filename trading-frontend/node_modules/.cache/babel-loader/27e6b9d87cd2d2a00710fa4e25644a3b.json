{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\users\\\\Register.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser } from \"../api/UserAPI\";\nconst Register = ({\n  onRegisterSuccess\n}) => {\n  const [formData, setFormData] = useState({\n    fname: \"\",\n    lname: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    phoneNumber: \"\",\n    accountType: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate(); // For navigation\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    const {\n      fname,\n      lname,\n      username,\n      email,\n      password,\n      phoneNumber,\n      accountType\n    } = formData;\n    if (!fname || !lname || !username || !email || !password || !phoneNumber || !accountType) {\n      setError(\"All fields are required.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      await registerUser({\n        fname,\n        lname,\n        username,\n        email,\n        password,\n        phone_number: phoneNumber,\n        account_type: accountType\n      });\n\n      // Navigate to home upon successful registration\n      navigate(\"/\", {\n        replace: true\n      });\n      if (onRegisterSuccess) onRegisterSuccess();\n    } catch (err) {\n      setError(err.message || \"Error registering user\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegister,\n    className: \"auth-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"fname\",\n    placeholder: \"First Name\",\n    value: formData.fname,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"lname\",\n    placeholder: \"Last Name\",\n    value: formData.lname,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    value: formData.username,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: formData.email,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: formData.password,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phoneNumber\",\n    placeholder: \"Phone Number\",\n    value: formData.phoneNumber,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"accountType\",\n    value: formData.accountType,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"Select Account Type\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Personal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"business\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Business\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, loading ? \"Registering...\" : \"Register\"));\n};\nexport default Register;\n\n// import React, { useState } from \"react\";\n// import { registerUser } from \"../api/UserAPI\";\n\n// const Register = ({ onRegisterSuccess }) => {\n//   const [formData, setFormData] = useState({\n//     fname: \"\",\n//     lname: \"\",\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//     phoneNumber: \"\",\n//     accountType: \"\",\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError(\"\");\n\n//     const {\n//       fname,\n//       lname,\n//       username,\n//       email,\n//       password,\n//       phoneNumber,\n//       accountType,\n//     } = formData;\n\n//     if (\n//       !fname ||\n//       !lname ||\n//       !username ||\n//       !email ||\n//       !password ||\n//       !phoneNumber ||\n//       !accountType\n//     ) {\n//       setError(\"All fields are required.\");\n//       setLoading(false);\n//       return;\n//     }\n\n//     try {\n//       await registerUser({\n//         fname,\n//         lname,\n//         username,\n//         email,\n//         password,\n//         phone_number: phoneNumber,\n//         account_type: accountType,\n//       });\n//       if (onRegisterSuccess) onRegisterSuccess();\n//     } catch (err) {\n//       setError(err.message || \"Error registering user\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleRegister} className=\"auth-form\">\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       <input\n//         type=\"text\"\n//         name=\"fname\"\n//         placeholder=\"First Name\"\n//         value={formData.fname}\n//         onChange={handleInputChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"lname\"\n//         placeholder=\"Last Name\"\n//         value={formData.lname}\n//         onChange={handleInputChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"username\"\n//         placeholder=\"Username\"\n//         value={formData.username}\n//         onChange={handleInputChange}\n//         required\n//       />\n//       <input\n//         type=\"email\"\n//         name=\"email\"\n//         placeholder=\"Email\"\n//         value={formData.email}\n//         onChange={handleInputChange}\n//         required\n//       />\n//       <input\n//         type=\"password\"\n//         name=\"password\"\n//         placeholder=\"Password\"\n//         value={formData.password}\n//         onChange={handleInputChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"phoneNumber\"\n//         placeholder=\"Phone Number\"\n//         value={formData.phoneNumber}\n//         onChange={handleInputChange}\n//         required\n//       />\n//       <select\n//         name=\"accountType\"\n//         value={formData.accountType}\n//         onChange={handleInputChange}\n//         required\n//       >\n//         <option value=\"\" disabled>\n//           Select Account Type\n//         </option>\n//         <option value=\"personal\">Personal</option>\n//         <option value=\"business\">Business</option>\n//       </select>\n\n//       <button type=\"submit\" className=\"btn\" disabled={loading}>\n//         {loading ? \"Registering...\" : \"Register\"}\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default Register;\n\n// // import React, { useState } from \"react\";\n// // import { registerUser } from \"../api/UserAPI\";\n\n// // const Register = ({ onRegisterSuccess }) => {\n// //   const [fname, setFname] = useState(\"\");\n// //   const [lname, setLname] = useState(\"\");\n// //   const [username, setUsername] = useState(\"\");\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [phoneNumber, setPhoneNumber] = useState(\"\");\n// //   const [accountType, setAccountType] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const [loading, setLoading] = useState(false);\n\n// //   const handleRegister = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       const userData = {\n// //         fname,\n// //         lname,\n// //         username,\n// //         email,\n// //         password,\n// //         phone_number: phoneNumber,\n// //         account_type: accountType,\n// //       };\n// //       await registerUser(userData);\n// //       setError(\"\");\n// //       if (onRegisterSuccess) onRegisterSuccess();\n// //     } catch (err) {\n// //       setError(err.message || \"Error registering user\");\n// //     }\n// //     setLoading(false);\n// //   };\n\n// //   return (\n// //     <form onSubmit={handleRegister} className=\"auth-form\">\n// //       {error && <p className=\"error-message\">{error}</p>}\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"First Name\"\n// //         value={fname}\n// //         onChange={(e) => setFname(e.target.value)}\n// //         required\n// //       />\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"Last Name\"\n// //         value={lname}\n// //         onChange={(e) => setLname(e.target.value)}\n// //         required\n// //       />\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"Username\"\n// //         value={username}\n// //         onChange={(e) => setUsername(e.target.value)}\n// //         required\n// //       />\n// //       <input\n// //         type=\"email\"\n// //         placeholder=\"Email\"\n// //         value={email}\n// //         onChange={(e) => setEmail(e.target.value)}\n// //         required\n// //       />\n// //       <input\n// //         type=\"password\"\n// //         placeholder=\"Password\"\n// //         value={password}\n// //         onChange={(e) => setPassword(e.target.value)}\n// //         required\n// //       />\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"Phone Number\"\n// //         value={phoneNumber}\n// //         onChange={(e) => setPhoneNumber(e.target.value)}\n// //         required\n// //       />\n// //       <select\n// //         value={accountType}\n// //         onChange={(e) => setAccountType(e.target.value)}\n// //       >\n// //         <option value=\"\" disabled>\n// //           Select Account Type\n// //         </option>\n// //         <option value=\"personal\">Personal</option>\n// //         <option value=\"business\">Business</option>\n// //       </select>\n// //       <button type=\"submit\" className=\"btn\" disabled={loading}>\n// //         {loading ? \"Registering...\" : \"Register\"}\n// //       </button>\n// //     </form>\n// //   );\n// // };\n\n// // export default Register;","map":{"version":3,"names":["React","useState","useNavigate","registerUser","Register","onRegisterSuccess","formData","setFormData","fname","lname","username","email","password","phoneNumber","accountType","error","setError","loading","setLoading","navigate","handleInputChange","e","name","value","target","prev","handleRegister","preventDefault","phone_number","account_type","replace","err","message","createElement","onSubmit","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","disabled"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/users/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../api/UserAPI\";\r\n\r\nconst Register = ({ onRegisterSuccess }) => {\r\n  const [formData, setFormData] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phoneNumber: \"\",\r\n    accountType: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate(); // For navigation\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const {\r\n      fname,\r\n      lname,\r\n      username,\r\n      email,\r\n      password,\r\n      phoneNumber,\r\n      accountType,\r\n    } = formData;\r\n\r\n    if (\r\n      !fname ||\r\n      !lname ||\r\n      !username ||\r\n      !email ||\r\n      !password ||\r\n      !phoneNumber ||\r\n      !accountType\r\n    ) {\r\n      setError(\"All fields are required.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await registerUser({\r\n        fname,\r\n        lname,\r\n        username,\r\n        email,\r\n        password,\r\n        phone_number: phoneNumber,\r\n        account_type: accountType,\r\n      });\r\n\r\n      // Navigate to home upon successful registration\r\n      navigate(\"/\", { replace: true });\r\n\r\n      if (onRegisterSuccess) onRegisterSuccess();\r\n    } catch (err) {\r\n      setError(err.message || \"Error registering user\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister} className=\"auth-form\">\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"fname\"\r\n        placeholder=\"First Name\"\r\n        value={formData.fname}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"lname\"\r\n        placeholder=\"Last Name\"\r\n        value={formData.lname}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        placeholder=\"Username\"\r\n        value={formData.username}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        value={formData.password}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"phoneNumber\"\r\n        placeholder=\"Phone Number\"\r\n        value={formData.phoneNumber}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <select\r\n        name=\"accountType\"\r\n        value={formData.accountType}\r\n        onChange={handleInputChange}\r\n        required\r\n      >\r\n        <option value=\"\" disabled>\r\n          Select Account Type\r\n        </option>\r\n        <option value=\"personal\">Personal</option>\r\n        <option value=\"business\">Business</option>\r\n      </select>\r\n\r\n      <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n        {loading ? \"Registering...\" : \"Register\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { registerUser } from \"../api/UserAPI\";\r\n\r\n// const Register = ({ onRegisterSuccess }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     fname: \"\",\r\n//     lname: \"\",\r\n//     username: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     phoneNumber: \"\",\r\n//     accountType: \"\",\r\n//   });\r\n//   const [error, setError] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(\"\");\r\n\r\n//     const {\r\n//       fname,\r\n//       lname,\r\n//       username,\r\n//       email,\r\n//       password,\r\n//       phoneNumber,\r\n//       accountType,\r\n//     } = formData;\r\n\r\n//     if (\r\n//       !fname ||\r\n//       !lname ||\r\n//       !username ||\r\n//       !email ||\r\n//       !password ||\r\n//       !phoneNumber ||\r\n//       !accountType\r\n//     ) {\r\n//       setError(\"All fields are required.\");\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await registerUser({\r\n//         fname,\r\n//         lname,\r\n//         username,\r\n//         email,\r\n//         password,\r\n//         phone_number: phoneNumber,\r\n//         account_type: accountType,\r\n//       });\r\n//       if (onRegisterSuccess) onRegisterSuccess();\r\n//     } catch (err) {\r\n//       setError(err.message || \"Error registering user\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleRegister} className=\"auth-form\">\r\n//       {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"fname\"\r\n//         placeholder=\"First Name\"\r\n//         value={formData.fname}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"lname\"\r\n//         placeholder=\"Last Name\"\r\n//         value={formData.lname}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"username\"\r\n//         placeholder=\"Username\"\r\n//         value={formData.username}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"email\"\r\n//         name=\"email\"\r\n//         placeholder=\"Email\"\r\n//         value={formData.email}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"password\"\r\n//         name=\"password\"\r\n//         placeholder=\"Password\"\r\n//         value={formData.password}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"phoneNumber\"\r\n//         placeholder=\"Phone Number\"\r\n//         value={formData.phoneNumber}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <select\r\n//         name=\"accountType\"\r\n//         value={formData.accountType}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       >\r\n//         <option value=\"\" disabled>\r\n//           Select Account Type\r\n//         </option>\r\n//         <option value=\"personal\">Personal</option>\r\n//         <option value=\"business\">Business</option>\r\n//       </select>\r\n\r\n//       <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n//         {loading ? \"Registering...\" : \"Register\"}\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n// // import React, { useState } from \"react\";\r\n// // import { registerUser } from \"../api/UserAPI\";\r\n\r\n// // const Register = ({ onRegisterSuccess }) => {\r\n// //   const [fname, setFname] = useState(\"\");\r\n// //   const [lname, setLname] = useState(\"\");\r\n// //   const [username, setUsername] = useState(\"\");\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n// //   const [accountType, setAccountType] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const [loading, setLoading] = useState(false);\r\n\r\n// //   const handleRegister = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setLoading(true);\r\n\r\n// //     try {\r\n// //       const userData = {\r\n// //         fname,\r\n// //         lname,\r\n// //         username,\r\n// //         email,\r\n// //         password,\r\n// //         phone_number: phoneNumber,\r\n// //         account_type: accountType,\r\n// //       };\r\n// //       await registerUser(userData);\r\n// //       setError(\"\");\r\n// //       if (onRegisterSuccess) onRegisterSuccess();\r\n// //     } catch (err) {\r\n// //       setError(err.message || \"Error registering user\");\r\n// //     }\r\n// //     setLoading(false);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <form onSubmit={handleRegister} className=\"auth-form\">\r\n// //       {error && <p className=\"error-message\">{error}</p>}\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         placeholder=\"First Name\"\r\n// //         value={fname}\r\n// //         onChange={(e) => setFname(e.target.value)}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         placeholder=\"Last Name\"\r\n// //         value={lname}\r\n// //         onChange={(e) => setLname(e.target.value)}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         placeholder=\"Username\"\r\n// //         value={username}\r\n// //         onChange={(e) => setUsername(e.target.value)}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"email\"\r\n// //         placeholder=\"Email\"\r\n// //         value={email}\r\n// //         onChange={(e) => setEmail(e.target.value)}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"password\"\r\n// //         placeholder=\"Password\"\r\n// //         value={password}\r\n// //         onChange={(e) => setPassword(e.target.value)}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         placeholder=\"Phone Number\"\r\n// //         value={phoneNumber}\r\n// //         onChange={(e) => setPhoneNumber(e.target.value)}\r\n// //         required\r\n// //       />\r\n// //       <select\r\n// //         value={accountType}\r\n// //         onChange={(e) => setAccountType(e.target.value)}\r\n// //       >\r\n// //         <option value=\"\" disabled>\r\n// //           Select Account Type\r\n// //         </option>\r\n// //         <option value=\"personal\">Personal</option>\r\n// //         <option value=\"business\">Business</option>\r\n// //       </select>\r\n// //       <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n// //         {loading ? \"Registering...\" : \"Register\"}\r\n// //       </button>\r\n// //     </form>\r\n// //   );\r\n// // };\r\n\r\n// // export default Register;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module"}