{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\ProgressChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst ProgressChart = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState([]);\n  const [hoveredData, setHoveredData] = useState(null);\n  const [maxValue, setMaxValue] = useState(1); // initialize to avoid division by zero\n\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        if (data && data.length > 0) {\n          const sortedData = data.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n          const formattedData = formatChartData(sortedData);\n          setChartData(formattedData);\n          setMaxValue(Math.max(...formattedData.map(day => Math.abs(day.pnl))));\n        } else {\n          setError(\"No data available\");\n        }\n      } catch (error) {\n        setError(\"Error fetching data\");\n        console.error(\"Error fetching daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  const formatChartData = data => {\n    return data.map(entry => ({\n      date: formatDate(entry.entry_date),\n      pnl: parseFloat(entry.close_cash || 0) - parseFloat(entry.open_cash || 0)\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"origin-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), \" \", chartData.map((day, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"progress-bar-row\",\n    onMouseEnter: () => setHoveredData(day),\n    onMouseLeave: () => setHoveredData(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, day.date), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar-day\",\n    style: {\n      backgroundColor: day.pnl >= 0 ? \"#4CAF50\" : \"#F44336\",\n      width: `${Math.abs(day.pnl) / maxValue * 100}%`,\n      marginLeft: day.pnl >= 0 ? \"50%\" : `calc(50% - ${Math.abs(day.pnl) / maxValue * 100}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), hoveredData === day && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tooltip-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, formatCash(day.pnl)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tooltip-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, day.date))))));\n};\nexport default ProgressChart;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","formatCash","formatDate","ProgressChart","loading","setLoading","error","setError","chartData","setChartData","hoveredData","setHoveredData","maxValue","setMaxValue","fetchDailyPNLData","data","length","sortedData","sort","a","b","Date","entry_date","formattedData","formatChartData","Math","max","map","day","abs","pnl","console","entry","date","parseFloat","close_cash","open_cash","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","index","key","onMouseEnter","onMouseLeave","style","backgroundColor","width","marginLeft"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/ProgressChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst ProgressChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [hoveredData, setHoveredData] = useState(null);\r\n  const [maxValue, setMaxValue] = useState(1); // initialize to avoid division by zero\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        if (data && data.length > 0) {\r\n          const sortedData = data.sort(\r\n            (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n          );\r\n          const formattedData = formatChartData(sortedData);\r\n          setChartData(formattedData);\r\n          setMaxValue(\r\n            Math.max(...formattedData.map((day) => Math.abs(day.pnl)))\r\n          );\r\n        } else {\r\n          setError(\"No data available\");\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching data\");\r\n        console.error(\"Error fetching daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  const formatChartData = (data) => {\r\n    return data.map((entry) => ({\r\n      date: formatDate(entry.entry_date),\r\n      pnl: parseFloat(entry.close_cash || 0) - parseFloat(entry.open_cash || 0),\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"progress-chart-container\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <div className=\"progress-bar-container\">\r\n          <div className=\"origin-line\"></div> {/* Zero reference line */}\r\n          {chartData.map((day, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"progress-bar-row\"\r\n              onMouseEnter={() => setHoveredData(day)}\r\n              onMouseLeave={() => setHoveredData(null)}\r\n            >\r\n              <span className=\"date-label\">{day.date}</span>\r\n              <div\r\n                className=\"progress-bar-day\"\r\n                style={{\r\n                  backgroundColor: day.pnl >= 0 ? \"#4CAF50\" : \"#F44336\",\r\n                  width: `${(Math.abs(day.pnl) / maxValue) * 100}%`,\r\n                  marginLeft:\r\n                    day.pnl >= 0\r\n                      ? \"50%\"\r\n                      : `calc(50% - ${(Math.abs(day.pnl) / maxValue) * 100}%)`,\r\n                }}\r\n              ></div>\r\n              {hoveredData === day && (\r\n                <div className=\"tooltip-content\">\r\n                  <p>{formatCash(day.pnl)}</p>\r\n                  <p className=\"tooltip-date\">{day.date}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}