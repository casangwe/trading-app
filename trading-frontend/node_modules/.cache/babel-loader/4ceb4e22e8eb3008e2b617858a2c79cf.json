{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\users\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUser } from \"../api/UserAPI\";\nimport { decode } from \"jwt-decode\";\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const credentials = new URLSearchParams();\n      credentials.append(\"username\", username);\n      credentials.append(\"password\", password);\n      const response = await loginUser(credentials);\n      const {\n        access_token\n      } = response;\n\n      // Decode JWT to extract user ID\n      const decodedToken = jwt_decode(access_token);\n      const userId = decodedToken.sub; // Assuming `sub` contains the user ID\n\n      // Store access token and user ID\n      localStorage.setItem(\"access_token\", access_token);\n      localStorage.setItem(\"user_id\", userId); // Store user ID\n\n      setError(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n      navigate(\"/\");\n    } catch (err) {\n      setError(err.message);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    className: \"auth-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, loading ? \"Logging in...\" : \"Login\"));\n};\nexport default Login;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { loginUser } from \"../api/UserAPI\";\n\n// const Login = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     try {\n//       const credentials = new URLSearchParams();\n//       credentials.append(\"username\", username);\n//       credentials.append(\"password\", password);\n\n//       const response = await loginUser(credentials);\n//       localStorage.setItem(\"access_token\", response.access_token);\n//       setError(\"\");\n//       setUsername(\"\");\n//       setPassword(\"\");\n//       navigate(\"/\");\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <form onSubmit={handleLogin} className=\"auth-form\">\n//       {error && <p className=\"error-message\">{error}</p>}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         value={username}\n//         onChange={(e) => setUsername(e.target.value)}\n//         required\n//       />\n//       <input\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         required\n//       />\n//       <button type=\"submit\" className=\"btn\" disabled={loading}>\n//         {loading ? \"Logging in...\" : \"Login\"}\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":["React","useState","useNavigate","loginUser","decode","Login","username","setUsername","password","setPassword","error","setError","loading","setLoading","navigate","handleLogin","e","preventDefault","credentials","URLSearchParams","append","response","access_token","decodedToken","jwt_decode","userId","sub","localStorage","setItem","err","message","createElement","onSubmit","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","disabled"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/users/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../api/UserAPI\";\r\nimport { decode } from \"jwt-decode\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const credentials = new URLSearchParams();\r\n      credentials.append(\"username\", username);\r\n      credentials.append(\"password\", password);\r\n\r\n      const response = await loginUser(credentials);\r\n      const { access_token } = response;\r\n\r\n      // Decode JWT to extract user ID\r\n      const decodedToken = jwt_decode(access_token);\r\n      const userId = decodedToken.sub; // Assuming `sub` contains the user ID\r\n\r\n      // Store access token and user ID\r\n      localStorage.setItem(\"access_token\", access_token);\r\n      localStorage.setItem(\"user_id\", userId); // Store user ID\r\n\r\n      setError(\"\");\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin} className=\"auth-form\">\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n        {loading ? \"Logging in...\" : \"Login\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { loginUser } from \"../api/UserAPI\";\r\n\r\n// const Login = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     try {\r\n//       const credentials = new URLSearchParams();\r\n//       credentials.append(\"username\", username);\r\n//       credentials.append(\"password\", password);\r\n\r\n//       const response = await loginUser(credentials);\r\n//       localStorage.setItem(\"access_token\", response.access_token);\r\n//       setError(\"\");\r\n//       setUsername(\"\");\r\n//       setPassword(\"\");\r\n//       navigate(\"/\");\r\n//     } catch (err) {\r\n//       setError(err.message);\r\n//     }\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleLogin} className=\"auth-form\">\r\n//       {error && <p className=\"error-message\">{error}</p>}\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Username\"\r\n//         value={username}\r\n//         onChange={(e) => setUsername(e.target.value)}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"password\"\r\n//         placeholder=\"Password\"\r\n//         value={password}\r\n//         onChange={(e) => setPassword(e.target.value)}\r\n//         required\r\n//       />\r\n//       <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n//         {loading ? \"Logging in...\" : \"Login\"}\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}