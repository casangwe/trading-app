{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\watchlist\\\\UpdateWatchlist.js\";\nimport React, { useState } from \"react\";\nimport { formatDate, formatCash } from \"../func/functions\";\nconst UpdateWatchlist = ({\n  watchlist,\n  onClose,\n  onSave,\n  handleDelete\n}) => {\n  const [formData, setFormData] = useState({\n    target_hit: watchlist.target_hit\n  });\n  const [showUpdateButton, setShowUpdateButton] = useState(false);\n  const [isEditable, setIsEditable] = useState(false); // Control edit mode\n\n  const handleToggle = () => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      target_hit: !prevFormData.target_hit // Toggle between true and false\n    }));\n    setShowUpdateButton(true); // Show update button when toggled\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSave(formData);\n    setShowUpdateButton(false);\n    setIsEditable(false); // Exit edit mode after save\n  };\n  const toggleEdit = () => {\n    setIsEditable(true); // Enter edit mode when settings icon is clicked\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, watchlist.symbol), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"watchlist-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"watchlist-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"N\", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }\n  }, \"o\"), \": \", `000${watchlist.id}`.slice(-5)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"entry-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, formatDate(watchlist.entry_date))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"watchlist-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Price:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"watchlist-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, formatCash(watchlist.price))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"target-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Target Price:\"), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"watchlist-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, formatCash(watchlist.target_price))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Exp. Date:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"watchlist-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, formatDate(watchlist.exp_date)))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"small-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Plan:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"plan-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, watchlist.plan)), isEditable && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Target Hit:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"toggle-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: formData.target_hit,\n    onChange: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"toggle-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, formData.target_hit ? \"Yes\" : \"No\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: e => {\n      e.stopPropagation();\n      handleDelete(watchlist.id);\n    },\n    className: \"delete-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa-solid fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: e => {\n      e.stopPropagation();\n      toggleEdit();\n    },\n    className: \"settings-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa-solid fa-cog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }))), showUpdateButton && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"update-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Update\"))));\n};\nexport default UpdateWatchlist;\n\n// import React, { useState } from \"react\";\n// import { formatDate, formatCash } from \"../func/functions\";\n\n// const UpdateWatchlist = ({ watchlist, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     target_hit: watchlist.target_hit,\n//   });\n//   const [showUpdateButton, setShowUpdateButton] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value === \"Yes\",\n//     });\n//     setShowUpdateButton(true);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     onSave(formData);\n//     setShowUpdateButton(false);\n//   };\n\n//   return (\n//     <div className=\"modal-container\">\n//       <div className=\"modal-content\">\n//         <div className=\"modal-header\">\n//           <h2>{watchlist.symbol}</h2>\n//           <button className=\"close-button\" onClick={onClose}>\n//             &times;\n//           </button>\n//         </div>\n//         <div className=\"modal-body\">\n//           <div className=\"watchlist-details\">\n//             <div className=\"watchlist-header\">\n//               <p className=\"no-id\">\n//                 N<sup>o</sup>: {`000${watchlist.id}`.slice(-5)}\n//               </p>\n//               <p className=\"entry-date\">{formatDate(watchlist.entry_date)}</p>\n//             </div>\n//             <hr />\n//             <div className=\"watchlist-info\">\n//               <p>\n//                 <strong>Price:</strong>\n//                 <span className=\"watchlist-value\">\n//                   {formatCash(watchlist.price)}\n//                 </span>\n//               </p>\n//               <p className=\"target-price\">\n//                 <strong>Target Price:</strong>\n//                 <strong className=\"watchlist-value\">\n//                   {formatCash(watchlist.target_price)}\n//                 </strong>\n//               </p>\n//               <p>\n//                 <strong>Exp. Date:</strong>\n//                 <span className=\"watchlist-value\">\n//                   {formatDate(watchlist.exp_date)}\n//                 </span>\n//               </p>\n//             </div>\n//             <hr className=\"small-hr\" />\n//             <div className=\"plan-section\">\n//               <p>\n//                 <strong>Plan:</strong>{\" \"}\n//                 <span className=\"plan-value\">{watchlist.plan}</span>\n//               </p>\n//               <div className=\"form-group\">\n//                 <label>\n//                   <strong>Target Hit:</strong>\n//                 </label>\n//                 <select\n//                   name=\"target_hit\"\n//                   value={formData.target_hit ? \"Yes\" : \"No\"}\n//                   onChange={handleChange}\n//                   required\n//                   className=\"target-select\"\n//                 >\n//                   <option value=\"Yes\">Yes</option>\n//                   <option value=\"No\">No</option>\n//                 </select>\n//               </div>\n//             </div>\n\n//             {showUpdateButton && (\n//               <button onClick={handleSubmit} className=\"update-button\">\n//                 Update\n//               </button>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UpdateWatchlist;\n\n// import React, { useState } from \"react\";\n// import { formatDate, formatCash } from \"../func/functions\";\n\n// const UpdateWatchlist = ({ watchlist, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     target_hit: watchlist.target_hit,\n//   });\n//   const [showUpdateButton, setShowUpdateButton] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value === \"Yes\",\n//     });\n//     setShowUpdateButton(true);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     onSave(formData);\n//     setShowUpdateButton(false);\n//   };\n\n//   return (\n//     <div className=\"modal-container\">\n//       <div className=\"modal-content\">\n//         <div className=\"modal-header\">\n//           <h2>{watchlist.symbol}</h2>\n//           <button className=\"close-button\" onClick={onClose}>\n//             &times;\n//           </button>\n//         </div>\n//         <div className=\"modal-body\">\n//           <div className=\"watchlist-details\">\n//             <p className=\"watch-id\">\n//               <strong>No:</strong> {watchlist.id}\n//             </p>\n//             <p className=\"entry-date\">\n//               <strong>Entry Date:</strong> {formatDate(watchlist.entry_date)}\n//             </p>\n//             <hr />\n//             <p>\n//               <strong>Price:</strong> {formatCash(watchlist.price)}\n//             </p>\n//             <p>\n//               <strong>Target Price:</strong>{\" \"}\n//               {formatCash(watchlist.target_price)}\n//             </p>\n//             <p>\n//               <strong>Exp. Date:</strong> {formatDate(watchlist.exp_date)}\n//             </p>\n//             <br />\n//             <p>\n//               <strong>Plan:</strong> {watchlist.plan}\n//             </p>\n//             <div className=\"form-group\">\n//               <label>\n//                 Target Hit:\n//                 <select\n//                   name=\"target_hit\"\n//                   value={formData.target_hit ? \"Yes\" : \"No\"}\n//                   onChange={handleChange}\n//                   required\n//                 >\n//                   <option value=\"Yes\">Yes</option>\n//                   <option value=\"No\">No</option>\n//                 </select>\n//               </label>\n//             </div>\n//             {showUpdateButton && (\n//               <button onClick={handleSubmit} className=\"update-button\">\n//                 Update\n//               </button>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UpdateWatchlist;","map":{"version":3,"names":["React","useState","formatDate","formatCash","UpdateWatchlist","watchlist","onClose","onSave","handleDelete","formData","setFormData","target_hit","showUpdateButton","setShowUpdateButton","isEditable","setIsEditable","handleToggle","prevFormData","handleSubmit","e","preventDefault","toggleEdit","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","symbol","onClick","id","slice","entry_date","price","target_price","exp_date","plan","type","checked","onChange","stopPropagation"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/watchlist/UpdateWatchlist.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { formatDate, formatCash } from \"../func/functions\";\r\n\r\nconst UpdateWatchlist = ({ watchlist, onClose, onSave, handleDelete }) => {\r\n  const [formData, setFormData] = useState({\r\n    target_hit: watchlist.target_hit,\r\n  });\r\n  const [showUpdateButton, setShowUpdateButton] = useState(false);\r\n  const [isEditable, setIsEditable] = useState(false); // Control edit mode\r\n\r\n  const handleToggle = () => {\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      target_hit: !prevFormData.target_hit, // Toggle between true and false\r\n    }));\r\n    setShowUpdateButton(true); // Show update button when toggled\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSave(formData);\r\n    setShowUpdateButton(false);\r\n    setIsEditable(false); // Exit edit mode after save\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setIsEditable(true); // Enter edit mode when settings icon is clicked\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h2>{watchlist.symbol}</h2>\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"watchlist-details\">\r\n            <div className=\"watchlist-header\">\r\n              <p className=\"no-id\">\r\n                N<sup>o</sup>: {`000${watchlist.id}`.slice(-5)}\r\n              </p>\r\n              <p className=\"entry-date\">{formatDate(watchlist.entry_date)}</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"watchlist-info\">\r\n              <p>\r\n                <strong>Price:</strong>\r\n                <span className=\"watchlist-value\">\r\n                  {formatCash(watchlist.price)}\r\n                </span>\r\n              </p>\r\n              <p className=\"target-price\">\r\n                <strong>Target Price:</strong>\r\n                <strong className=\"watchlist-value\">\r\n                  {formatCash(watchlist.target_price)}\r\n                </strong>\r\n              </p>\r\n              <p>\r\n                <strong>Exp. Date:</strong>\r\n                <span className=\"watchlist-value\">\r\n                  {formatDate(watchlist.exp_date)}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <hr className=\"small-hr\" />\r\n            <div className=\"plan-section\">\r\n              <p>\r\n                <strong>Plan:</strong>{\" \"}\r\n                <span className=\"plan-value\">{watchlist.plan}</span>\r\n              </p>\r\n              {isEditable && (\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    <strong>Target Hit:</strong>\r\n                  </label>\r\n                  <div className=\"toggle-container\">\r\n                    <label className=\"toggle-switch\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={formData.target_hit}\r\n                        onChange={handleToggle}\r\n                      />\r\n                      <span className=\"slider\"></span>\r\n                    </label>\r\n                    <span className=\"toggle-label\">\r\n                      {formData.target_hit ? \"Yes\" : \"No\"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <div className=\"icon-container\">\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleDelete(watchlist.id);\r\n              }}\r\n              className=\"delete-icon\"\r\n            >\r\n              <i className=\"fa-solid fa-trash\"></i>\r\n            </span>\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleEdit();\r\n              }}\r\n              className=\"settings-icon\"\r\n            >\r\n              <i className=\"fa-solid fa-cog\"></i>\r\n            </span>\r\n          </div>\r\n          {showUpdateButton && (\r\n            <button onClick={handleSubmit} className=\"update-button\">\r\n              Update\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateWatchlist;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { formatDate, formatCash } from \"../func/functions\";\r\n\r\n// const UpdateWatchlist = ({ watchlist, onClose, onSave }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     target_hit: watchlist.target_hit,\r\n//   });\r\n//   const [showUpdateButton, setShowUpdateButton] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value === \"Yes\",\r\n//     });\r\n//     setShowUpdateButton(true);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     onSave(formData);\r\n//     setShowUpdateButton(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"modal-container\">\r\n//       <div className=\"modal-content\">\r\n//         <div className=\"modal-header\">\r\n//           <h2>{watchlist.symbol}</h2>\r\n//           <button className=\"close-button\" onClick={onClose}>\r\n//             &times;\r\n//           </button>\r\n//         </div>\r\n//         <div className=\"modal-body\">\r\n//           <div className=\"watchlist-details\">\r\n//             <div className=\"watchlist-header\">\r\n//               <p className=\"no-id\">\r\n//                 N<sup>o</sup>: {`000${watchlist.id}`.slice(-5)}\r\n//               </p>\r\n//               <p className=\"entry-date\">{formatDate(watchlist.entry_date)}</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"watchlist-info\">\r\n//               <p>\r\n//                 <strong>Price:</strong>\r\n//                 <span className=\"watchlist-value\">\r\n//                   {formatCash(watchlist.price)}\r\n//                 </span>\r\n//               </p>\r\n//               <p className=\"target-price\">\r\n//                 <strong>Target Price:</strong>\r\n//                 <strong className=\"watchlist-value\">\r\n//                   {formatCash(watchlist.target_price)}\r\n//                 </strong>\r\n//               </p>\r\n//               <p>\r\n//                 <strong>Exp. Date:</strong>\r\n//                 <span className=\"watchlist-value\">\r\n//                   {formatDate(watchlist.exp_date)}\r\n//                 </span>\r\n//               </p>\r\n//             </div>\r\n//             <hr className=\"small-hr\" />\r\n//             <div className=\"plan-section\">\r\n//               <p>\r\n//                 <strong>Plan:</strong>{\" \"}\r\n//                 <span className=\"plan-value\">{watchlist.plan}</span>\r\n//               </p>\r\n//               <div className=\"form-group\">\r\n//                 <label>\r\n//                   <strong>Target Hit:</strong>\r\n//                 </label>\r\n//                 <select\r\n//                   name=\"target_hit\"\r\n//                   value={formData.target_hit ? \"Yes\" : \"No\"}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                   className=\"target-select\"\r\n//                 >\r\n//                   <option value=\"Yes\">Yes</option>\r\n//                   <option value=\"No\">No</option>\r\n//                 </select>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {showUpdateButton && (\r\n//               <button onClick={handleSubmit} className=\"update-button\">\r\n//                 Update\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UpdateWatchlist;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { formatDate, formatCash } from \"../func/functions\";\r\n\r\n// const UpdateWatchlist = ({ watchlist, onClose, onSave }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     target_hit: watchlist.target_hit,\r\n//   });\r\n//   const [showUpdateButton, setShowUpdateButton] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value === \"Yes\",\r\n//     });\r\n//     setShowUpdateButton(true);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     onSave(formData);\r\n//     setShowUpdateButton(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"modal-container\">\r\n//       <div className=\"modal-content\">\r\n//         <div className=\"modal-header\">\r\n//           <h2>{watchlist.symbol}</h2>\r\n//           <button className=\"close-button\" onClick={onClose}>\r\n//             &times;\r\n//           </button>\r\n//         </div>\r\n//         <div className=\"modal-body\">\r\n//           <div className=\"watchlist-details\">\r\n//             <p className=\"watch-id\">\r\n//               <strong>No:</strong> {watchlist.id}\r\n//             </p>\r\n//             <p className=\"entry-date\">\r\n//               <strong>Entry Date:</strong> {formatDate(watchlist.entry_date)}\r\n//             </p>\r\n//             <hr />\r\n//             <p>\r\n//               <strong>Price:</strong> {formatCash(watchlist.price)}\r\n//             </p>\r\n//             <p>\r\n//               <strong>Target Price:</strong>{\" \"}\r\n//               {formatCash(watchlist.target_price)}\r\n//             </p>\r\n//             <p>\r\n//               <strong>Exp. Date:</strong> {formatDate(watchlist.exp_date)}\r\n//             </p>\r\n//             <br />\r\n//             <p>\r\n//               <strong>Plan:</strong> {watchlist.plan}\r\n//             </p>\r\n//             <div className=\"form-group\">\r\n//               <label>\r\n//                 Target Hit:\r\n//                 <select\r\n//                   name=\"target_hit\"\r\n//                   value={formData.target_hit ? \"Yes\" : \"No\"}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                 >\r\n//                   <option value=\"Yes\">Yes</option>\r\n//                   <option value=\"No\">No</option>\r\n//                 </select>\r\n//               </label>\r\n//             </div>\r\n//             {showUpdateButton && (\r\n//               <button onClick={handleSubmit} className=\"update-button\">\r\n//                 Update\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UpdateWatchlist;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module"}