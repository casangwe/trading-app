{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\trades\\\\TradeSum.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTrades } from \"../api/TradesAPI\";\nimport { formatDate } from \"../func/functions\";\nconst TradeSum = () => {\n  var _weeklyTrades$, _monthlyTrades$;\n  const [trades, setTrades] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [view, setView] = useState(\"weekly\");\n  useEffect(() => {\n    const getTrades = async () => {\n      try {\n        const data = await fetchTrades();\n        setTrades(data);\n        setLoading(false);\n      } catch (error) {\n        setError(\"Error fetching trades\");\n        setLoading(false);\n      }\n    };\n    getTrades();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, error);\n  const getTradesForPeriod = (trades, period) => {\n    const today = new Date();\n    if (period === \"weekly\") {\n      const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));\n      const endOfWeek = new Date(today.setDate(today.getDate() + 6 - today.getDay()));\n      return trades.filter(trade => {\n        const tradeDate = new Date(trade.entry_date);\n        return tradeDate >= startOfWeek && tradeDate <= endOfWeek;\n      });\n    } else if (period === \"monthly\") {\n      const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n      const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n      return trades.filter(trade => {\n        const tradeDate = new Date(trade.entry_date);\n        return tradeDate >= startOfMonth && tradeDate <= endOfMonth;\n      });\n    }\n    return [];\n  };\n  const weeklyTrades = getTradesForPeriod(trades, \"weekly\");\n  const monthlyTrades = getTradesForPeriod(trades, \"monthly\");\n  const headerDate = view === \"weekly\" ? `Week of ${formatDate((_weeklyTrades$ = weeklyTrades[0]) === null || _weeklyTrades$ === void 0 ? void 0 : _weeklyTrades$.entry_date)}` : `Month of ${formatDate((_monthlyTrades$ = monthlyTrades[0]) === null || _monthlyTrades$ === void 0 ? void 0 : _monthlyTrades$.entry_date)}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-summary-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"weekly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"weekly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Weekly\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"monthly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"monthly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Monthly\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, headerDate)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-summary-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"trade-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Pos.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Exit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"RoI\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, (view === \"weekly\" ? weeklyTrades : monthlyTrades).map(trade => /*#__PURE__*/React.createElement(\"tr\", {\n    key: trade.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, formatDate(trade.entry_date)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, trade.symbol, \" $\", trade.strike_price, \" \", trade.option_type, \" \", formatDate(trade.exp_date)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"$\", trade.entry_price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"$\", trade.exit_price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, (trade.roi * 100).toFixed(2), \"%\"))))))));\n};\nexport default TradeSum;\n\n// import React, { useState, useEffect } from \"react\";\n// import { fetchTrades } from \"../api/TradesAPI\";\n// import { formatDate } from \"../func/functions\";\n\n// const TradeSum = () => {\n//   const [trades, setTrades] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [view, setView] = useState(\"weekly\");\n\n//   useEffect(() => {\n//     const getTrades = async () => {\n//       try {\n//         const data = await fetchTrades();\n//         setTrades(data);\n//         setLoading(false);\n//       } catch (error) {\n//         setError(\"Error fetching trades\");\n//         setLoading(false);\n//       }\n//     };\n\n//     getTrades();\n//   }, []);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   // Helper functions to get trades based on view\n//   const getTradesForPeriod = (trades, period) => {\n//     const today = new Date();\n//     if (period === \"weekly\") {\n//       const startOfWeek = new Date(\n//         today.setDate(today.getDate() - today.getDay())\n//       );\n//       const endOfWeek = new Date(\n//         today.setDate(today.getDate() + 6 - today.getDay())\n//       );\n//       return trades.filter((trade) => {\n//         const tradeDate = new Date(trade.entry_date);\n//         return tradeDate >= startOfWeek && tradeDate <= endOfWeek;\n//       });\n//     } else if (period === \"monthly\") {\n//       const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n//       const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n//       return trades.filter((trade) => {\n//         const tradeDate = new Date(trade.entry_date);\n//         return tradeDate >= startOfMonth && tradeDate <= endOfMonth;\n//       });\n//     }\n//     return [];\n//   };\n\n//   const weeklyTrades = getTradesForPeriod(trades, \"weekly\");\n//   const monthlyTrades = getTradesForPeriod(trades, \"monthly\");\n\n//   const headerDate =\n//     view === \"weekly\"\n//       ? `Week of ${formatDate(weeklyTrades[0]?.entry_date)}`\n//       : `Month of ${formatDate(monthlyTrades[0]?.entry_date)}`;\n\n//   return (\n//     <div className=\"trade-summary-container\">\n//       <div className=\"header-card\">\n//         <div className=\"tab-container\">\n//           <button\n//             className={`tab-button ${view === \"weekly\" ? \"active\" : \"\"}`}\n//             onClick={() => setView(\"weekly\")}\n//           >\n//             Weekly\n//           </button>\n//           <button\n//             className={`tab-button ${view === \"monthly\" ? \"active\" : \"\"}`}\n//             onClick={() => setView(\"monthly\")}\n//           >\n//             Monthly\n//           </button>\n//         </div>\n//         <div className=\"header-date\">{headerDate}</div>\n//       </div>\n\n//       <hr />\n//       <div className=\"trade-summary-content\">\n//         <div className=\"trade-table-container\">\n//           <h3>{view === \"weekly\" ? \"\" : \"\"}</h3>\n//           <table className=\"trade-table\">\n//             <thead>\n//               <tr>\n//                 <th>Date</th>\n//                 <th>Pos.</th>\n//                 <th>Price</th>\n//                 <th>Exit</th>\n//                 <th>RoI</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {(view === \"weekly\" ? weeklyTrades : monthlyTrades).map(\n//                 (trade) => (\n//                   <tr key={trade.id}>\n//                     <td>{formatDate(trade.entry_date)}</td>\n//                     <td>\n//                       {trade.symbol} ${trade.strike_price} {trade.option_type}{\" \"}\n//                       {formatDate(trade.exp_date)}\n//                     </td>\n//                     <td>${trade.entry_price}</td>\n//                     <td>${trade.exit_price}</td>\n//                     <td>{(trade.roi * 100).toFixed(2)}%</td>\n//                   </tr>\n//                 )\n//               )}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TradeSum;","map":{"version":3,"names":["React","useState","useEffect","fetchTrades","formatDate","TradeSum","_weeklyTrades$","_monthlyTrades$","trades","setTrades","loading","setLoading","error","setError","view","setView","getTrades","data","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","getTradesForPeriod","period","today","Date","startOfWeek","setDate","getDate","getDay","endOfWeek","filter","trade","tradeDate","entry_date","startOfMonth","getFullYear","getMonth","endOfMonth","weeklyTrades","monthlyTrades","headerDate","className","onClick","map","key","id","symbol","strike_price","option_type","exp_date","entry_price","exit_price","roi","toFixed"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/trades/TradeSum.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\nimport { formatDate } from \"../func/functions\";\r\n\r\nconst TradeSum = () => {\r\n  const [trades, setTrades] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [view, setView] = useState(\"weekly\");\r\n\r\n  useEffect(() => {\r\n    const getTrades = async () => {\r\n      try {\r\n        const data = await fetchTrades();\r\n        setTrades(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(\"Error fetching trades\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getTrades();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const getTradesForPeriod = (trades, period) => {\r\n    const today = new Date();\r\n    if (period === \"weekly\") {\r\n      const startOfWeek = new Date(\r\n        today.setDate(today.getDate() - today.getDay())\r\n      );\r\n      const endOfWeek = new Date(\r\n        today.setDate(today.getDate() + 6 - today.getDay())\r\n      );\r\n      return trades.filter((trade) => {\r\n        const tradeDate = new Date(trade.entry_date);\r\n        return tradeDate >= startOfWeek && tradeDate <= endOfWeek;\r\n      });\r\n    } else if (period === \"monthly\") {\r\n      const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\r\n      const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n      return trades.filter((trade) => {\r\n        const tradeDate = new Date(trade.entry_date);\r\n        return tradeDate >= startOfMonth && tradeDate <= endOfMonth;\r\n      });\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const weeklyTrades = getTradesForPeriod(trades, \"weekly\");\r\n  const monthlyTrades = getTradesForPeriod(trades, \"monthly\");\r\n\r\n  const headerDate =\r\n    view === \"weekly\"\r\n      ? `Week of ${formatDate(weeklyTrades[0]?.entry_date)}`\r\n      : `Month of ${formatDate(monthlyTrades[0]?.entry_date)}`;\r\n\r\n  return (\r\n    <div className=\"trade-summary-container\">\r\n      <div className=\"header-card\">\r\n        <div className=\"tab-container\">\r\n          <button\r\n            className={`tab-button ${view === \"weekly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"weekly\")}\r\n          >\r\n            Weekly\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"monthly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"monthly\")}\r\n          >\r\n            Monthly\r\n          </button>\r\n        </div>\r\n        <div className=\"header-date\">{headerDate}</div>\r\n      </div>\r\n\r\n      <hr />\r\n      <div className=\"trade-summary-content\">\r\n        <div className=\"trade-table-container\">\r\n          <table className=\"trade-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Pos.</th>\r\n                <th>Price</th>\r\n                <th>Exit</th>\r\n                <th>RoI</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {(view === \"weekly\" ? weeklyTrades : monthlyTrades).map(\r\n                (trade) => (\r\n                  <tr key={trade.id}>\r\n                    <td>{formatDate(trade.entry_date)}</td>\r\n                    <td>\r\n                      {trade.symbol} ${trade.strike_price} {trade.option_type}{\" \"}\r\n                      {formatDate(trade.exp_date)}\r\n                    </td>\r\n                    <td>${trade.entry_price}</td>\r\n                    <td>${trade.exit_price}</td>\r\n                    <td>{(trade.roi * 100).toFixed(2)}%</td>\r\n                  </tr>\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradeSum;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { fetchTrades } from \"../api/TradesAPI\";\r\n// import { formatDate } from \"../func/functions\";\r\n\r\n// const TradeSum = () => {\r\n//   const [trades, setTrades] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [view, setView] = useState(\"weekly\");\r\n\r\n//   useEffect(() => {\r\n//     const getTrades = async () => {\r\n//       try {\r\n//         const data = await fetchTrades();\r\n//         setTrades(data);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         setError(\"Error fetching trades\");\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     getTrades();\r\n//   }, []);\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div>{error}</div>;\r\n\r\n//   // Helper functions to get trades based on view\r\n//   const getTradesForPeriod = (trades, period) => {\r\n//     const today = new Date();\r\n//     if (period === \"weekly\") {\r\n//       const startOfWeek = new Date(\r\n//         today.setDate(today.getDate() - today.getDay())\r\n//       );\r\n//       const endOfWeek = new Date(\r\n//         today.setDate(today.getDate() + 6 - today.getDay())\r\n//       );\r\n//       return trades.filter((trade) => {\r\n//         const tradeDate = new Date(trade.entry_date);\r\n//         return tradeDate >= startOfWeek && tradeDate <= endOfWeek;\r\n//       });\r\n//     } else if (period === \"monthly\") {\r\n//       const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\r\n//       const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n//       return trades.filter((trade) => {\r\n//         const tradeDate = new Date(trade.entry_date);\r\n//         return tradeDate >= startOfMonth && tradeDate <= endOfMonth;\r\n//       });\r\n//     }\r\n//     return [];\r\n//   };\r\n\r\n//   const weeklyTrades = getTradesForPeriod(trades, \"weekly\");\r\n//   const monthlyTrades = getTradesForPeriod(trades, \"monthly\");\r\n\r\n//   const headerDate =\r\n//     view === \"weekly\"\r\n//       ? `Week of ${formatDate(weeklyTrades[0]?.entry_date)}`\r\n//       : `Month of ${formatDate(monthlyTrades[0]?.entry_date)}`;\r\n\r\n//   return (\r\n//     <div className=\"trade-summary-container\">\r\n//       <div className=\"header-card\">\r\n//         <div className=\"tab-container\">\r\n//           <button\r\n//             className={`tab-button ${view === \"weekly\" ? \"active\" : \"\"}`}\r\n//             onClick={() => setView(\"weekly\")}\r\n//           >\r\n//             Weekly\r\n//           </button>\r\n//           <button\r\n//             className={`tab-button ${view === \"monthly\" ? \"active\" : \"\"}`}\r\n//             onClick={() => setView(\"monthly\")}\r\n//           >\r\n//             Monthly\r\n//           </button>\r\n//         </div>\r\n//         <div className=\"header-date\">{headerDate}</div>\r\n//       </div>\r\n\r\n//       <hr />\r\n//       <div className=\"trade-summary-content\">\r\n//         <div className=\"trade-table-container\">\r\n//           <h3>{view === \"weekly\" ? \"\" : \"\"}</h3>\r\n//           <table className=\"trade-table\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Date</th>\r\n//                 <th>Pos.</th>\r\n//                 <th>Price</th>\r\n//                 <th>Exit</th>\r\n//                 <th>RoI</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {(view === \"weekly\" ? weeklyTrades : monthlyTrades).map(\r\n//                 (trade) => (\r\n//                   <tr key={trade.id}>\r\n//                     <td>{formatDate(trade.entry_date)}</td>\r\n//                     <td>\r\n//                       {trade.symbol} ${trade.strike_price} {trade.option_type}{\" \"}\r\n//                       {formatDate(trade.exp_date)}\r\n//                     </td>\r\n//                     <td>${trade.entry_price}</td>\r\n//                     <td>${trade.exit_price}</td>\r\n//                     <td>{(trade.roi * 100).toFixed(2)}%</td>\r\n//                   </tr>\r\n//                 )\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TradeSum;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module"}