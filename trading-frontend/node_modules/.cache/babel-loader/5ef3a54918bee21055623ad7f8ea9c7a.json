{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Home.js\";\n// Home.js\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/home.css\";\nimport Account from \"./Account\";\nimport NewTrade from \"./NewTrade\";\nimport RecentTrades from \"./RecentTrades\";\nimport BiggestWinsLosses from \"./BiggestWinsLosses\";\nconst Home = () => {\n  const [recentTrades, setRecentTrades] = useState([]);\n  useEffect(() => {\n    fetchRecentTrades(); //get trades from backend\n  }, []);\n  const fetchRecentTrades = () => {\n    fetch(\"http://localhost:8000/trades/\").then(response => response.json()).then(data => {\n      setRecentTrades(data); // Update state with fetched data\n    }).catch(error => {\n      console.error(\"Error fetching recent trades:\", error);\n    });\n  };\n\n  // format date string to MM/DD/YYYY format\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  };\n  // Pop-up modal\n  function showSuccessModal() {\n    // Create a new modal element\n    const modal = document.createElement(\"div\");\n    modal.classList.add(\"modal\");\n    modal.style.backgroundColor = \"lightgreen\"; // Set background color\n    modal.style.position = \"fixed\"; // Position fixed\n    modal.style.top = \"20px\"; // Top position\n    modal.style.right = \"20px\"; // Right position\n    modal.style.padding = \"10px\"; // Add some padding\n    modal.style.borderRadius = \"2px\"; // Rounded corners\n    modal.style.zIndex = \"9999\"; // Set z-index to ensure it appears above other content\n    modal.style.fontSize = \"16px\"; // Adjust font size as needed\n\n    modal.innerHTML = `\n      <div class=\"modal-content\">\n        <p>Success.</p>\n      </div>\n    `;\n\n    // Append the modal to the body\n    document.body.appendChild(modal);\n\n    // setTimeout(() => {\n    //   modal.remove(); // Remove the modal from the DOM\n    // }, 3000);\n  }\n\n  // submit new trade\n  const handleNewTradeSubmit = formData => {\n    // POST request to backend to add new trade\n    fetch(\"http://localhost:8000/trades/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(() => {\n      showSuccessModal();\n      fetchRecentTrades(); //render Recent trades\n    }).catch(error => console.error(\"Error adding new trade:\", error));\n  };\n\n  // Function to refresh the list of recent trades\n  const handleRefresh = () => {\n    showSuccessModal();\n    fetchRecentTrades();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewTrade, {\n    onTradeSubmit: handleNewTradeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RecentTrades, {\n    recentTrades: recentTrades,\n    formatDate: formatDate,\n    onRefresh: handleRefresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BiggestWinsLosses, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","Account","NewTrade","RecentTrades","BiggestWinsLosses","Home","recentTrades","setRecentTrades","fetchRecentTrades","fetch","then","response","json","data","catch","error","console","formatDate","dateString","date","Date","month","getMonth","toString","padStart","day","getDate","year","getFullYear","showSuccessModal","modal","document","createElement","classList","add","style","backgroundColor","position","top","right","padding","borderRadius","zIndex","fontSize","innerHTML","body","appendChild","handleNewTradeSubmit","formData","method","headers","JSON","stringify","handleRefresh","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onTradeSubmit","onRefresh"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Home.js"],"sourcesContent":["// Home.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./styles/home.css\";\r\nimport Account from \"./Account\";\r\nimport NewTrade from \"./NewTrade\";\r\nimport RecentTrades from \"./RecentTrades\";\r\nimport BiggestWinsLosses from \"./BiggestWinsLosses\";\r\n\r\nconst Home = () => {\r\n  const [recentTrades, setRecentTrades] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRecentTrades(); //get trades from backend\r\n  }, []);\r\n\r\n  const fetchRecentTrades = () => {\r\n    fetch(\"http://localhost:8000/trades/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setRecentTrades(data); // Update state with fetched data\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching recent trades:\", error);\r\n      });\r\n  };\r\n\r\n  // format date string to MM/DD/YYYY format\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n    return `${month}/${day}/${year}`;\r\n  };\r\n  // Pop-up modal\r\n  function showSuccessModal() {\r\n    // Create a new modal element\r\n    const modal = document.createElement(\"div\");\r\n    modal.classList.add(\"modal\");\r\n    modal.style.backgroundColor = \"lightgreen\"; // Set background color\r\n    modal.style.position = \"fixed\"; // Position fixed\r\n    modal.style.top = \"20px\"; // Top position\r\n    modal.style.right = \"20px\"; // Right position\r\n    modal.style.padding = \"10px\"; // Add some padding\r\n    modal.style.borderRadius = \"2px\"; // Rounded corners\r\n    modal.style.zIndex = \"9999\"; // Set z-index to ensure it appears above other content\r\n    modal.style.fontSize = \"16px\"; // Adjust font size as needed\r\n\r\n    modal.innerHTML = `\r\n      <div class=\"modal-content\">\r\n        <p>Success.</p>\r\n      </div>\r\n    `;\r\n\r\n    // Append the modal to the body\r\n    document.body.appendChild(modal);\r\n\r\n    // setTimeout(() => {\r\n    //   modal.remove(); // Remove the modal from the DOM\r\n    // }, 3000);\r\n  }\r\n\r\n  // submit new trade\r\n  const handleNewTradeSubmit = (formData) => {\r\n    // POST request to backend to add new trade\r\n    fetch(\"http://localhost:8000/trades/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        showSuccessModal();\r\n        fetchRecentTrades(); //render Recent trades\r\n      })\r\n      .catch((error) => console.error(\"Error adding new trade:\", error));\r\n  };\r\n\r\n  // Function to refresh the list of recent trades\r\n  const handleRefresh = () => {\r\n    showSuccessModal();\r\n\r\n    fetchRecentTrades();\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Account />\r\n      <NewTrade onTradeSubmit={handleNewTradeSubmit} />\r\n      <RecentTrades\r\n        recentTrades={recentTrades}\r\n        formatDate={formatDate}\r\n        onRefresh={handleRefresh}\r\n      />\r\n      <BiggestWinsLosses />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}