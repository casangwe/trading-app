{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\BiggestWinsLosses.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/biggestWinsLosses.css\";\nconst BiggestWinsLosses = ({\n  trades\n}) => {\n  const [biggestWins, setBiggestWins] = useState([]);\n  const [biggestLosses, setBiggestLosses] = useState([]);\n  useEffect(() => {\n    if (trades && trades.length > 0) {\n      const tradesWithProfits = trades.map(trade => {\n        const profit = calculateProfit(trade.entry_price, trade.exit_price, trade.contracts);\n        return {\n          ...trade,\n          profit\n        };\n      });\n      const sortedTrades = tradesWithProfits.slice().sort((a, b) => b.profit - a.profit);\n      const wins = sortedTrades.filter(trade => trade.profit > 0).slice(0, 5);\n      const losses = sortedTrades.filter(trade => trade.profit < 0).slice(0, 5);\n      setBiggestWins(wins);\n      setBiggestLosses(losses);\n    }\n  }, [trades]);\n  const calculateProfit = (entryPrice, exitPrice, contracts) => {\n    const entryCost = entryPrice * contracts;\n    const exitCost = exitPrice * contracts;\n    const totalCost = exitCost - entryCost;\n    return totalCost;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wins-lost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Biggest Wins\"), biggestWins.map((trade, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, trade.symbol), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Profit: $\", trade.profit)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"losses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Biggest Losses\"), biggestLosses.map((trade, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, trade.symbol), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Loss: $\", Math.abs(trade.profit))))));\n};\nexport default BiggestWinsLosses;\n\n/* import React from \"react\";\r\nimport \"./styles/biggestWinsLosses.css\";\r\n\r\nconst BiggestWinsLosses = ({ trades }) => {\r\n  return (\r\n    <div className=\"wins-lost\">\r\n      <div className=\"card\">\r\n        <p>P/L</p>\r\n        <p className=\"menu\">::</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiggestWinsLosses;\r\n*/","map":{"version":3,"names":["React","useState","useEffect","BiggestWinsLosses","trades","biggestWins","setBiggestWins","biggestLosses","setBiggestLosses","length","tradesWithProfits","map","trade","profit","calculateProfit","entry_price","exit_price","contracts","sortedTrades","slice","sort","a","b","wins","filter","losses","entryPrice","exitPrice","entryCost","exitCost","totalCost","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","index","key","symbol","Math","abs"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/BiggestWinsLosses.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/biggestWinsLosses.css\";\r\n\r\nconst BiggestWinsLosses = ({ trades }) => {\r\n  const [biggestWins, setBiggestWins] = useState([]);\r\n  const [biggestLosses, setBiggestLosses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (trades && trades.length > 0) {\r\n      const tradesWithProfits = trades.map((trade) => {\r\n        const profit = calculateProfit(\r\n          trade.entry_price,\r\n          trade.exit_price,\r\n          trade.contracts\r\n        );\r\n        return { ...trade, profit };\r\n      });\r\n\r\n      const sortedTrades = tradesWithProfits\r\n        .slice()\r\n        .sort((a, b) => b.profit - a.profit);\r\n      const wins = sortedTrades.filter((trade) => trade.profit > 0).slice(0, 5);\r\n      const losses = sortedTrades\r\n        .filter((trade) => trade.profit < 0)\r\n        .slice(0, 5);\r\n      setBiggestWins(wins);\r\n      setBiggestLosses(losses);\r\n    }\r\n  }, [trades]);\r\n\r\n  const calculateProfit = (entryPrice, exitPrice, contracts) => {\r\n    const entryCost = entryPrice * contracts;\r\n    const exitCost = exitPrice * contracts;\r\n    const totalCost = exitCost - entryCost;\r\n    return totalCost;\r\n  };\r\n\r\n  return (\r\n    <div className=\"wins-lost\">\r\n      <div className=\"wins\">\r\n        <h2>Biggest Wins</h2>\r\n        {biggestWins.map((trade, index) => (\r\n          <div key={index} className=\"card\">\r\n            <p>{trade.symbol}</p>\r\n            <p className=\"menu\">Profit: ${trade.profit}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"losses\">\r\n        <h2>Biggest Losses</h2>\r\n        {biggestLosses.map((trade, index) => (\r\n          <div key={index} className=\"card\">\r\n            <p>{trade.symbol}</p>\r\n            <p className=\"menu\">Loss: ${Math.abs(trade.profit)}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiggestWinsLosses;\r\n\r\n/* import React from \"react\";\r\nimport \"./styles/biggestWinsLosses.css\";\r\n\r\nconst BiggestWinsLosses = ({ trades }) => {\r\n  return (\r\n    <div className=\"wins-lost\">\r\n      <div className=\"card\">\r\n        <p>P/L</p>\r\n        <p className=\"menu\">::</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiggestWinsLosses;\r\n*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}