{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\BiggestWinsLosses.js\";\nimport React, { useState } from \"react\";\nimport \"./styles/biggestWinsLosses.css\";\nconst BiggestWinsLosses = ({\n  recentTrades\n}) => {\n  const [showPositive, setShowPositive] = useState(true);\n  const toggleProfitDisplay = () => {\n    setShowPositive(!showPositive);\n  };\n  const filteredTrades = recentTrades.filter(trade => {\n    if (trade.profit_loss === undefined || trade.profit_loss === \"\" || isNaN(trade.profit_loss) || isNaN(trade.contracts)) {\n      return false;\n    }\n    return showPositive ? trade.profit_loss > 0 : trade.profit_loss < 0;\n  });\n\n  // Sort filteredTrades based on the absolute value of profit_loss\n  filteredTrades.sort((a, b) => {\n    return Math.abs(b.profit_loss) - Math.abs(a.profit_loss);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wins-lost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"P/L\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"menu\",\n    onClick: toggleProfitDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"::\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, filteredTrades.map((trade, index) => {\n    const isPositive = trade.profit_loss > 0;\n    const cardItemClasses = `card-item ${isPositive ? \"positive\" : \"negative\"}`;\n\n    // Calculate profit/loss based on number of contracts\n    const profitLoss = trade.profit_loss * trade.contracts * 100;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: cardItemClasses,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, trade.option_symbol), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, \"$\", profitLoss.toFixed(2))));\n  }))));\n};\nexport default BiggestWinsLosses;","map":{"version":3,"names":["React","useState","BiggestWinsLosses","recentTrades","showPositive","setShowPositive","toggleProfitDisplay","filteredTrades","filter","trade","profit_loss","undefined","isNaN","contracts","sort","a","b","Math","abs","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","isPositive","cardItemClasses","profitLoss","key","option_symbol","toFixed"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/BiggestWinsLosses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles/biggestWinsLosses.css\";\r\n\r\nconst BiggestWinsLosses = ({ recentTrades }) => {\r\n  const [showPositive, setShowPositive] = useState(true);\r\n\r\n  const toggleProfitDisplay = () => {\r\n    setShowPositive(!showPositive);\r\n  };\r\n\r\n  const filteredTrades = recentTrades.filter((trade) => {\r\n    if (\r\n      trade.profit_loss === undefined ||\r\n      trade.profit_loss === \"\" ||\r\n      isNaN(trade.profit_loss) ||\r\n      isNaN(trade.contracts)\r\n    ) {\r\n      return false;\r\n    }\r\n    return showPositive ? trade.profit_loss > 0 : trade.profit_loss < 0;\r\n  });\r\n\r\n  // Sort filteredTrades based on the absolute value of profit_loss\r\n  filteredTrades.sort((a, b) => {\r\n    return Math.abs(b.profit_loss) - Math.abs(a.profit_loss);\r\n  });\r\n\r\n  return (\r\n    <div className=\"wins-lost\">\r\n      <div className=\"card\">\r\n        <p>P/L</p>\r\n        <p className=\"menu\" onClick={toggleProfitDisplay}>\r\n          ::\r\n        </p>{\" \"}\r\n        {/* Toggle display on click */}\r\n      </div>\r\n      <div className=\"card-list\">\r\n        <ul className=\"cards\">\r\n          {filteredTrades.map((trade, index) => {\r\n            const isPositive = trade.profit_loss > 0;\r\n            const cardItemClasses = `card-item ${\r\n              isPositive ? \"positive\" : \"negative\"\r\n            }`;\r\n\r\n            // Calculate profit/loss based on number of contracts\r\n            const profitLoss = trade.profit_loss * trade.contracts * 100;\r\n\r\n            return (\r\n              <li className={cardItemClasses} key={index}>\r\n                <div className=\"card-content\">\r\n                  <p>{trade.option_symbol}</p>\r\n                  <p>${profitLoss.toFixed(2)}</p>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiggestWinsLosses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}