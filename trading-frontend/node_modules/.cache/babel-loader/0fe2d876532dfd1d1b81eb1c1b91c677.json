{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Details.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { fetchTrades, fetchCash } from \"./ApiCalls\";\nconst Details = () => {\n  const [tradeMetrics, setTradeMetrics] = useState(null);\n  const [initialCash, setInitialCash] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch trades from the API\n  useEffect(() => {\n    const fetchTradeMetrics = async () => {\n      try {\n        const trades = await fetchTrades();\n        const metrics = calculateTradeMetrics(trades);\n        setTradeMetrics(metrics);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchTradeMetrics();\n  }, []);\n\n  // Fetch initial cash from the API\n  useEffect(() => {\n    const fetchInitialCash = async () => {\n      try {\n        const cashEntries = await fetchCash();\n        // Assuming cashEntries is an array of cash values, sum them up\n        const totalInitialCash = cashEntries.reduce((acc, curr) => acc + curr, 0);\n        setInitialCash(totalInitialCash);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchInitialCash();\n  }, []);\n\n  // Metrics\n  const calculateTradeMetrics = trades => {\n    let totalProfitLoss = 0;\n    let winCount = 0;\n    let lossCount = 0;\n    let biggestWin = null;\n    let biggestLoss = null;\n    let totalReturn = 0;\n    let totalTradeSize = 0;\n    let totalHoldingPeriod = 0;\n    trades.forEach(trade => {\n      const profitLoss = trade.profitLoss;\n      totalProfitLoss += profitLoss;\n      totalReturn += (trade.exitPrice - trade.entryPrice) * trade.contracts;\n      totalTradeSize += trade.contracts;\n      const holdingPeriod = new Date(trade.closeDate) - new Date(trade.entryDate);\n      totalHoldingPeriod += holdingPeriod;\n      if (profitLoss > 0) {\n        winCount++;\n        if (!biggestWin || profitLoss > biggestWin) {\n          biggestWin = profitLoss;\n        }\n      } else {\n        lossCount++;\n        if (!biggestLoss || profitLoss < biggestLoss) {\n          biggestLoss = profitLoss;\n        }\n      }\n    });\n    const averageReturn = (totalReturn / trades.length).toFixed(2);\n    const winLossRatio = (winCount / trades.length).toFixed(2);\n    const profitFactor = (totalProfitLoss / (lossCount || 1)).toFixed(2);\n    const averageTradeSize = Math.round(totalTradeSize / trades.length);\n    const averageHoldingPeriod = totalHoldingPeriod / trades.length / (1000 * 60 * 60 * 24); // in days\n\n    return {\n      totalProfitLoss,\n      winLossRatio,\n      averageReturn,\n      biggestWin,\n      biggestLoss,\n      averageTradeSize,\n      averageHoldingPeriod,\n      numberOfTrades: trades.length,\n      profitFactor\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }\n    }, \"Error: \", error);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detailss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Analysis\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Initial Cash:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"$\", initialCash.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Cash:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"$\", tradeMetrics.totalProfitLoss.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Trades:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, tradeMetrics.numberOfTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"P/L:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"$\", tradeMetrics.totalProfitLoss.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Win %:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, (tradeMetrics.winLossRatio * 100).toFixed(2), \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Avg. Return:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"$\", tradeMetrics.averageReturn)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Biggest Win:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"$\", tradeMetrics.biggestWin.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Biggest Loss:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"$\", tradeMetrics.biggestLoss.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Pos. Sizing:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, tradeMetrics.averageTradeSize)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Days:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, Math.round(tradeMetrics.averageHoldingPeriod))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"Profit Factor:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, tradeMetrics.profitFactor))));\n};\nexport default Details;","map":{"version":3,"names":["React","useEffect","useState","fetchTrades","fetchCash","Details","tradeMetrics","setTradeMetrics","initialCash","setInitialCash","loading","setLoading","error","setError","fetchTradeMetrics","trades","metrics","calculateTradeMetrics","message","fetchInitialCash","cashEntries","totalInitialCash","reduce","acc","curr","totalProfitLoss","winCount","lossCount","biggestWin","biggestLoss","totalReturn","totalTradeSize","totalHoldingPeriod","forEach","trade","profitLoss","exitPrice","entryPrice","contracts","holdingPeriod","Date","closeDate","entryDate","averageReturn","length","toFixed","winLossRatio","profitFactor","averageTradeSize","Math","round","averageHoldingPeriod","numberOfTrades","createElement","style","fontSize","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Details.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchTrades, fetchCash } from \"./ApiCalls\";\r\n\r\nconst Details = () => {\r\n  const [tradeMetrics, setTradeMetrics] = useState(null);\r\n  const [initialCash, setInitialCash] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch trades from the API\r\n  useEffect(() => {\r\n    const fetchTradeMetrics = async () => {\r\n      try {\r\n        const trades = await fetchTrades();\r\n        const metrics = calculateTradeMetrics(trades);\r\n        setTradeMetrics(metrics);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTradeMetrics();\r\n  }, []);\r\n\r\n  // Fetch initial cash from the API\r\n  useEffect(() => {\r\n    const fetchInitialCash = async () => {\r\n      try {\r\n        const cashEntries = await fetchCash();\r\n        // Assuming cashEntries is an array of cash values, sum them up\r\n        const totalInitialCash = cashEntries.reduce(\r\n          (acc, curr) => acc + curr,\r\n          0\r\n        );\r\n        setInitialCash(totalInitialCash);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchInitialCash();\r\n  }, []);\r\n\r\n  // Metrics\r\n  const calculateTradeMetrics = (trades) => {\r\n    let totalProfitLoss = 0;\r\n    let winCount = 0;\r\n    let lossCount = 0;\r\n    let biggestWin = null;\r\n    let biggestLoss = null;\r\n    let totalReturn = 0;\r\n    let totalTradeSize = 0;\r\n    let totalHoldingPeriod = 0;\r\n\r\n    trades.forEach((trade) => {\r\n      const profitLoss = trade.profitLoss;\r\n      totalProfitLoss += profitLoss;\r\n      totalReturn += (trade.exitPrice - trade.entryPrice) * trade.contracts;\r\n      totalTradeSize += trade.contracts;\r\n      const holdingPeriod =\r\n        new Date(trade.closeDate) - new Date(trade.entryDate);\r\n      totalHoldingPeriod += holdingPeriod;\r\n\r\n      if (profitLoss > 0) {\r\n        winCount++;\r\n        if (!biggestWin || profitLoss > biggestWin) {\r\n          biggestWin = profitLoss;\r\n        }\r\n      } else {\r\n        lossCount++;\r\n        if (!biggestLoss || profitLoss < biggestLoss) {\r\n          biggestLoss = profitLoss;\r\n        }\r\n      }\r\n    });\r\n\r\n    const averageReturn = (totalReturn / trades.length).toFixed(2);\r\n    const winLossRatio = (winCount / trades.length).toFixed(2);\r\n    const profitFactor = (totalProfitLoss / (lossCount || 1)).toFixed(2);\r\n    const averageTradeSize = Math.round(totalTradeSize / trades.length);\r\n    const averageHoldingPeriod =\r\n      totalHoldingPeriod / trades.length / (1000 * 60 * 60 * 24); // in days\r\n\r\n    return {\r\n      totalProfitLoss,\r\n      winLossRatio,\r\n      averageReturn,\r\n      biggestWin,\r\n      biggestLoss,\r\n      averageTradeSize,\r\n      averageHoldingPeriod,\r\n      numberOfTrades: trades.length,\r\n      profitFactor,\r\n    };\r\n  };\r\n\r\n  if (loading) {\r\n    return <p style={{ fontSize: \"10px\" }}>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p style={{ fontSize: \"10px\" }}>Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"detailss\">\r\n      <div className=\"header\">Analysis</div>\r\n      <div className=\"metrics\">\r\n        <div className=\"metric\">\r\n          <span>Initial Cash:</span>\r\n          <span>${initialCash.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Cash:</span>\r\n          <span>${tradeMetrics.totalProfitLoss.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Trades:</span>\r\n          <span>{tradeMetrics.numberOfTrades}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>P/L:</span>\r\n          <span>${tradeMetrics.totalProfitLoss.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Win %:</span>\r\n          <span>{(tradeMetrics.winLossRatio * 100).toFixed(2)}%</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Avg. Return:</span>\r\n          <span>${tradeMetrics.averageReturn}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Biggest Win:</span>\r\n          <span>${tradeMetrics.biggestWin.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Biggest Loss:</span>\r\n          <span>${tradeMetrics.biggestLoss.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Pos. Sizing:</span>\r\n          <span>{tradeMetrics.averageTradeSize}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Days:</span>\r\n          <span>{Math.round(tradeMetrics.averageHoldingPeriod)}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Profit Factor:</span>\r\n          <span>{tradeMetrics.profitFactor}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}