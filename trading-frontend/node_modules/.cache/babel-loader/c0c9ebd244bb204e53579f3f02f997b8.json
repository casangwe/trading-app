{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\n// import { fetchTrades } from \"../api/TradesAPI\";\n// import { formatDate, formatCash } from \"../func/functions\";\n// import NewTransaction from \"./NewTransaction\";\n\n// const TransactionTable = () => {\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Fetch transactions and trades on component mount\n//   useEffect(() => {\n//     const getTransactionsAndTrades = async () => {\n//       try {\n//         const transactionsData = await fetchTransactions();\n//         const tradesData = await fetchTrades();\n//         console.log(\"Fetched trades:\", tradesData);\n\n//         const formattedTrades = tradesData.map((trade) => {\n//           const profitLossAmount = (trade.profit_loss || 0) * 100;\n//           const profitOrLoss = profitLossAmount >= 0 ? \"profit\" : \"loss\";\n\n//           return {\n//             id: trade.id,\n//             transaction_date: trade.close_date,\n//             transaction_type: \"Trade\",\n//             amount: profitLossAmount,\n//             transaction_summary: `${trade.symbol} trade with ${formatCash(\n//               Math.abs(profitLossAmount)\n//             )} ${profitOrLoss}`,\n//           };\n//         });\n\n//         const allData = [...transactionsData, ...formattedTrades].sort(\n//           (a, b) => new Date(b.transaction_date) - new Date(a.transaction_date)\n//         );\n\n//         setTransactions(allData);\n//         setLoading(false);\n//       } catch (error) {\n//         setError(error.message);\n//         setLoading(false);\n//       }\n//     };\n\n//     getTransactionsAndTrades();\n//   }, []);\n\n//   const handleOpenModal = () => {\n//     setShowModal(true);\n//   };\n\n//   const handleCloseModal = () => {\n//     setShowModal(false);\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error fetching transactions: {error}</div>;\n//   }\n\n//   return (\n//     <div className=\"transaction-table-container\">\n//       <div className=\"header-card\">\n//         <p className=\"title\">Transactions</p>\n//         <i\n//           className=\"btn btn-primary fa-solid fa-plus\"\n//           id=\"transaction-new-btn\"\n//           onClick={handleOpenModal}\n//         ></i>\n//       </div>\n//       <hr />\n//       <table className=\"transaction-table\">\n//         <thead>\n//           <tr>\n//             <th>Date</th>\n//             <th>Type</th>\n//             <th>Amount</th>\n//             <th>Summary</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map((transaction) => (\n//             <tr key={transaction.id}>\n//               <td>{formatDate(transaction.transaction_date)}</td>\n//               <td>{transaction.transaction_type}</td>\n//               <td>{formatCash(transaction.amount)}</td>\n//               <td>{transaction.transaction_summary}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showModal && <NewTransaction onClose={handleCloseModal} />}\n//     </div>\n//   );\n// };\n\n// export default TransactionTable;\n\n// import React, { useState, useEffect } from \"react\";\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\n// import { fetchTrades } from \"../api/TradesAPI\";\n// import { formatDate, formatCash } from \"../func/functions\";\n// import NewTransaction from \"./NewTransaction\";\n\n// const TransactionTable = () => {\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Fetch transactions and trades on component mount\n//   useEffect(() => {\n//     const getTransactionsAndTrades = async () => {\n//       try {\n//         // Fetch transactions\n//         const transactionsData = await fetchTransactions();\n\n//         const tradesData = await fetchTrades();\n//         console.log(\"Fetched trades:\", tradesData);\n\n//         const formattedTrades = tradesData.map((trade) => ({\n//           id: trade.id,\n//           transaction_date: trade.close_date,\n//           transaction_type: \"Trade\",\n//           amount: trade.profit_loss ? trade.profit_loss : 0,\n//           transaction_summary: `${trade.symbol} trade with ${formatCash(\n//             trade.profit_loss || 0\n//           )} PnL`,\n//         }));\n\n//         // Combine transactions and trades\n//         const allData = [...transactionsData, ...formattedTrades].sort(\n//           (a, b) => new Date(b.transaction_date) - new Date(a.transaction_date)\n//         );\n\n//         setTransactions(allData);\n//         setLoading(false);\n//       } catch (error) {\n//         setError(error.message);\n//         setLoading(false);\n//       }\n//     };\n\n//     getTransactionsAndTrades();\n//   }, []);\n\n//   const handleOpenModal = () => {\n//     setShowModal(true);\n//   };\n\n//   const handleCloseModal = () => {\n//     setShowModal(false);\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error fetching transactions: {error}</div>;\n//   }\n\n//   return (\n//     <div className=\"transaction-table-container\">\n//       <div className=\"header-card\">\n//         <p className=\"title\">Transactions</p>\n//         <i\n//           className=\"btn btn-primary fa-solid fa-plus\"\n//           id=\"transaction-new-btn\"\n//           onClick={handleOpenModal}\n//         ></i>\n//       </div>\n//       <hr />\n//       <table className=\"transaction-table\">\n//         <thead>\n//           <tr>\n//             <th>Date</th>\n//             <th>Type</th>\n//             <th>Amount</th>\n//             <th>Summary</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map((transaction) => (\n//             <tr key={transaction.id}>\n//               <td>{formatDate(transaction.transaction_date)}</td>\n//               <td>{transaction.transaction_type}</td>\n//               <td>{formatCash(transaction.amount)}</td>\n//               <td>{transaction.transaction_summary}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showModal && <NewTransaction onClose={handleCloseModal} />}\n//     </div>\n//   );\n// };\n\n// export default TransactionTable;\n\n// import React, { useState, useEffect } from \"react\";\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\n// import { fetchTrades } from \"../api/TradesAPI\"; // Import the trades fetching function\n// import { formatDate, formatCash } from \"../func/functions\";\n// import NewTransaction from \"./NewTransaction\";\n\n// const TransactionTable = () => {\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Fetch transactions and trades on component mount\n//   useEffect(() => {\n//     const getTransactionsAndTrades = async () => {\n//       try {\n//         // Fetch transactions\n//         const transactionsData = await fetchTransactions();\n\n//         // Fetch trades and map them to transaction-like format\n//         const tradesData = await fetchTrades();\n//         const formattedTrades = tradesData.map((trade) => ({\n//           id: trade.id,\n//           transaction_date: trade.close_date,\n//           transaction_type: \"Trade\",\n//           amount: trade.net_pnl,\n//           transaction_summary: `${trade.symbol}trade with ${formatCash(\n//             trade.net_pnl\n//           )} pnl `,\n//         }));\n\n//         // Combine transactions and trades\n//         const allData = [...transactionsData, ...formattedTrades].sort(\n//           (a, b) => new Date(b.transaction_date) - new Date(a.transaction_date)\n//         );\n\n//         setTransactions(allData);\n//         setLoading(false);\n//       } catch (error) {\n//         setError(error.message);\n//         setLoading(false);\n//       }\n//     };\n\n//     getTransactionsAndTrades();\n//   }, []);\n\n//   const handleOpenModal = () => {\n//     setShowModal(true);\n//   };\n\n//   const handleCloseModal = () => {\n//     setShowModal(false);\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error fetching transactions: {error}</div>;\n//   }\n\n//   return (\n//     <div className=\"transaction-table-container\">\n//       <div className=\"header-card\">\n//         <p className=\"title\">Transactions</p>\n//         <i\n//           className=\"btn btn-primary fa-solid fa-plus\"\n//           id=\"transaction-new-btn\"\n//           onClick={handleOpenModal}\n//         ></i>\n//       </div>\n//       <hr />\n//       <table className=\"transaction-table\">\n//         <thead>\n//           <tr>\n//             <th>Date</th>\n//             <th>Type</th>\n//             <th>Amount</th>\n//             <th>Summary</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map((transaction) => (\n//             <tr key={transaction.id}>\n//               <td>{formatDate(transaction.transaction_date)}</td>\n//               <td>{transaction.transaction_type}</td>\n//               <td>{formatCash(transaction.amount)}</td>\n//               <td>{transaction.transaction_summary}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showModal && <NewTransaction onClose={handleCloseModal} />}\n//     </div>\n//   );\n// };\n\n// export default TransactionTable;\n\n// import React, { useState, useEffect } from \"react\";\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\n// import { formatDate, formatCash } from \"../func/functions\";\n// import NewTransaction from \"./NewTransaction\";\n\n// const TransactionTable = () => {\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Fetch transactions on component mount\n//   useEffect(() => {\n//     const getTransactions = async () => {\n//       try {\n//         const data = await fetchTransactions();\n//         setTransactions(data);\n//         setLoading(false);\n//       } catch (error) {\n//         setError(error.message);\n//         setLoading(false);\n//       }\n//     };\n\n//     getTransactions();\n//   }, []);\n\n//   const handleOpenModal = () => {\n//     setShowModal(true);\n//   };\n\n//   const handleCloseModal = () => {\n//     setShowModal(false);\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error fetching transactions: {error}</div>;\n//   }\n\n//   return (\n//     <div className=\"transaction-table-container\">\n//       <div className=\"header-card\">\n//         <p className=\"title\">Transactions</p>\n//         <i\n//           className=\"btn btn-primary fa-solid fa-plus\"\n//           id=\"transaction-new-btn\"\n//           onClick={handleOpenModal}\n//         ></i>\n//       </div>\n//       <hr />\n//       <table className=\"transaction-table\">\n//         <thead>\n//           <tr>\n//             <th>Date</th>\n//             <th>Type</th>\n//             <th>Amount</th>\n//             <th>Summary</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map((transaction) => (\n//             <tr key={transaction.id}>\n//               <td>{formatDate(transaction.transaction_date)}</td>\n//               <td>{transaction.transaction_type}</td>\n//               <td>{formatCash(transaction.amount)}</td>\n//               <td>{transaction.transaction_summary}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showModal && <NewTransaction onClose={handleCloseModal} />}\n//     </div>\n//   );\n// };\n\n// export default TransactionTable;","map":{"version":3,"names":[],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/transactions/TransactionTable.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\r\n// import { fetchTrades } from \"../api/TradesAPI\";\r\n// import { formatDate, formatCash } from \"../func/functions\";\r\n// import NewTransaction from \"./NewTransaction\";\r\n\r\n// const TransactionTable = () => {\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   // Fetch transactions and trades on component mount\r\n//   useEffect(() => {\r\n//     const getTransactionsAndTrades = async () => {\r\n//       try {\r\n//         const transactionsData = await fetchTransactions();\r\n//         const tradesData = await fetchTrades();\r\n//         console.log(\"Fetched trades:\", tradesData);\r\n\r\n//         const formattedTrades = tradesData.map((trade) => {\r\n//           const profitLossAmount = (trade.profit_loss || 0) * 100;\r\n//           const profitOrLoss = profitLossAmount >= 0 ? \"profit\" : \"loss\";\r\n\r\n//           return {\r\n//             id: trade.id,\r\n//             transaction_date: trade.close_date,\r\n//             transaction_type: \"Trade\",\r\n//             amount: profitLossAmount,\r\n//             transaction_summary: `${trade.symbol} trade with ${formatCash(\r\n//               Math.abs(profitLossAmount)\r\n//             )} ${profitOrLoss}`,\r\n//           };\r\n//         });\r\n\r\n//         const allData = [...transactionsData, ...formattedTrades].sort(\r\n//           (a, b) => new Date(b.transaction_date) - new Date(a.transaction_date)\r\n//         );\r\n\r\n//         setTransactions(allData);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         setError(error.message);\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     getTransactionsAndTrades();\r\n//   }, []);\r\n\r\n//   const handleOpenModal = () => {\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setShowModal(false);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error fetching transactions: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"transaction-table-container\">\r\n//       <div className=\"header-card\">\r\n//         <p className=\"title\">Transactions</p>\r\n//         <i\r\n//           className=\"btn btn-primary fa-solid fa-plus\"\r\n//           id=\"transaction-new-btn\"\r\n//           onClick={handleOpenModal}\r\n//         ></i>\r\n//       </div>\r\n//       <hr />\r\n//       <table className=\"transaction-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Date</th>\r\n//             <th>Type</th>\r\n//             <th>Amount</th>\r\n//             <th>Summary</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {transactions.map((transaction) => (\r\n//             <tr key={transaction.id}>\r\n//               <td>{formatDate(transaction.transaction_date)}</td>\r\n//               <td>{transaction.transaction_type}</td>\r\n//               <td>{formatCash(transaction.amount)}</td>\r\n//               <td>{transaction.transaction_summary}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showModal && <NewTransaction onClose={handleCloseModal} />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TransactionTable;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\r\n// import { fetchTrades } from \"../api/TradesAPI\";\r\n// import { formatDate, formatCash } from \"../func/functions\";\r\n// import NewTransaction from \"./NewTransaction\";\r\n\r\n// const TransactionTable = () => {\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   // Fetch transactions and trades on component mount\r\n//   useEffect(() => {\r\n//     const getTransactionsAndTrades = async () => {\r\n//       try {\r\n//         // Fetch transactions\r\n//         const transactionsData = await fetchTransactions();\r\n\r\n//         const tradesData = await fetchTrades();\r\n//         console.log(\"Fetched trades:\", tradesData);\r\n\r\n//         const formattedTrades = tradesData.map((trade) => ({\r\n//           id: trade.id,\r\n//           transaction_date: trade.close_date,\r\n//           transaction_type: \"Trade\",\r\n//           amount: trade.profit_loss ? trade.profit_loss : 0,\r\n//           transaction_summary: `${trade.symbol} trade with ${formatCash(\r\n//             trade.profit_loss || 0\r\n//           )} PnL`,\r\n//         }));\r\n\r\n//         // Combine transactions and trades\r\n//         const allData = [...transactionsData, ...formattedTrades].sort(\r\n//           (a, b) => new Date(b.transaction_date) - new Date(a.transaction_date)\r\n//         );\r\n\r\n//         setTransactions(allData);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         setError(error.message);\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     getTransactionsAndTrades();\r\n//   }, []);\r\n\r\n//   const handleOpenModal = () => {\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setShowModal(false);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error fetching transactions: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"transaction-table-container\">\r\n//       <div className=\"header-card\">\r\n//         <p className=\"title\">Transactions</p>\r\n//         <i\r\n//           className=\"btn btn-primary fa-solid fa-plus\"\r\n//           id=\"transaction-new-btn\"\r\n//           onClick={handleOpenModal}\r\n//         ></i>\r\n//       </div>\r\n//       <hr />\r\n//       <table className=\"transaction-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Date</th>\r\n//             <th>Type</th>\r\n//             <th>Amount</th>\r\n//             <th>Summary</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {transactions.map((transaction) => (\r\n//             <tr key={transaction.id}>\r\n//               <td>{formatDate(transaction.transaction_date)}</td>\r\n//               <td>{transaction.transaction_type}</td>\r\n//               <td>{formatCash(transaction.amount)}</td>\r\n//               <td>{transaction.transaction_summary}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showModal && <NewTransaction onClose={handleCloseModal} />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TransactionTable;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\r\n// import { fetchTrades } from \"../api/TradesAPI\"; // Import the trades fetching function\r\n// import { formatDate, formatCash } from \"../func/functions\";\r\n// import NewTransaction from \"./NewTransaction\";\r\n\r\n// const TransactionTable = () => {\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   // Fetch transactions and trades on component mount\r\n//   useEffect(() => {\r\n//     const getTransactionsAndTrades = async () => {\r\n//       try {\r\n//         // Fetch transactions\r\n//         const transactionsData = await fetchTransactions();\r\n\r\n//         // Fetch trades and map them to transaction-like format\r\n//         const tradesData = await fetchTrades();\r\n//         const formattedTrades = tradesData.map((trade) => ({\r\n//           id: trade.id,\r\n//           transaction_date: trade.close_date,\r\n//           transaction_type: \"Trade\",\r\n//           amount: trade.net_pnl,\r\n//           transaction_summary: `${trade.symbol}trade with ${formatCash(\r\n//             trade.net_pnl\r\n//           )} pnl `,\r\n//         }));\r\n\r\n//         // Combine transactions and trades\r\n//         const allData = [...transactionsData, ...formattedTrades].sort(\r\n//           (a, b) => new Date(b.transaction_date) - new Date(a.transaction_date)\r\n//         );\r\n\r\n//         setTransactions(allData);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         setError(error.message);\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     getTransactionsAndTrades();\r\n//   }, []);\r\n\r\n//   const handleOpenModal = () => {\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setShowModal(false);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error fetching transactions: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"transaction-table-container\">\r\n//       <div className=\"header-card\">\r\n//         <p className=\"title\">Transactions</p>\r\n//         <i\r\n//           className=\"btn btn-primary fa-solid fa-plus\"\r\n//           id=\"transaction-new-btn\"\r\n//           onClick={handleOpenModal}\r\n//         ></i>\r\n//       </div>\r\n//       <hr />\r\n//       <table className=\"transaction-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Date</th>\r\n//             <th>Type</th>\r\n//             <th>Amount</th>\r\n//             <th>Summary</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {transactions.map((transaction) => (\r\n//             <tr key={transaction.id}>\r\n//               <td>{formatDate(transaction.transaction_date)}</td>\r\n//               <td>{transaction.transaction_type}</td>\r\n//               <td>{formatCash(transaction.amount)}</td>\r\n//               <td>{transaction.transaction_summary}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showModal && <NewTransaction onClose={handleCloseModal} />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TransactionTable;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\r\n// import { formatDate, formatCash } from \"../func/functions\";\r\n// import NewTransaction from \"./NewTransaction\";\r\n\r\n// const TransactionTable = () => {\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   // Fetch transactions on component mount\r\n//   useEffect(() => {\r\n//     const getTransactions = async () => {\r\n//       try {\r\n//         const data = await fetchTransactions();\r\n//         setTransactions(data);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         setError(error.message);\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     getTransactions();\r\n//   }, []);\r\n\r\n//   const handleOpenModal = () => {\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setShowModal(false);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error fetching transactions: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"transaction-table-container\">\r\n//       <div className=\"header-card\">\r\n//         <p className=\"title\">Transactions</p>\r\n//         <i\r\n//           className=\"btn btn-primary fa-solid fa-plus\"\r\n//           id=\"transaction-new-btn\"\r\n//           onClick={handleOpenModal}\r\n//         ></i>\r\n//       </div>\r\n//       <hr />\r\n//       <table className=\"transaction-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Date</th>\r\n//             <th>Type</th>\r\n//             <th>Amount</th>\r\n//             <th>Summary</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {transactions.map((transaction) => (\r\n//             <tr key={transaction.id}>\r\n//               <td>{formatDate(transaction.transaction_date)}</td>\r\n//               <td>{transaction.transaction_type}</td>\r\n//               <td>{formatCash(transaction.amount)}</td>\r\n//               <td>{transaction.transaction_summary}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showModal && <NewTransaction onClose={handleCloseModal} />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TransactionTable;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}