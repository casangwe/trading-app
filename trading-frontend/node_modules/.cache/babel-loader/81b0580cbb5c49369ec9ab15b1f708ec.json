{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/styles.css\"; // Import the stylesheet\nimport Account from \"./Account\";\nimport NewTrade from \"./NewTrade\";\nimport RecentTrades from \"./RecentTrades\";\nimport BiggestWinsLosses from \"./BiggestWinsLosses\";\nimport AccountGraph from \"./AccountGraph\";\nconst Home = () => {\n  const [recentTrades, setRecentTrades] = useState([]);\n  useEffect(() => {\n    // Fetch recent trades from the backend\n    fetch(\"http://localhost:8000/trades/\").then(response => response.json()).then(data => setRecentTrades(data)).catch(error => console.error(\"Error fetching recent trades:\", error));\n  }, []);\n\n  // Function to format date string to MM/DD/YYYY format\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Get month (adding 1 because months are zero-based)\n    const day = date.getDate().toString().padStart(2, \"0\"); // Get day\n    const year = date.getFullYear(); // Get year\n    return `${month}/${day}/${year}`; // Format the date as MM/DD/YYYY\n  };\n\n  // Function to handle form submission of new trade\n  const handleNewTradeSubmit = formData => {\n    // POST request to backend to add new trade\n    fetch(\"http://localhost:8000/trades/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      // Update state with the newly added trade\n      setRecentTrades(prevTrades => [data, ...prevTrades]);\n    }).catch(error => console.error(\"Error adding new trade:\", error));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AccountGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewTrade, {\n    onTradeSubmit: handleNewTradeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RecentTrades, {\n    recentTrades: recentTrades,\n    formatDate: formatDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BiggestWinsLosses, {\n    trades: recentTrades,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","Account","NewTrade","RecentTrades","BiggestWinsLosses","AccountGraph","Home","recentTrades","setRecentTrades","fetch","then","response","json","data","catch","error","console","formatDate","dateString","date","Date","month","getMonth","toString","padStart","day","getDate","year","getFullYear","handleNewTradeSubmit","formData","method","headers","body","JSON","stringify","prevTrades","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onTradeSubmit","trades"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/styles.css\"; // Import the stylesheet\r\nimport Account from \"./Account\";\r\nimport NewTrade from \"./NewTrade\";\r\nimport RecentTrades from \"./RecentTrades\";\r\nimport BiggestWinsLosses from \"./BiggestWinsLosses\";\r\nimport AccountGraph from \"./AccountGraph\";\r\n\r\nconst Home = () => {\r\n  const [recentTrades, setRecentTrades] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch recent trades from the backend\r\n    fetch(\"http://localhost:8000/trades/\")\r\n      .then((response) => response.json())\r\n      .then((data) => setRecentTrades(data))\r\n      .catch((error) => console.error(\"Error fetching recent trades:\", error));\r\n  }, []);\r\n\r\n  // Function to format date string to MM/DD/YYYY format\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Get month (adding 1 because months are zero-based)\r\n    const day = date.getDate().toString().padStart(2, \"0\"); // Get day\r\n    const year = date.getFullYear(); // Get year\r\n    return `${month}/${day}/${year}`; // Format the date as MM/DD/YYYY\r\n  };\r\n\r\n  // Function to handle form submission of new trade\r\n  const handleNewTradeSubmit = (formData) => {\r\n    // POST request to backend to add new trade\r\n    fetch(\"http://localhost:8000/trades/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Update state with the newly added trade\r\n        setRecentTrades((prevTrades) => [data, ...prevTrades]);\r\n      })\r\n      .catch((error) => console.error(\"Error adding new trade:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Account />\r\n      <AccountGraph />\r\n      <NewTrade onTradeSubmit={handleNewTradeSubmit} />\r\n      <RecentTrades recentTrades={recentTrades} formatDate={formatDate} />\r\n      <BiggestWinsLosses trades={recentTrades} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}