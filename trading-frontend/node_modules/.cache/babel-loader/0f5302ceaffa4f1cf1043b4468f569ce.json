{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\TotalPnl.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\nimport { getCash } from \"../api/CashApi\";\nconst TotalPnl = () => {\n  const [cashData, setCashData] = useState(null);\n  const [dailyPNLData, setDailyPNLData] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch Cash data\n  useEffect(() => {\n    const fetchCashData = async () => {\n      try {\n        const data = await getCash();\n        setCashData(data);\n        console.log(\"Cash data:\", data);\n      } catch (error) {\n        setError(\"Error fetching cash data\");\n        console.error(error);\n      }\n    };\n    fetchCashData();\n  }, []);\n\n  // Fetch Daily PNL data\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        console.log(\"Daily PNL data:\", data);\n        if (data.length > 0) {\n          const sortedData = data.sort((a, b) => new Date(b.entry_date) - new Date(a.entry_date));\n          setDailyPNLData(sortedData);\n        }\n      } catch (error) {\n        setError(\"Error fetching Daily PNL data\");\n        console.error(error);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n\n  // Fetch Transactions (deposits, withdrawals, trades)\n  useEffect(() => {\n    const getTransactions = async () => {\n      try {\n        const data = await fetchTransactions();\n        setTransactions(data);\n        console.log(\"Transactions:\", data);\n      } catch (error) {\n        setError(\"Error fetching transactions\");\n        console.error(error);\n      }\n    };\n    getTransactions();\n  }, []);\n\n  // Loading and error handling\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, error);\n\n  // Calculate PNL\n  const calculateTotalPNL = () => {\n    if (!cashData || !dailyPNLData || transactions.length === 0) return null;\n    const initialDeposit = transactions.filter(txn => txn.transaction_type === \"deposit\").reduce((acc, txn) => acc + txn.amount, 0);\n    const totalWithdrawals = transactions.filter(txn => txn.transaction_type === \"withdrawal\").reduce((acc, txn) => acc + txn.amount, 0);\n    const dailyPNLTotal = dailyPNLData.reduce((acc, pnl) => acc + pnl.pnl_amount, 0);\n    const netPNL = initialDeposit + dailyPNLTotal - totalWithdrawals;\n    return {\n      initialDeposit,\n      totalWithdrawals,\n      dailyPNLTotal,\n      netPNL\n    };\n  };\n  const pnl = calculateTotalPNL();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Total PNL Page\"), pnl && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Initial Deposit: \", pnl.initialDeposit), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Total Withdrawals: \", pnl.totalWithdrawals), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Total Daily PNL: \", pnl.dailyPNLTotal), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Net PNL: \", pnl.netPNL)), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Transaction Details\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, transactions.map((txn, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, txn.transaction_type, \" - $\", txn.amount, \" on \", txn.transaction_date))));\n};\nexport default TotalPnl;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","fetchTransactions","getCash","TotalPnl","cashData","setCashData","dailyPNLData","setDailyPNLData","transactions","setTransactions","loading","setLoading","error","setError","fetchCashData","data","console","log","fetchDailyPNLData","length","sortedData","sort","a","b","Date","entry_date","getTransactions","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","calculateTotalPNL","initialDeposit","filter","txn","transaction_type","reduce","acc","amount","totalWithdrawals","dailyPNLTotal","pnl","pnl_amount","netPNL","map","index","key","transaction_date"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/TotalPnl.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\r\nimport { getCash } from \"../api/CashApi\";\r\n\r\nconst TotalPnl = () => {\r\n  const [cashData, setCashData] = useState(null);\r\n  const [dailyPNLData, setDailyPNLData] = useState(null);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch Cash data\r\n  useEffect(() => {\r\n    const fetchCashData = async () => {\r\n      try {\r\n        const data = await getCash();\r\n        setCashData(data);\r\n        console.log(\"Cash data:\", data);\r\n      } catch (error) {\r\n        setError(\"Error fetching cash data\");\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchCashData();\r\n  }, []);\r\n\r\n  // Fetch Daily PNL data\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        console.log(\"Daily PNL data:\", data);\r\n        if (data.length > 0) {\r\n          const sortedData = data.sort(\r\n            (a, b) => new Date(b.entry_date) - new Date(a.entry_date)\r\n          );\r\n          setDailyPNLData(sortedData);\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching Daily PNL data\");\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  // Fetch Transactions (deposits, withdrawals, trades)\r\n  useEffect(() => {\r\n    const getTransactions = async () => {\r\n      try {\r\n        const data = await fetchTransactions();\r\n        setTransactions(data);\r\n        console.log(\"Transactions:\", data);\r\n      } catch (error) {\r\n        setError(\"Error fetching transactions\");\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    getTransactions();\r\n  }, []);\r\n\r\n  // Loading and error handling\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  // Calculate PNL\r\n  const calculateTotalPNL = () => {\r\n    if (!cashData || !dailyPNLData || transactions.length === 0) return null;\r\n\r\n    const initialDeposit = transactions\r\n      .filter((txn) => txn.transaction_type === \"deposit\")\r\n      .reduce((acc, txn) => acc + txn.amount, 0);\r\n\r\n    const totalWithdrawals = transactions\r\n      .filter((txn) => txn.transaction_type === \"withdrawal\")\r\n      .reduce((acc, txn) => acc + txn.amount, 0);\r\n\r\n    const dailyPNLTotal = dailyPNLData.reduce(\r\n      (acc, pnl) => acc + pnl.pnl_amount,\r\n      0\r\n    );\r\n\r\n    const netPNL = initialDeposit + dailyPNLTotal - totalWithdrawals;\r\n\r\n    return {\r\n      initialDeposit,\r\n      totalWithdrawals,\r\n      dailyPNLTotal,\r\n      netPNL,\r\n    };\r\n  };\r\n\r\n  const pnl = calculateTotalPNL();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Total PNL Page</h1>\r\n\r\n      {pnl && (\r\n        <div>\r\n          <p>Initial Deposit: {pnl.initialDeposit}</p>\r\n          <p>Total Withdrawals: {pnl.totalWithdrawals}</p>\r\n          <p>Total Daily PNL: {pnl.dailyPNLTotal}</p>\r\n          <h2>Net PNL: {pnl.netPNL}</h2>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Transaction Details</h2>\r\n      <ul>\r\n        {transactions.map((txn, index) => (\r\n          <li key={index}>\r\n            {txn.transaction_type} - ${txn.amount} on {txn.transaction_date}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalPnl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}