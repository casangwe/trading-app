{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\Bars.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { BarChart, Bar, XAxis, Tooltip, ResponsiveContainer, YAxis } from \"recharts\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst Bars = () => {\n  const [dailyPNLData, setDailyPNLData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [view, setView] = useState(\"daily\");\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        setDailyPNLData(data);\n        console.log(\"daily pnl: \", data);\n      } catch (error) {\n        setError(\"No Daily PNL data\");\n        console.error(\"No Daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, error);\n  if (!dailyPNLData) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, \"No PNL data available\");\n  const formatMonthYear = dateStr => {\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\n    const dateParts = dateStr.split(\"-\");\n    const month = dateParts[1];\n    const year = dateParts[0];\n    return `${month}/${year}`;\n  };\n  const getCurrentWeek = data => {\n    const today = new Date();\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(today.getDate() - today.getDay());\n    startOfWeek.setHours(0, 0, 0, 0);\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(startOfWeek.getDate() + 6);\n    endOfWeek.setHours(23, 59, 59, 999);\n    const weekData = data.filter(entry => {\n      const entryDate = new Date(entry.entry_date);\n      return entryDate >= startOfWeek && entryDate <= endOfWeek;\n    });\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n    return weekData;\n  };\n  const getCurrentMonth = data => {\n    const weeks = [];\n    const today = new Date();\n    const currentMonth = today.getMonth();\n    const currentYear = today.getFullYear();\n\n    // Start and end of the current month\n    const startOfMonth = new Date(currentYear, currentMonth, 1);\n    const endOfMonth = new Date(currentYear, currentMonth + 1, 0); // Last day of the month\n\n    // Initialize the first week within the month\n    let startOfWeek = new Date(startOfMonth);\n    let endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(startOfWeek.getDate() + 6); // Set the end of the first week\n\n    // Loop through the month, breaking it into weeks\n    while (startOfWeek <= endOfMonth) {\n      // Adjust the end of the week if it goes past the end of the month\n      if (endOfWeek > endOfMonth) {\n        endOfWeek = new Date(endOfMonth);\n      }\n\n      // Filter entries that fall within the current weekly range\n      const weekData = data.filter(entry => {\n        const entryDate = new Date(entry.entry_date);\n        return entryDate >= startOfWeek && entryDate <= endOfWeek;\n      });\n\n      // Add sorted week data to the list of weeks if there are entries for this week\n      if (weekData.length > 0) {\n        weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n        weeks.push(weekData);\n      }\n\n      // Move to the next week\n      startOfWeek = new Date(endOfWeek);\n      startOfWeek.setDate(startOfWeek.getDate() + 1);\n      endOfWeek = new Date(startOfWeek);\n      endOfWeek.setDate(endOfWeek.getDate() + 6);\n    }\n    return weeks;\n  };\n\n  // const getCurrentMonth = (data) => {\n  //   const weeks = [];\n  //   let week = [];\n  //   const today = new Date();\n  //   const currentMonth = today.getMonth();\n\n  //   data.forEach((entry, index) => {\n  //     const entryDate = new Date(entry.entry_date);\n  //     if (entryDate.getMonth() === currentMonth) {\n  //       week.push(entry);\n  //       if ((index + 1) % 5 === 0) {\n  //         week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n  //         weeks.push(week);\n  //         week = [];\n  //       }\n  //     }\n  //   });\n\n  //   if (week.length) {\n  //     week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n  //     weeks.push(week);\n  //   }\n\n  //   return weeks;\n  // };\n\n  const getMonthsData = data => {\n    const months = Array.from({\n      length: 12\n    }, () => []);\n    data.forEach(entry => {\n      const entryDate = new Date(entry.entry_date);\n      months[entryDate.getMonth()].push(entry);\n    });\n    return months.filter(month => month.length > 0);\n  };\n  const calculateBars = () => {\n    let barsData = [];\n    if (view === \"daily\") {\n      const currentWeek = getCurrentWeek(dailyPNLData);\n      barsData = currentWeek.map(day => ({\n        date: formatDate(day.entry_date),\n        balance: parseFloat(day.balance || 0)\n      }));\n    } else if (view === \"weekly\") {\n      const currentMonth = getCurrentMonth(dailyPNLData);\n      barsData = currentMonth.map(week => {\n        const weekBalance = week.reduce((sum, day) => sum + parseFloat(day.balance || 0), 0);\n        return {\n          date: `${formatDate(week[0].entry_date)} - ${formatDate(week[week.length - 1].entry_date)}`,\n          balance: weekBalance\n        };\n      });\n    } else if (view === \"monthly\") {\n      const months = getMonthsData(dailyPNLData).sort((a, b) => {\n        const dateA = new Date(a[0].entry_date);\n        const dateB = new Date(b[0].entry_date);\n        return dateA - dateB;\n      });\n      barsData = months.map(month => {\n        const monthBalance = month.reduce((sum, day) => sum + parseFloat(day.balance || 0), 0);\n        return {\n          date: formatMonthYear(month[0].entry_date),\n          balance: monthBalance\n        };\n      }).reverse();\n    }\n    return barsData;\n  };\n  const barsData = calculateBars();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-bars-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"daily\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"daily\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"weekly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"weekly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, \"M\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"monthly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"monthly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"Y\"))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: barsData,\n    layout: \"vertical\",\n    style: {\n      background: \"transparent\"\n    },\n    margin: {\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    type: \"number\",\n    tick: false,\n    axisLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    type: \"category\",\n    dataKey: \"date\",\n    width: 0,\n    tick: false,\n    axisLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    formatter: value => formatCash(value),\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          date,\n          balance\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }, formatCash(balance)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"invest-date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }\n        }, date));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"balance\",\n    fill: \"#4a90e2\",\n    isAnimationActive: true,\n    radius: [5, 5, 5, 5],\n    barSize: 55,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default Bars;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","BarChart","Bar","XAxis","Tooltip","ResponsiveContainer","YAxis","formatCash","formatDate","Bars","dailyPNLData","setDailyPNLData","loading","setLoading","error","setError","view","setView","fetchDailyPNLData","data","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formatMonthYear","dateStr","includes","dateParts","split","month","year","getCurrentWeek","today","Date","startOfWeek","setDate","getDate","getDay","setHours","endOfWeek","weekData","filter","entry","entryDate","entry_date","sort","a","b","getCurrentMonth","weeks","currentMonth","getMonth","currentYear","getFullYear","startOfMonth","endOfMonth","length","push","getMonthsData","months","Array","from","forEach","calculateBars","barsData","currentWeek","map","day","date","balance","parseFloat","week","weekBalance","reduce","sum","dateA","dateB","monthBalance","reverse","className","onClick","width","height","layout","style","background","margin","top","right","left","bottom","type","tick","axisLine","dataKey","cursor","formatter","value","content","payload","fill","isAnimationActive","radius","barSize"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/Bars.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst Bars = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [view, setView] = useState(\"daily\");\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n        console.log(\"daily pnl: \", data);\r\n      } catch (error) {\r\n        setError(\"No Daily PNL data\");\r\n        console.error(\"No Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n  if (!dailyPNLData) return <p>No PNL data available</p>;\r\n\r\n  const formatMonthYear = (dateStr) => {\r\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\r\n    const dateParts = dateStr.split(\"-\");\r\n    const month = dateParts[1];\r\n    const year = dateParts[0];\r\n    return `${month}/${year}`;\r\n  };\r\n\r\n  const getCurrentWeek = (data) => {\r\n    const today = new Date();\r\n\r\n    const startOfWeek = new Date(today);\r\n    startOfWeek.setDate(today.getDate() - today.getDay());\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    const endOfWeek = new Date(startOfWeek);\r\n    endOfWeek.setDate(startOfWeek.getDate() + 6);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    const weekData = data.filter((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      return entryDate >= startOfWeek && entryDate <= endOfWeek;\r\n    });\r\n\r\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n\r\n    return weekData;\r\n  };\r\n\r\n  const getCurrentMonth = (data) => {\r\n    const weeks = [];\r\n    const today = new Date();\r\n    const currentMonth = today.getMonth();\r\n    const currentYear = today.getFullYear();\r\n\r\n    // Start and end of the current month\r\n    const startOfMonth = new Date(currentYear, currentMonth, 1);\r\n    const endOfMonth = new Date(currentYear, currentMonth + 1, 0); // Last day of the month\r\n\r\n    // Initialize the first week within the month\r\n    let startOfWeek = new Date(startOfMonth);\r\n    let endOfWeek = new Date(startOfWeek);\r\n    endOfWeek.setDate(startOfWeek.getDate() + 6); // Set the end of the first week\r\n\r\n    // Loop through the month, breaking it into weeks\r\n    while (startOfWeek <= endOfMonth) {\r\n      // Adjust the end of the week if it goes past the end of the month\r\n      if (endOfWeek > endOfMonth) {\r\n        endOfWeek = new Date(endOfMonth);\r\n      }\r\n\r\n      // Filter entries that fall within the current weekly range\r\n      const weekData = data.filter((entry) => {\r\n        const entryDate = new Date(entry.entry_date);\r\n        return entryDate >= startOfWeek && entryDate <= endOfWeek;\r\n      });\r\n\r\n      // Add sorted week data to the list of weeks if there are entries for this week\r\n      if (weekData.length > 0) {\r\n        weekData.sort(\r\n          (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n        );\r\n        weeks.push(weekData);\r\n      }\r\n\r\n      // Move to the next week\r\n      startOfWeek = new Date(endOfWeek);\r\n      startOfWeek.setDate(startOfWeek.getDate() + 1);\r\n      endOfWeek = new Date(startOfWeek);\r\n      endOfWeek.setDate(endOfWeek.getDate() + 6);\r\n    }\r\n\r\n    return weeks;\r\n  };\r\n\r\n  // const getCurrentMonth = (data) => {\r\n  //   const weeks = [];\r\n  //   let week = [];\r\n  //   const today = new Date();\r\n  //   const currentMonth = today.getMonth();\r\n\r\n  //   data.forEach((entry, index) => {\r\n  //     const entryDate = new Date(entry.entry_date);\r\n  //     if (entryDate.getMonth() === currentMonth) {\r\n  //       week.push(entry);\r\n  //       if ((index + 1) % 5 === 0) {\r\n  //         week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n  //         weeks.push(week);\r\n  //         week = [];\r\n  //       }\r\n  //     }\r\n  //   });\r\n\r\n  //   if (week.length) {\r\n  //     week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n  //     weeks.push(week);\r\n  //   }\r\n\r\n  //   return weeks;\r\n  // };\r\n\r\n  const getMonthsData = (data) => {\r\n    const months = Array.from({ length: 12 }, () => []);\r\n    data.forEach((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      months[entryDate.getMonth()].push(entry);\r\n    });\r\n    return months.filter((month) => month.length > 0);\r\n  };\r\n\r\n  const calculateBars = () => {\r\n    let barsData = [];\r\n\r\n    if (view === \"daily\") {\r\n      const currentWeek = getCurrentWeek(dailyPNLData);\r\n      barsData = currentWeek.map((day) => ({\r\n        date: formatDate(day.entry_date),\r\n        balance: parseFloat(day.balance || 0),\r\n      }));\r\n    } else if (view === \"weekly\") {\r\n      const currentMonth = getCurrentMonth(dailyPNLData);\r\n      barsData = currentMonth.map((week) => {\r\n        const weekBalance = week.reduce(\r\n          (sum, day) => sum + parseFloat(day.balance || 0),\r\n          0\r\n        );\r\n        return {\r\n          date: `${formatDate(week[0].entry_date)} - ${formatDate(\r\n            week[week.length - 1].entry_date\r\n          )}`,\r\n          balance: weekBalance,\r\n        };\r\n      });\r\n    } else if (view === \"monthly\") {\r\n      const months = getMonthsData(dailyPNLData).sort((a, b) => {\r\n        const dateA = new Date(a[0].entry_date);\r\n        const dateB = new Date(b[0].entry_date);\r\n        return dateA - dateB;\r\n      });\r\n\r\n      barsData = months\r\n        .map((month) => {\r\n          const monthBalance = month.reduce(\r\n            (sum, day) => sum + parseFloat(day.balance || 0),\r\n            0\r\n          );\r\n          return {\r\n            date: formatMonthYear(month[0].entry_date),\r\n            balance: monthBalance,\r\n          };\r\n        })\r\n        .reverse();\r\n    }\r\n\r\n    return barsData;\r\n  };\r\n\r\n  const barsData = calculateBars();\r\n\r\n  return (\r\n    <div className=\"main-bars-container\">\r\n      <div className=\"header-card\">\r\n        <div className=\"tab-container\">\r\n          <button\r\n            className={`tab-button ${view === \"daily\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"daily\")}\r\n          >\r\n            D\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"weekly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"weekly\")}\r\n          >\r\n            M\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"monthly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"monthly\")}\r\n          >\r\n            Y\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <BarChart\r\n          data={barsData}\r\n          layout=\"vertical\"\r\n          style={{ background: \"transparent\" }}\r\n          margin={{ top: 0, right: 0, left: 0, bottom: 0 }}\r\n        >\r\n          <XAxis type=\"number\" tick={false} axisLine={false} />\r\n          <YAxis\r\n            type=\"category\"\r\n            dataKey=\"date\"\r\n            width={0}\r\n            tick={false}\r\n            axisLine={false}\r\n          />\r\n          <Tooltip\r\n            cursor={false}\r\n            formatter={(value) => formatCash(value)}\r\n            content={({ payload }) => {\r\n              if (payload && payload.length) {\r\n                const { date, balance } = payload[0].payload;\r\n                return (\r\n                  <div className=\"tooltip-content\">\r\n                    <p>{formatCash(balance)}</p>\r\n                    <p className=\"invest-date\">{date}</p>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            }}\r\n          />\r\n          <Bar\r\n            dataKey=\"balance\"\r\n            fill=\"#4a90e2\"\r\n            isAnimationActive={true}\r\n            radius={[5, 5, 5, 5]}\r\n            barSize={55}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}