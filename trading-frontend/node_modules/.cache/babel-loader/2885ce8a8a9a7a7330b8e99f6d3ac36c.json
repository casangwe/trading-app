{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Details.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { fetchTrades } from \"./ApiCalls\";\nconst Details = () => {\n  const [tradeMetrics, setTradeMetrics] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch trades from the API\n  useEffect(() => {\n    const fetchTradeMetrics = async () => {\n      try {\n        const trades = await fetchTrades();\n        const metrics = calculateTradeMetrics(trades);\n        setTradeMetrics(metrics);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchTradeMetrics();\n  }, []);\n  const calculateTradeMetrics = trades => {\n    let totalProfitLoss = 0;\n    let winCount = 0;\n    let lossCount = 0;\n    let biggestWin = null;\n    let biggestLoss = null;\n    let totalReturn = 0;\n    let totalTradeSize = 0;\n    let totalHoldingPeriod = 0;\n    trades.forEach(trade => {\n      const profitLoss = trade.profitLoss;\n      totalProfitLoss += profitLoss;\n      totalReturn += (trade.exitPrice - trade.entryPrice) * trade.contracts;\n      totalTradeSize += trade.contracts;\n      const holdingPeriod = new Date(trade.closeDate) - new Date(trade.entryDate);\n      totalHoldingPeriod += holdingPeriod;\n      if (profitLoss > 0) {\n        winCount++;\n        if (!biggestWin || profitLoss > biggestWin) {\n          biggestWin = profitLoss;\n        }\n      } else {\n        lossCount++;\n        if (!biggestLoss || profitLoss < biggestLoss) {\n          biggestLoss = profitLoss;\n        }\n      }\n    });\n    const averageReturn = (totalReturn / trades.length).toFixed(2);\n    const winLossRatio = (winCount / (lossCount || 1)).toFixed(2);\n    const profitFactor = (totalProfitLoss / (lossCount || 1)).toFixed(2);\n    const averageTradeSize = (totalTradeSize / trades.length).toFixed(2);\n    const averageHoldingPeriod = (totalHoldingPeriod / trades.length / (1000 * 60 * 60 * 24)).toFixed(2); // in days\n\n    return {\n      totalProfitLoss,\n      winLossRatio,\n      averageReturn,\n      biggestWin,\n      biggestLoss,\n      averageTradeSize,\n      averageHoldingPeriod,\n      numberOfTrades: trades.length,\n      profitFactor\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }\n    }, \"Loading trade metrics...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }\n    }, \"Error fetching trade metrics: \", error);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detailss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Total Profit/Loss:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, tradeMetrics.totalProfitLoss)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Win/Loss Ratio:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, tradeMetrics.winLossRatio)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Average Return:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, tradeMetrics.averageReturn)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Biggest Win:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, tradeMetrics.biggestWin)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Biggest Loss:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, tradeMetrics.biggestLoss)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Average Trade Size:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, tradeMetrics.averageTradeSize)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Average Holding Period (Days):\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, tradeMetrics.averageHoldingPeriod)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Number of Trades:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, tradeMetrics.numberOfTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Profit Factor:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, tradeMetrics.profitFactor))));\n};\nexport default Details;","map":{"version":3,"names":["React","useEffect","useState","fetchTrades","Details","tradeMetrics","setTradeMetrics","loading","setLoading","error","setError","fetchTradeMetrics","trades","metrics","calculateTradeMetrics","message","totalProfitLoss","winCount","lossCount","biggestWin","biggestLoss","totalReturn","totalTradeSize","totalHoldingPeriod","forEach","trade","profitLoss","exitPrice","entryPrice","contracts","holdingPeriod","Date","closeDate","entryDate","averageReturn","length","toFixed","winLossRatio","profitFactor","averageTradeSize","averageHoldingPeriod","numberOfTrades","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Details.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchTrades } from \"./ApiCalls\";\r\n\r\nconst Details = () => {\r\n  const [tradeMetrics, setTradeMetrics] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch trades from the API\r\n  useEffect(() => {\r\n    const fetchTradeMetrics = async () => {\r\n      try {\r\n        const trades = await fetchTrades();\r\n        const metrics = calculateTradeMetrics(trades);\r\n        setTradeMetrics(metrics);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTradeMetrics();\r\n  }, []);\r\n\r\n  const calculateTradeMetrics = (trades) => {\r\n    let totalProfitLoss = 0;\r\n    let winCount = 0;\r\n    let lossCount = 0;\r\n    let biggestWin = null;\r\n    let biggestLoss = null;\r\n    let totalReturn = 0;\r\n    let totalTradeSize = 0;\r\n    let totalHoldingPeriod = 0;\r\n\r\n    trades.forEach((trade) => {\r\n      const profitLoss = trade.profitLoss;\r\n      totalProfitLoss += profitLoss;\r\n      totalReturn += (trade.exitPrice - trade.entryPrice) * trade.contracts;\r\n      totalTradeSize += trade.contracts;\r\n      const holdingPeriod =\r\n        new Date(trade.closeDate) - new Date(trade.entryDate);\r\n      totalHoldingPeriod += holdingPeriod;\r\n\r\n      if (profitLoss > 0) {\r\n        winCount++;\r\n        if (!biggestWin || profitLoss > biggestWin) {\r\n          biggestWin = profitLoss;\r\n        }\r\n      } else {\r\n        lossCount++;\r\n        if (!biggestLoss || profitLoss < biggestLoss) {\r\n          biggestLoss = profitLoss;\r\n        }\r\n      }\r\n    });\r\n\r\n    const averageReturn = (totalReturn / trades.length).toFixed(2);\r\n    const winLossRatio = (winCount / (lossCount || 1)).toFixed(2);\r\n    const profitFactor = (totalProfitLoss / (lossCount || 1)).toFixed(2);\r\n    const averageTradeSize = (totalTradeSize / trades.length).toFixed(2);\r\n    const averageHoldingPeriod = (\r\n      totalHoldingPeriod /\r\n      trades.length /\r\n      (1000 * 60 * 60 * 24)\r\n    ).toFixed(2); // in days\r\n\r\n    return {\r\n      totalProfitLoss,\r\n      winLossRatio,\r\n      averageReturn,\r\n      biggestWin,\r\n      biggestLoss,\r\n      averageTradeSize,\r\n      averageHoldingPeriod,\r\n      numberOfTrades: trades.length,\r\n      profitFactor,\r\n    };\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading trade metrics...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error fetching trade metrics: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"detailss\">\r\n      <div className=\"header\">Summary</div>\r\n      <div className=\"metrics\">\r\n        <div className=\"metric\">\r\n          <span>Total Profit/Loss:</span>\r\n          <span>{tradeMetrics.totalProfitLoss}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Win/Loss Ratio:</span>\r\n          <span>{tradeMetrics.winLossRatio}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Average Return:</span>\r\n          <span>{tradeMetrics.averageReturn}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Biggest Win:</span>\r\n          <span>{tradeMetrics.biggestWin}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Biggest Loss:</span>\r\n          <span>{tradeMetrics.biggestLoss}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Average Trade Size:</span>\r\n          <span>{tradeMetrics.averageTradeSize}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Average Holding Period (Days):</span>\r\n          <span>{tradeMetrics.averageHoldingPeriod}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Number of Trades:</span>\r\n          <span>{tradeMetrics.numberOfTrades}</span>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <span>Profit Factor:</span>\r\n          <span>{tradeMetrics.profitFactor}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}