{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\Bars.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst Bars = () => {\n  var _dailyPNLData$;\n  const [dailyPNLData, setDailyPNLData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [view, setView] = useState(\"daily\");\n  const [hoveredData, setHoveredData] = useState(null);\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        setDailyPNLData(data);\n      } catch (error) {\n        setError(\"No Daily PNL data\");\n        console.error(\"No Daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, error);\n  if (!dailyPNLData) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, \"No PNL data available\");\n  const formatMonthYear = dateStr => {\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\n    const dateParts = dateStr.split(\"-\");\n    const month = dateParts[1];\n    const year = dateParts[0];\n    return `${month}/${year}`;\n  };\n  const calculateBars = () => {\n    let balances = [];\n    let labels = [];\n    if (view === \"daily\") {\n      const currentWeek = getCurrentWeek(dailyPNLData);\n      balances = currentWeek.map(day => parseFloat(day.balance || 0));\n      labels = currentWeek.map(day => day.entry_date ? formatDate(day.entry_date) : \"Date\");\n    } else if (view === \"weekly\") {\n      const currentMonth = getCurrentMonth(dailyPNLData);\n      currentMonth.forEach(week => {\n        var _week$, _week;\n        const weekSum = week.reduce((sum, day) => sum + parseFloat(day.balance || 0), 0);\n        balances.push(weekSum);\n        labels.push(((_week$ = week[0]) === null || _week$ === void 0 ? void 0 : _week$.entry_date) && ((_week = week[week.length - 1]) === null || _week === void 0 ? void 0 : _week.entry_date) ? `${formatDate(week[0].entry_date)} - ${formatDate(week[week.length - 1].entry_date)}` : \"Week\");\n      });\n    } else if (view === \"monthly\") {\n      const months = getMonthsData(dailyPNLData);\n      months.forEach(month => {\n        var _month$;\n        const monthSum = month.reduce((sum, day) => sum + parseFloat(day.balance || 0), 0);\n        balances.push(monthSum);\n        labels.push(((_month$ = month[0]) === null || _month$ === void 0 ? void 0 : _month$.entry_date) ? formatMonthYear(month[0].entry_date) : \"Month\");\n      });\n    }\n    return {\n      balances,\n      labels\n    };\n  };\n  const getCurrentWeek = data => {\n    const weekData = [];\n    const today = new Date();\n    const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay() - 1));\n    const endOfWeek = new Date(today.setDate(today.getDate() + 6));\n    data.forEach(entry => {\n      const entryDate = new Date(entry.entry_date);\n      if (entryDate >= startOfWeek && entryDate <= endOfWeek) {\n        weekData.push(entry);\n      }\n    });\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n    console.log(\"Filtered Week Data:\", weekData);\n    return weekData;\n  };\n  const getCurrentMonth = data => {\n    const weeks = [];\n    let week = [];\n    const today = new Date();\n    const month = today.getMonth() + 1;\n    data.forEach((entry, index) => {\n      const entryDate = new Date(entry.entry_date);\n      if (entryDate.getMonth() + 1 === month) {\n        week.push(entry);\n        if ((index + 1) % 5 === 0) {\n          week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n          weeks.push(week);\n          week = [];\n        }\n      }\n    });\n    if (week.length) {\n      week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n      weeks.push(week);\n    }\n    return weeks;\n  };\n  const getMonthsData = data => {\n    const months = Array.from({\n      length: 12\n    }, () => []);\n    data.forEach(entry => {\n      const entryDate = new Date(entry.entry_date);\n      months[entryDate.getMonth()].push(entry);\n    });\n    return months.filter(month => month.length > 0);\n  };\n  const {\n    balances,\n    labels\n  } = calculateBars();\n  const maxBalance = Math.max(...balances);\n  const threshold = maxBalance * 5;\n  const headerDate = ((_dailyPNLData$ = dailyPNLData[0]) === null || _dailyPNLData$ === void 0 ? void 0 : _dailyPNLData$.entry_date) ? view === \"daily\" ? new Date(dailyPNLData[0].entry_date + \"T00:00:00\").toLocaleDateString() : view === \"weekly\" ? formatMonthYear(dailyPNLData[0].entry_date) : dailyPNLData[0].entry_date.split(\"-\")[0] : \"Date\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-bars-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"daily\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"daily\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"1D\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"weekly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"weekly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"1M\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"monthly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"monthly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"1Y\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, headerDate)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bars-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, balances.map((balance, index) => {\n    const percentage = Math.abs(balance) / threshold * 65;\n    const isPositive = balance >= 0;\n    const [hoveredData, setHoveredData] = useState(null);\n\n    // Add this snippet just above the return statement\n    {\n      hoveredData && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tooltip\",\n        style: {\n          top: hoveredData.top,\n          left: hoveredData.left\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, formatCash(hoveredData.balance)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, hoveredData.date));\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"bar-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bar-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, labels[index]), /*#__PURE__*/React.createElement(\"div\", {\n      className: `bar ${isPositive ? \"positive\" : \"negative\"}`,\n      style: {\n        width: `${percentage}%`\n      },\n      onMouseEnter: () => setHoveredData({\n        balance,\n        date: labels[index]\n      }),\n      onMouseLeave: () => setHoveredData(null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\nexport default Bars;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","formatCash","formatDate","Bars","_dailyPNLData$","dailyPNLData","setDailyPNLData","loading","setLoading","error","setError","view","setView","hoveredData","setHoveredData","fetchDailyPNLData","data","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formatMonthYear","dateStr","includes","dateParts","split","month","year","calculateBars","balances","labels","currentWeek","getCurrentWeek","map","day","parseFloat","balance","entry_date","currentMonth","getCurrentMonth","forEach","week","_week$","_week","weekSum","reduce","sum","push","length","months","getMonthsData","_month$","monthSum","weekData","today","Date","startOfWeek","setDate","getDate","getDay","endOfWeek","entry","entryDate","sort","a","b","log","weeks","getMonth","index","Array","from","filter","maxBalance","Math","max","threshold","headerDate","toLocaleDateString","className","onClick","percentage","abs","isPositive","style","top","left","date","key","width","onMouseEnter","onMouseLeave"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/Bars.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst Bars = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [view, setView] = useState(\"daily\");\r\n  const [hoveredData, setHoveredData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n      } catch (error) {\r\n        setError(\"No Daily PNL data\");\r\n        console.error(\"No Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n  if (!dailyPNLData) return <p>No PNL data available</p>;\r\n\r\n  const formatMonthYear = (dateStr) => {\r\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\r\n    const dateParts = dateStr.split(\"-\");\r\n    const month = dateParts[1];\r\n    const year = dateParts[0];\r\n    return `${month}/${year}`;\r\n  };\r\n\r\n  const calculateBars = () => {\r\n    let balances = [];\r\n    let labels = [];\r\n\r\n    if (view === \"daily\") {\r\n      const currentWeek = getCurrentWeek(dailyPNLData);\r\n      balances = currentWeek.map((day) => parseFloat(day.balance || 0));\r\n      labels = currentWeek.map((day) =>\r\n        day.entry_date ? formatDate(day.entry_date) : \"Date\"\r\n      );\r\n    } else if (view === \"weekly\") {\r\n      const currentMonth = getCurrentMonth(dailyPNLData);\r\n      currentMonth.forEach((week) => {\r\n        const weekSum = week.reduce(\r\n          (sum, day) => sum + parseFloat(day.balance || 0),\r\n          0\r\n        );\r\n        balances.push(weekSum);\r\n        labels.push(\r\n          week[0]?.entry_date && week[week.length - 1]?.entry_date\r\n            ? `${formatDate(week[0].entry_date)} - ${formatDate(\r\n                week[week.length - 1].entry_date\r\n              )}`\r\n            : \"Week\"\r\n        );\r\n      });\r\n    } else if (view === \"monthly\") {\r\n      const months = getMonthsData(dailyPNLData);\r\n      months.forEach((month) => {\r\n        const monthSum = month.reduce(\r\n          (sum, day) => sum + parseFloat(day.balance || 0),\r\n          0\r\n        );\r\n        balances.push(monthSum);\r\n        labels.push(\r\n          month[0]?.entry_date ? formatMonthYear(month[0].entry_date) : \"Month\"\r\n        );\r\n      });\r\n    }\r\n\r\n    return { balances, labels };\r\n  };\r\n\r\n  const getCurrentWeek = (data) => {\r\n    const weekData = [];\r\n    const today = new Date();\r\n    const startOfWeek = new Date(\r\n      today.setDate(today.getDate() - today.getDay() - 1)\r\n    );\r\n    const endOfWeek = new Date(today.setDate(today.getDate() + 6));\r\n\r\n    data.forEach((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      if (entryDate >= startOfWeek && entryDate <= endOfWeek) {\r\n        weekData.push(entry);\r\n      }\r\n    });\r\n\r\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n    console.log(\"Filtered Week Data:\", weekData);\r\n\r\n    return weekData;\r\n  };\r\n\r\n  const getCurrentMonth = (data) => {\r\n    const weeks = [];\r\n    let week = [];\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n\r\n    data.forEach((entry, index) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      if (entryDate.getMonth() + 1 === month) {\r\n        week.push(entry);\r\n        if ((index + 1) % 5 === 0) {\r\n          week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n          weeks.push(week);\r\n          week = [];\r\n        }\r\n      }\r\n    });\r\n\r\n    if (week.length) {\r\n      week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n      weeks.push(week);\r\n    }\r\n\r\n    return weeks;\r\n  };\r\n\r\n  const getMonthsData = (data) => {\r\n    const months = Array.from({ length: 12 }, () => []);\r\n    data.forEach((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      months[entryDate.getMonth()].push(entry);\r\n    });\r\n    return months.filter((month) => month.length > 0);\r\n  };\r\n\r\n  const { balances, labels } = calculateBars();\r\n  const maxBalance = Math.max(...balances);\r\n  const threshold = maxBalance * 5;\r\n\r\n  const headerDate = dailyPNLData[0]?.entry_date\r\n    ? view === \"daily\"\r\n      ? new Date(dailyPNLData[0].entry_date + \"T00:00:00\").toLocaleDateString()\r\n      : view === \"weekly\"\r\n      ? formatMonthYear(dailyPNLData[0].entry_date)\r\n      : dailyPNLData[0].entry_date.split(\"-\")[0]\r\n    : \"Date\";\r\n\r\n  return (\r\n    <div className=\"main-bars-container\">\r\n      <div className=\"header-card\">\r\n        <div className=\"tab-container\">\r\n          <button\r\n            className={`tab-button ${view === \"daily\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"daily\")}\r\n          >\r\n            1D\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"weekly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"weekly\")}\r\n          >\r\n            1M\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"monthly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"monthly\")}\r\n          >\r\n            1Y\r\n          </button>\r\n        </div>\r\n        <div className=\"header-date\">{headerDate}</div>\r\n      </div>\r\n\r\n      <hr />\r\n      <div className=\"bars-container\">\r\n        {balances.map((balance, index) => {\r\n          const percentage = (Math.abs(balance) / threshold) * 65;\r\n          const isPositive = balance >= 0;\r\n          const [hoveredData, setHoveredData] = useState(null);\r\n\r\n          // Add this snippet just above the return statement\r\n          {\r\n            hoveredData && (\r\n              <div\r\n                className=\"tooltip\"\r\n                style={{ top: hoveredData.top, left: hoveredData.left }}\r\n              >\r\n                <p>{formatCash(hoveredData.balance)}</p>\r\n                <p>{hoveredData.date}</p>\r\n              </div>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <div key={index} className=\"bar-wrapper\">\r\n              <span className=\"bar-label\">{labels[index]}</span>\r\n              <div\r\n                className={`bar ${isPositive ? \"positive\" : \"negative\"}`}\r\n                style={{\r\n                  width: `${percentage}%`,\r\n                }}\r\n                onMouseEnter={() =>\r\n                  setHoveredData({ balance, date: labels[index] })\r\n                }\r\n                onMouseLeave={() => setHoveredData(null)}\r\n              ></div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}