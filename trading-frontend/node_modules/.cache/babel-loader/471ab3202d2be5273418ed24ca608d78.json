{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Account.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/account.css\";\nconst Account = () => {\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [periodPL, setPeriodPL] = useState(0);\n  const [timePeriod, setTimePeriod] = useState(\"1D\");\n  const handleTimePeriodChange = event => {\n    setTimePeriod(event.target.value);\n  };\n  useEffect(() => {\n    const fetchAccountData = async () => {\n      try {\n        // Fetch account balance\n        const response = await fetch(\"/cash/\");\n        const data = await response.json();\n        setAccountBalance(data.cash_entries[0].cash);\n\n        // Fetch period profit/loss\n        const periodResponse = await fetch(\"/trades/\");\n        const periodData = await periodResponse.json();\n        const filteredTrades = periodData.trades.filter(trade => isWithinTimePeriod(new Date(trade.close_date), timePeriod, new Date()));\n        const totalProfitLoss = filteredTrades.reduce((total, trade) => total + calculateProfit(trade), 0);\n        setPeriodPL(totalProfitLoss);\n      } catch (error) {\n        console.error(\"Error fetching account data:\", error);\n      }\n    };\n    fetchAccountData();\n  }, [timePeriod]);\n  const calculateProfit = trade => {\n    const entryPrice = parseFloat(trade.entry_price);\n    const exitPrice = parseFloat(trade.exit_price);\n    const contracts = trade.contracts;\n    if (!isNaN(exitPrice)) {\n      return (exitPrice - entryPrice) * contracts * 100;\n    }\n    return 0;\n  };\n  const isWithinTimePeriod = (tradeCloseDate, period, today) => {\n    const periodStartDate = new Date();\n    switch (period) {\n      case \"1D\":\n        periodStartDate.setDate(today.getDate() - 1);\n        break;\n      case \"1W\":\n        periodStartDate.setDate(today.getDate() - 7);\n        break;\n      case \"1M\":\n        periodStartDate.setMonth(today.getMonth() - 1);\n        break;\n      case \"3M\":\n        periodStartDate.setMonth(today.getMonth() - 3);\n        break;\n      case \"YTD\":\n        periodStartDate.setFullYear(today.getFullYear(), 0, 1);\n        break;\n      case \"1Y\":\n        periodStartDate.setFullYear(today.getFullYear() - 1);\n        break;\n      case \"Max\":\n        return true;\n      // All trades are considered within Max period\n      default:\n        break;\n    }\n    return period === \"Max\" || tradeCloseDate >= periodStartDate;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"account-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"$ \", accountBalance.toFixed(2))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"modern-select\",\n    value: timePeriod,\n    onChange: handleTimePeriodChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"1D\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1W\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"1W\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1M\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"1M\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3M\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"3M\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"YTD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"YTD\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1Y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"1Y\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Max\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Max\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"$ \", periodPL.toFixed(2))));\n};\nexport default Account;","map":{"version":3,"names":["React","useState","useEffect","Account","accountBalance","setAccountBalance","periodPL","setPeriodPL","timePeriod","setTimePeriod","handleTimePeriodChange","event","target","value","fetchAccountData","response","fetch","data","json","cash_entries","cash","periodResponse","periodData","filteredTrades","trades","filter","trade","isWithinTimePeriod","Date","close_date","totalProfitLoss","reduce","total","calculateProfit","error","console","entryPrice","parseFloat","entry_price","exitPrice","exit_price","contracts","isNaN","tradeCloseDate","period","today","periodStartDate","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onChange"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Account.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/account.css\";\r\n\r\nconst Account = () => {\r\n  const [accountBalance, setAccountBalance] = useState(0);\r\n  const [periodPL, setPeriodPL] = useState(0);\r\n  const [timePeriod, setTimePeriod] = useState(\"1D\");\r\n\r\n  const handleTimePeriodChange = (event) => {\r\n    setTimePeriod(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAccountData = async () => {\r\n      try {\r\n        // Fetch account balance\r\n        const response = await fetch(\"/cash/\");\r\n        const data = await response.json();\r\n        setAccountBalance(data.cash_entries[0].cash);\r\n\r\n        // Fetch period profit/loss\r\n        const periodResponse = await fetch(\"/trades/\");\r\n        const periodData = await periodResponse.json();\r\n        const filteredTrades = periodData.trades.filter((trade) =>\r\n          isWithinTimePeriod(new Date(trade.close_date), timePeriod, new Date())\r\n        );\r\n        const totalProfitLoss = filteredTrades.reduce(\r\n          (total, trade) => total + calculateProfit(trade),\r\n          0\r\n        );\r\n        setPeriodPL(totalProfitLoss);\r\n      } catch (error) {\r\n        console.error(\"Error fetching account data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAccountData();\r\n  }, [timePeriod]);\r\n\r\n  const calculateProfit = (trade) => {\r\n    const entryPrice = parseFloat(trade.entry_price);\r\n    const exitPrice = parseFloat(trade.exit_price);\r\n    const contracts = trade.contracts;\r\n    if (!isNaN(exitPrice)) {\r\n      return (exitPrice - entryPrice) * contracts * 100;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const isWithinTimePeriod = (tradeCloseDate, period, today) => {\r\n    const periodStartDate = new Date();\r\n\r\n    switch (period) {\r\n      case \"1D\":\r\n        periodStartDate.setDate(today.getDate() - 1);\r\n        break;\r\n      case \"1W\":\r\n        periodStartDate.setDate(today.getDate() - 7);\r\n        break;\r\n      case \"1M\":\r\n        periodStartDate.setMonth(today.getMonth() - 1);\r\n        break;\r\n      case \"3M\":\r\n        periodStartDate.setMonth(today.getMonth() - 3);\r\n        break;\r\n      case \"YTD\":\r\n        periodStartDate.setFullYear(today.getFullYear(), 0, 1);\r\n        break;\r\n      case \"1Y\":\r\n        periodStartDate.setFullYear(today.getFullYear() - 1);\r\n        break;\r\n      case \"Max\":\r\n        return true; // All trades are considered within Max period\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return period === \"Max\" || tradeCloseDate >= periodStartDate;\r\n  };\r\n\r\n  return (\r\n    <div className=\"account-container\">\r\n      <div className=\"header-card\">\r\n        <p className=\"cash\">$ {accountBalance.toFixed(2)}</p>\r\n      </div>\r\n      <br />\r\n      <div className=\"header-card\">\r\n        <select\r\n          className=\"modern-select\"\r\n          value={timePeriod}\r\n          onChange={handleTimePeriodChange}\r\n        >\r\n          <option value=\"1D\">1D</option>\r\n          <option value=\"1W\">1W</option>\r\n          <option value=\"1M\">1M</option>\r\n          <option value=\"3M\">3M</option>\r\n          <option value=\"YTD\">YTD</option>\r\n          <option value=\"1Y\">1Y</option>\r\n          <option value=\"Max\">Max</option>\r\n        </select>\r\n        <p className=\"cash\">$ {periodPL.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}