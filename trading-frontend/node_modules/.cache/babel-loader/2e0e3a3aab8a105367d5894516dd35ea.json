{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\Calender.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nconst Calender = () => {\n  const [dailyPNLData, setDailyPNLData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [modalDetails, setModalDetails] = useState(null);\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        setDailyPNLData(data);\n        console.log(data);\n      } catch (error) {\n        setError(\"Error fetching Daily PNL data\");\n        console.error(\"Error fetching Daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view === \"month\") {\n      const pnlEntry = dailyPNLData.find(pnl => {\n        const entryDate = new Date(pnl.entry_date + \"T00:00:00Z\");\n        console.log(entryDate);\n        return date.getFullYear() === entryDate.getFullYear() && date.getMonth() === entryDate.getMonth() && date.getDate() === entryDate.getDate();\n      });\n      return pnlEntry ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pnl-tile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"$\", pnlEntry.balance), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, pnlEntry.roi, \"%\")) : null;\n    }\n  };\n  const handleTileClick = date => {\n    const pnlEntry = dailyPNLData.find(pnl => {\n      const entryDate = new Date(pnl.entry_date + \"T00:00:00Z\");\n      return date.getFullYear() === entryDate.getFullYear() && date.getMonth() === entryDate.getMonth() && date.getDate() === entryDate.getDate();\n    });\n    if (pnlEntry) {\n      setModalDetails({\n        date: date.toDateString(),\n        ...pnlEntry\n      });\n    }\n  };\n  const handleCloseModal = () => {\n    setModalDetails(null);\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    onChange: setSelectedDate,\n    value: selectedDate,\n    tileContent: tileContent,\n    onClickDay: handleTileClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), modalDetails && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"PNL Details for \", modalDetails.date), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Balance:\"), \" $\", modalDetails.balance), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"RoI:\"), \" \", modalDetails.roi, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Close Cash:\"), \" $\", modalDetails.close_cash), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Open Cash:\"), \" $\", modalDetails.open_cash)))), dailyPNLData.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, \"No P/L\"));\n};\nexport default Calender;","map":{"version":3,"names":["React","useState","useEffect","Calendar","fetchDailyPnls","Calender","dailyPNLData","setDailyPNLData","loading","setLoading","error","setError","selectedDate","setSelectedDate","Date","modalDetails","setModalDetails","fetchDailyPNLData","data","console","log","tileContent","date","view","pnlEntry","find","pnl","entryDate","entry_date","getFullYear","getMonth","getDate","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","balance","roi","handleTileClick","toDateString","handleCloseModal","onChange","value","onClickDay","onClick","close_cash","open_cash","length"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/Calender.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\n\r\nconst Calender = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [modalDetails, setModalDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n        console.log(data);\r\n      } catch (error) {\r\n        setError(\"Error fetching Daily PNL data\");\r\n        console.error(\"Error fetching Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === \"month\") {\r\n      const pnlEntry = dailyPNLData.find((pnl) => {\r\n        const entryDate = new Date(pnl.entry_date + \"T00:00:00Z\");\r\n        console.log(entryDate);\r\n        return (\r\n          date.getFullYear() === entryDate.getFullYear() &&\r\n          date.getMonth() === entryDate.getMonth() &&\r\n          date.getDate() === entryDate.getDate()\r\n        );\r\n      });\r\n\r\n      return pnlEntry ? (\r\n        <div className=\"pnl-tile\">\r\n          <div>${pnlEntry.balance}</div>\r\n          <div>{pnlEntry.roi}%</div>\r\n        </div>\r\n      ) : null;\r\n    }\r\n  };\r\n\r\n  const handleTileClick = (date) => {\r\n    const pnlEntry = dailyPNLData.find((pnl) => {\r\n      const entryDate = new Date(pnl.entry_date + \"T00:00:00Z\");\r\n      return (\r\n        date.getFullYear() === entryDate.getFullYear() &&\r\n        date.getMonth() === entryDate.getMonth() &&\r\n        date.getDate() === entryDate.getDate()\r\n      );\r\n    });\r\n    if (pnlEntry) {\r\n      setModalDetails({\r\n        date: date.toDateString(),\r\n        ...pnlEntry,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalDetails(null);\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <Calendar\r\n        onChange={setSelectedDate}\r\n        value={selectedDate}\r\n        tileContent={tileContent}\r\n        onClickDay={handleTileClick}\r\n      />\r\n      {modalDetails && (\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h2>PNL Details for {modalDetails.date}</h2>\r\n              <button className=\"close-button\" onClick={handleCloseModal}>\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>\r\n                <strong>Balance:</strong> ${modalDetails.balance}\r\n              </p>\r\n              <p>\r\n                <strong>RoI:</strong> {modalDetails.roi}%\r\n              </p>\r\n              <p>\r\n                <strong>Close Cash:</strong> ${modalDetails.close_cash}\r\n              </p>\r\n              <p>\r\n                <strong>Open Cash:</strong> ${modalDetails.open_cash}\r\n              </p>\r\n              {/* Add more details if necessary */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {dailyPNLData.length === 0 && <p>No P/L</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}