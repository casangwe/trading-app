{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\Bars.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { BarChart, Bar, XAxis, Tooltip, ResponsiveContainer, YAxis } from \"recharts\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst Bars = () => {\n  const [dailyPNLData, setDailyPNLData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [view, setView] = useState(\"daily\");\n  const [isInView, setIsInView] = useState(false); // Animation control state\n  const chartRef = useRef(null); // Reference for the chart container\n\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        setDailyPNLData(data);\n        console.log(\"daily pnl: \", data);\n      } catch (error) {\n        setError(\"No Daily PNL data\");\n        console.error(\"No Daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, error);\n  if (!dailyPNLData) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \"No PNL data available\");\n  const formatMonthYear = dateStr => {\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\n    const dateParts = dateStr.split(\"-\");\n    const month = dateParts[1];\n    const year = dateParts[0];\n    return `${month}/${year}`;\n  };\n  const getCurrentWeek = data => {\n    const today = new Date();\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(today.getDate() - today.getDay());\n    startOfWeek.setHours(0, 0, 0, 0);\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(startOfWeek.getDate() + 6);\n    endOfWeek.setHours(23, 59, 59, 999);\n    const weekData = data.filter(entry => {\n      const entryDate = new Date(entry.entry_date);\n      return entryDate >= startOfWeek && entryDate <= endOfWeek;\n    });\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n    return weekData;\n  };\n  const getCurrentMonth = data => {\n    const weeks = [];\n    let week = [];\n    const today = new Date();\n    const currentMonth = today.getMonth();\n    data.forEach((entry, index) => {\n      const entryDate = new Date(entry.entry_date);\n      if (entryDate.getMonth() === currentMonth) {\n        week.push(entry);\n        if ((index + 1) % 5 === 0) {\n          week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n          weeks.push(week);\n          week = [];\n        }\n      }\n    });\n    if (week.length) {\n      week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n      weeks.push(week);\n    }\n    return weeks;\n  };\n  const getMonthsData = data => {\n    const months = Array.from({\n      length: 12\n    }, () => []);\n    data.forEach(entry => {\n      const entryDate = new Date(entry.entry_date);\n      months[entryDate.getMonth()].push(entry);\n    });\n    return months.filter(month => month.length > 0);\n  };\n  const calculateBars = () => {\n    let barsData = [];\n    if (view === \"daily\") {\n      const currentWeek = getCurrentWeek(dailyPNLData);\n      barsData = currentWeek.map(day => ({\n        date: formatDate(day.entry_date),\n        balance: parseFloat(day.balance || 0)\n      }));\n    } else if (view === \"weekly\") {\n      const currentMonth = getCurrentMonth(dailyPNLData);\n      barsData = currentMonth.map(week => {\n        const weekBalance = week.reduce((sum, day) => sum + parseFloat(day.balance || 0), 0);\n        return {\n          date: `${formatDate(week[0].entry_date)} - ${formatDate(week[week.length - 1].entry_date)}`,\n          balance: weekBalance\n        };\n      });\n    } else if (view === \"monthly\") {\n      const months = getMonthsData(dailyPNLData).sort((a, b) => {\n        const dateA = new Date(a[0].entry_date);\n        const dateB = new Date(b[0].entry_date);\n        return dateA - dateB;\n      });\n      barsData = months.map(month => {\n        const monthBalance = month.reduce((sum, day) => sum + parseFloat(day.balance || 0), 0);\n        return {\n          date: formatMonthYear(month[0].entry_date),\n          balance: monthBalance\n        };\n      }).reverse();\n    }\n    return barsData;\n  };\n  const barsData = calculateBars();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-bars-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"daily\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"daily\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"weekly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"weekly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"M\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"monthly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"monthly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Y\"))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: barsData,\n    layout: \"vertical\",\n    style: {\n      background: \"transparent\"\n    },\n    margin: {\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    type: \"number\",\n    tick: false,\n    axisLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    type: \"category\",\n    dataKey: \"date\",\n    width: 0,\n    tick: false,\n    axisLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    formatter: value => formatCash(value),\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          date,\n          balance\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }\n        }, formatCash(balance)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"invest-date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }\n        }, date));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"balance\",\n    fill: \"#4a90e2\",\n    isAnimationActive: true,\n    radius: [5, 5, 5, 5],\n    barSize: 55,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default Bars;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","BarChart","Bar","XAxis","Tooltip","ResponsiveContainer","YAxis","formatCash","formatDate","Bars","dailyPNLData","setDailyPNLData","loading","setLoading","error","setError","view","setView","isInView","setIsInView","chartRef","useRef","fetchDailyPNLData","data","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formatMonthYear","dateStr","includes","dateParts","split","month","year","getCurrentWeek","today","Date","startOfWeek","setDate","getDate","getDay","setHours","endOfWeek","weekData","filter","entry","entryDate","entry_date","sort","a","b","getCurrentMonth","weeks","week","currentMonth","getMonth","forEach","index","push","length","getMonthsData","months","Array","from","calculateBars","barsData","currentWeek","map","day","date","balance","parseFloat","weekBalance","reduce","sum","dateA","dateB","monthBalance","reverse","className","onClick","width","height","layout","style","background","margin","top","right","left","bottom","type","tick","axisLine","dataKey","cursor","formatter","value","content","payload","fill","isAnimationActive","radius","barSize"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/Bars.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst Bars = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [view, setView] = useState(\"daily\");\r\n  const [isInView, setIsInView] = useState(false); // Animation control state\r\n  const chartRef = useRef(null); // Reference for the chart container\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n        console.log(\"daily pnl: \", data);\r\n      } catch (error) {\r\n        setError(\"No Daily PNL data\");\r\n        console.error(\"No Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n  if (!dailyPNLData) return <p>No PNL data available</p>;\r\n\r\n  const formatMonthYear = (dateStr) => {\r\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\r\n    const dateParts = dateStr.split(\"-\");\r\n    const month = dateParts[1];\r\n    const year = dateParts[0];\r\n    return `${month}/${year}`;\r\n  };\r\n\r\n  const getCurrentWeek = (data) => {\r\n    const today = new Date();\r\n\r\n    const startOfWeek = new Date(today);\r\n    startOfWeek.setDate(today.getDate() - today.getDay());\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    const endOfWeek = new Date(startOfWeek);\r\n    endOfWeek.setDate(startOfWeek.getDate() + 6);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    const weekData = data.filter((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      return entryDate >= startOfWeek && entryDate <= endOfWeek;\r\n    });\r\n\r\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n\r\n    return weekData;\r\n  };\r\n\r\n  const getCurrentMonth = (data) => {\r\n    const weeks = [];\r\n    let week = [];\r\n    const today = new Date();\r\n    const currentMonth = today.getMonth();\r\n\r\n    data.forEach((entry, index) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      if (entryDate.getMonth() === currentMonth) {\r\n        week.push(entry);\r\n        if ((index + 1) % 5 === 0) {\r\n          week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n          weeks.push(week);\r\n          week = [];\r\n        }\r\n      }\r\n    });\r\n\r\n    if (week.length) {\r\n      week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n      weeks.push(week);\r\n    }\r\n\r\n    return weeks;\r\n  };\r\n\r\n  const getMonthsData = (data) => {\r\n    const months = Array.from({ length: 12 }, () => []);\r\n    data.forEach((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      months[entryDate.getMonth()].push(entry);\r\n    });\r\n    return months.filter((month) => month.length > 0);\r\n  };\r\n\r\n  const calculateBars = () => {\r\n    let barsData = [];\r\n\r\n    if (view === \"daily\") {\r\n      const currentWeek = getCurrentWeek(dailyPNLData);\r\n      barsData = currentWeek.map((day) => ({\r\n        date: formatDate(day.entry_date),\r\n        balance: parseFloat(day.balance || 0),\r\n      }));\r\n    } else if (view === \"weekly\") {\r\n      const currentMonth = getCurrentMonth(dailyPNLData);\r\n      barsData = currentMonth.map((week) => {\r\n        const weekBalance = week.reduce(\r\n          (sum, day) => sum + parseFloat(day.balance || 0),\r\n          0\r\n        );\r\n        return {\r\n          date: `${formatDate(week[0].entry_date)} - ${formatDate(\r\n            week[week.length - 1].entry_date\r\n          )}`,\r\n          balance: weekBalance,\r\n        };\r\n      });\r\n    } else if (view === \"monthly\") {\r\n      const months = getMonthsData(dailyPNLData).sort((a, b) => {\r\n        const dateA = new Date(a[0].entry_date);\r\n        const dateB = new Date(b[0].entry_date);\r\n        return dateA - dateB;\r\n      });\r\n\r\n      barsData = months\r\n        .map((month) => {\r\n          const monthBalance = month.reduce(\r\n            (sum, day) => sum + parseFloat(day.balance || 0),\r\n            0\r\n          );\r\n          return {\r\n            date: formatMonthYear(month[0].entry_date),\r\n            balance: monthBalance,\r\n          };\r\n        })\r\n        .reverse();\r\n    }\r\n\r\n    return barsData;\r\n  };\r\n\r\n  const barsData = calculateBars();\r\n\r\n  return (\r\n    <div className=\"main-bars-container\">\r\n      <div className=\"header-card\">\r\n        <div className=\"tab-container\">\r\n          <button\r\n            className={`tab-button ${view === \"daily\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"daily\")}\r\n          >\r\n            D\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"weekly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"weekly\")}\r\n          >\r\n            M\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"monthly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"monthly\")}\r\n          >\r\n            Y\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <BarChart\r\n          data={barsData}\r\n          layout=\"vertical\"\r\n          style={{ background: \"transparent\" }}\r\n          margin={{ top: 0, right: 0, left: 0, bottom: 0 }}\r\n        >\r\n          <XAxis type=\"number\" tick={false} axisLine={false} />\r\n          <YAxis\r\n            type=\"category\"\r\n            dataKey=\"date\"\r\n            width={0}\r\n            tick={false}\r\n            axisLine={false}\r\n          />\r\n          <Tooltip\r\n            cursor={false}\r\n            formatter={(value) => formatCash(value)}\r\n            content={({ payload }) => {\r\n              if (payload && payload.length) {\r\n                const { date, balance } = payload[0].payload;\r\n                return (\r\n                  <div className=\"tooltip-content\">\r\n                    <p>{formatCash(balance)}</p>\r\n                    <p className=\"invest-date\">{date}</p>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            }}\r\n          />\r\n          <Bar\r\n            dataKey=\"balance\"\r\n            fill=\"#4a90e2\"\r\n            isAnimationActive={true}\r\n            radius={[5, 5, 5, 5]}\r\n            barSize={55}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}