{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\Home.js\";\nimport React, { useState, useEffect } from \"react\";\nconst Home = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    trades: recentTrades,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Home;\n\n// // import \"./styles/home.css\";\n// import Account from \"./components/Account\";\n// import NewTrade from \"./components/NewTrade\";\n// import RecentTrades from \"./components/RecentTrades\";\n// import BiggestWinsLosses from \"./components/BiggestWinsLosses\";\n// import {\n//   formatDate,\n//   showSuccessModal,\n//   showUnsuccessModal,\n// } from \"./components/Utility\";\n\n// const Home = () => {\n//   const [recentTrades, setRecentTrades] = useState([]);\n\n//   useEffect(() => {\n//     fetchRecentTrades(); //get trades from backend\n//   }, []);\n\n//   const fetchRecentTrades = () => {\n//     fetch(\"http://localhost:8000/trades/\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setRecentTrades(data); // Update state with fetched data\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching recent trades:\", error);\n//       });\n//   };\n\n//   // submit new trade\n//   const handleNewTradeSubmit = (formData) => {\n//     // POST request to backend to add new trade\n//     fetch(\"http://localhost:8000/trades/\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(formData),\n//     })\n//       .then((response) => {\n//         if (response.ok) {\n//           fetchRecentTrades();\n//           showSuccessModal();\n//         } else {\n//           throw new Error(response.statusText); // Throw an error with the response status text\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(\"Error adding new trade:\", error);\n//         showUnsuccessModal(error.message); // Show the error modal with the error message\n//       });\n//   };\n\n//   // Function to refresh the list of recent trades\n//   const handleRefresh = () => {\n//     fetchRecentTrades();\n//     showSuccessModal();\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"grid\">\n//         <Account trades={recentTrades} />\n//         <NewTrade onTradeSubmit={handleNewTradeSubmit} />\n//         <RecentTrades\n//           recentTrades={recentTrades}\n//           formatDate={formatDate}\n//           onRefresh={handleRefresh}\n//         />\n//         <BiggestWinsLosses recentTrades={recentTrades} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;","map":{"version":3,"names":["React","useState","useEffect","Home","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Account","trades","recentTrades"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Account trades={recentTrades} />\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n\r\n// // import \"./styles/home.css\";\r\n// import Account from \"./components/Account\";\r\n// import NewTrade from \"./components/NewTrade\";\r\n// import RecentTrades from \"./components/RecentTrades\";\r\n// import BiggestWinsLosses from \"./components/BiggestWinsLosses\";\r\n// import {\r\n//   formatDate,\r\n//   showSuccessModal,\r\n//   showUnsuccessModal,\r\n// } from \"./components/Utility\";\r\n\r\n// const Home = () => {\r\n//   const [recentTrades, setRecentTrades] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchRecentTrades(); //get trades from backend\r\n//   }, []);\r\n\r\n//   const fetchRecentTrades = () => {\r\n//     fetch(\"http://localhost:8000/trades/\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setRecentTrades(data); // Update state with fetched data\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error fetching recent trades:\", error);\r\n//       });\r\n//   };\r\n\r\n//   // submit new trade\r\n//   const handleNewTradeSubmit = (formData) => {\r\n//     // POST request to backend to add new trade\r\n//     fetch(\"http://localhost:8000/trades/\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(formData),\r\n//     })\r\n//       .then((response) => {\r\n//         if (response.ok) {\r\n//           fetchRecentTrades();\r\n//           showSuccessModal();\r\n//         } else {\r\n//           throw new Error(response.statusText); // Throw an error with the response status text\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error adding new trade:\", error);\r\n//         showUnsuccessModal(error.message); // Show the error modal with the error message\r\n//       });\r\n//   };\r\n\r\n//   // Function to refresh the list of recent trades\r\n//   const handleRefresh = () => {\r\n//     fetchRecentTrades();\r\n//     showSuccessModal();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"grid\">\r\n//         <Account trades={recentTrades} />\r\n//         <NewTrade onTradeSubmit={handleNewTradeSubmit} />\r\n//         <RecentTrades\r\n//           recentTrades={recentTrades}\r\n//           formatDate={formatDate}\r\n//           onRefresh={handleRefresh}\r\n//         />\r\n//         <BiggestWinsLosses recentTrades={recentTrades} />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,oBACEH,KAAA,CAAAI,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEV,KAAA,CAAAI,aAAA,CAACO,OAAO;IAACC,MAAM,EAAEC,YAAa;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC7B,CAAC;AAEV,CAAC;AACD,eAAeP,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}