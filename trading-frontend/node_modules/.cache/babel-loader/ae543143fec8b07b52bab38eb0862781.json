{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\TradeSum.js\";\n// TradeSum.js\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTrades } from \"./ApiCalls\";\nconst TradeSum = () => {\n  const [dailyTrades, setDailyTrades] = useState([]);\n  const [weeklyTrades, setWeeklyTrades] = useState([]);\n  const [monthlyTrades, setMonthlyTrades] = useState([]);\n  useEffect(() => {\n    const fetchAndCategorizeTrades = async () => {\n      try {\n        const trades = await fetchTrades();\n        const today = new Date();\n        const startOfWeek = new Date(today);\n        startOfWeek.setDate(today.getDate() - today.getDay() + 1); // Monday\n\n        const daily = [];\n        const weekly = [];\n        const monthly = [];\n        trades.forEach(trade => {\n          const tradeDate = new Date(trade.entryDate);\n          if (tradeDate.toDateString() === today.toDateString()) {\n            daily.push(trade);\n          }\n          if (tradeDate >= startOfWeek && tradeDate <= today) {\n            weekly.push(trade);\n          }\n          if (tradeDate.getMonth() === today.getMonth() && tradeDate.getFullYear() === today.getFullYear()) {\n            monthly.push(trade);\n          }\n        });\n        setDailyTrades(daily);\n        setWeeklyTrades(weekly);\n        setMonthlyTrades(monthly);\n      } catch (error) {\n        console.error(\"Error fetching trades:\", error);\n      }\n    };\n    fetchAndCategorizeTrades();\n  }, []);\n  const renderTrades = trades => {\n    return trades.map(trade => /*#__PURE__*/React.createElement(\"div\", {\n      key: trade.id,\n      className: \"trade-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, trade.symbol, \" \", trade.optionType, \" $\", trade.strikePrice, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"$\", trade.entryPrice, \" - $\", trade.exitPrice), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, ((trade.exitPrice - trade.entryPrice) / trade.entryPrice * 100).toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"totals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Rate: \")));\n  };\n\n  // const renderTrades = (trades) => {\n  //   return trades.map((trade) => (\n  //     <div key={trade.id} className=\"trade-item\">\n  //       {trade.symbol} {trade.optionType} ${trade.strikePrice}{\" \"}\n  //       {trade.expDate.split(\"-\").slice(1).join(\"/\")} <br></br>$\n  //       {trade.entryPrice} - {trade.exitPrice}\n  //       {(\n  //         ((trade.exitPrice - trade.entryPrice) / trade.entryPrice) *\n  //         100\n  //       ).toFixed(2)}\n  //       %\n  //     </div>\n  //   ));\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Day\")), renderTrades(dailyTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Week\")), \" \", renderTrades(weeklyTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Month\")), \" \", renderTrades(monthlyTrades)));\n};\nexport default TradeSum;","map":{"version":3,"names":["React","useState","useEffect","fetchTrades","TradeSum","dailyTrades","setDailyTrades","weeklyTrades","setWeeklyTrades","monthlyTrades","setMonthlyTrades","fetchAndCategorizeTrades","trades","today","Date","startOfWeek","setDate","getDate","getDay","daily","weekly","monthly","forEach","trade","tradeDate","entryDate","toDateString","push","getMonth","getFullYear","error","console","renderTrades","map","createElement","key","id","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","symbol","optionType","strikePrice","entryPrice","exitPrice","toFixed"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/TradeSum.js"],"sourcesContent":["// TradeSum.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { fetchTrades } from \"./ApiCalls\";\r\n\r\nconst TradeSum = () => {\r\n  const [dailyTrades, setDailyTrades] = useState([]);\r\n  const [weeklyTrades, setWeeklyTrades] = useState([]);\r\n  const [monthlyTrades, setMonthlyTrades] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAndCategorizeTrades = async () => {\r\n      try {\r\n        const trades = await fetchTrades();\r\n        const today = new Date();\r\n        const startOfWeek = new Date(today);\r\n        startOfWeek.setDate(today.getDate() - today.getDay() + 1); // Monday\r\n\r\n        const daily = [];\r\n        const weekly = [];\r\n        const monthly = [];\r\n\r\n        trades.forEach((trade) => {\r\n          const tradeDate = new Date(trade.entryDate);\r\n          if (tradeDate.toDateString() === today.toDateString()) {\r\n            daily.push(trade);\r\n          }\r\n          if (tradeDate >= startOfWeek && tradeDate <= today) {\r\n            weekly.push(trade);\r\n          }\r\n          if (\r\n            tradeDate.getMonth() === today.getMonth() &&\r\n            tradeDate.getFullYear() === today.getFullYear()\r\n          ) {\r\n            monthly.push(trade);\r\n          }\r\n        });\r\n\r\n        setDailyTrades(daily);\r\n        setWeeklyTrades(weekly);\r\n        setMonthlyTrades(monthly);\r\n      } catch (error) {\r\n        console.error(\"Error fetching trades:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAndCategorizeTrades();\r\n  }, []);\r\n\r\n  const renderTrades = (trades) => {\r\n    return trades.map((trade) => (\r\n      <div key={trade.id} className=\"trade-item\">\r\n        <div className=\"left-column\">\r\n          {trade.symbol} {trade.optionType} ${trade.strikePrice}{\" \"}\r\n          {/* {trade.expDate.split(\"-\").slice(1).join(\"/\")} */}\r\n        </div>\r\n        <div className=\"middle-column\">\r\n          ${trade.entryPrice} - ${trade.exitPrice}\r\n        </div>\r\n        <div className=\"right-column\">\r\n          {(\r\n            ((trade.exitPrice - trade.entryPrice) / trade.entryPrice) *\r\n            100\r\n          ).toFixed(2)}\r\n          %\r\n        </div>\r\n        <div className=\"totals\">Rate: </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  // const renderTrades = (trades) => {\r\n  //   return trades.map((trade) => (\r\n  //     <div key={trade.id} className=\"trade-item\">\r\n  //       {trade.symbol} {trade.optionType} ${trade.strikePrice}{\" \"}\r\n  //       {trade.expDate.split(\"-\").slice(1).join(\"/\")} <br></br>$\r\n  //       {trade.entryPrice} - {trade.exitPrice}\r\n  //       {(\r\n  //         ((trade.exitPrice - trade.entryPrice) / trade.entryPrice) *\r\n  //         100\r\n  //       ).toFixed(2)}\r\n  //       %\r\n  //     </div>\r\n  //   ));\r\n  // };\r\n\r\n  return (\r\n    <div className=\"trade-summary\">\r\n      <div className=\"trade-category\">\r\n        <div className=\"header\">\r\n          <p>Day</p>\r\n        </div>\r\n        {renderTrades(dailyTrades)}\r\n      </div>\r\n      <div className=\"trade-category\">\r\n        <div className=\"header\">\r\n          <p>Week</p>\r\n        </div>{\" \"}\r\n        {renderTrades(weeklyTrades)}\r\n      </div>\r\n      <div className=\"trade-category\">\r\n        <div className=\"header\">\r\n          <p>Month</p>\r\n        </div>{\" \"}\r\n        {renderTrades(monthlyTrades)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradeSum;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}