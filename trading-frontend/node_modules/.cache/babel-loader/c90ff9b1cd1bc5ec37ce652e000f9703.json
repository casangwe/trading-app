{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\financial\\\\NetWorthChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchFinancials } from \"../api/FinancialAPI\";\nimport { LineChart, Line, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst NetWorthChart = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState([]);\n  const [summary, setSummary] = useState({\n    networth: null,\n    previousNetworth: null,\n    difference: null,\n    date: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const financials = await fetchFinancials();\n        const sortedData = financials.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n\n        // Format the data for the chart\n        const formattedData = sortedData.map(entry => ({\n          date: formatDate(entry.entry_date),\n          networth: parseFloat(entry.networth)\n        }));\n        setChartData(formattedData);\n\n        // Calculate summary based on the most recent and previous entries\n        if (sortedData.length > 1) {\n          const latest = sortedData[sortedData.length - 1];\n          const previous = sortedData[sortedData.length - 2];\n          const networth = parseFloat(latest.networth);\n          const previousNetworth = parseFloat(previous.networth);\n          const difference = networth - previousNetworth;\n          setSummary({\n            networth,\n            previousNetworth,\n            difference,\n            date: formatDate(latest.entry_date)\n          });\n        } else if (sortedData.length === 1) {\n          const latest = sortedData[0];\n          setSummary({\n            networth: parseFloat(latest.networth),\n            previousNetworth: null,\n            difference: null,\n            date: formatDate(latest.entry_date)\n          });\n        }\n      } catch (error) {\n        setError(\"Error fetching financial data\");\n        console.error(\"Error fetching financial data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"networth-chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"networth-cash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, formatCash(summary.networth || 0)), summary.previousNetworth !== null && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"networth-previous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Previous: \", formatCash(summary.previousNetworth)), summary.difference !== null && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"networth-difference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Difference: \", formatCash(summary.difference), \" (\", summary.difference > 0 ? \"Gain\" : \"Loss\", \")\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"networth-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, summary.date)), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: chartData,\n    style: {\n      background: \"transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    tick: false,\n    axisLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          date,\n          networth\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"networth-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }\n        }, formatCash(networth)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"networth-date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }\n        }, date));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"networth\",\n    stroke: \"#4a90e2\",\n    strokeWidth: 2,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default NetWorthChart;","map":{"version":3,"names":["React","useState","useEffect","fetchFinancials","LineChart","Line","XAxis","Tooltip","ResponsiveContainer","formatCash","formatDate","NetWorthChart","loading","setLoading","error","setError","chartData","setChartData","summary","setSummary","networth","previousNetworth","difference","date","fetchData","financials","sortedData","sort","a","b","Date","entry_date","formattedData","map","entry","parseFloat","length","latest","previous","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","style","background","dataKey","tick","axisLine","cursor","content","payload","type","stroke","strokeWidth","dot"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/financial/NetWorthChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchFinancials } from \"../api/FinancialAPI\";\r\nimport { LineChart, Line, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst NetWorthChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [summary, setSummary] = useState({\r\n    networth: null,\r\n    previousNetworth: null,\r\n    difference: null,\r\n    date: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const financials = await fetchFinancials();\r\n        const sortedData = financials.sort(\r\n          (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n        );\r\n\r\n        // Format the data for the chart\r\n        const formattedData = sortedData.map((entry) => ({\r\n          date: formatDate(entry.entry_date),\r\n          networth: parseFloat(entry.networth),\r\n        }));\r\n\r\n        setChartData(formattedData);\r\n\r\n        // Calculate summary based on the most recent and previous entries\r\n        if (sortedData.length > 1) {\r\n          const latest = sortedData[sortedData.length - 1];\r\n          const previous = sortedData[sortedData.length - 2];\r\n          const networth = parseFloat(latest.networth);\r\n          const previousNetworth = parseFloat(previous.networth);\r\n          const difference = networth - previousNetworth;\r\n\r\n          setSummary({\r\n            networth,\r\n            previousNetworth,\r\n            difference,\r\n            date: formatDate(latest.entry_date),\r\n          });\r\n        } else if (sortedData.length === 1) {\r\n          const latest = sortedData[0];\r\n          setSummary({\r\n            networth: parseFloat(latest.networth),\r\n            previousNetworth: null,\r\n            difference: null,\r\n            date: formatDate(latest.entry_date),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching financial data\");\r\n        console.error(\"Error fetching financial data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"networth-chart-container\">\r\n      <div className=\"summary-section\">\r\n        <p className=\"networth-cash\">{formatCash(summary.networth || 0)}</p>\r\n        {summary.previousNetworth !== null && (\r\n          <p className=\"networth-previous\">\r\n            Previous: {formatCash(summary.previousNetworth)}\r\n          </p>\r\n        )}\r\n        {summary.difference !== null && (\r\n          <p className=\"networth-difference\">\r\n            Difference: {formatCash(summary.difference)} (\r\n            {summary.difference > 0 ? \"Gain\" : \"Loss\"})\r\n          </p>\r\n        )}\r\n        <p className=\"networth-date\">{summary.date}</p>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={chartData} style={{ background: \"transparent\" }}>\r\n            <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { date, networth } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p className=\"networth-tooltip\">{formatCash(networth)}</p>\r\n                      <p className=\"networth-date\">{date}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"networth\"\r\n              stroke=\"#4a90e2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NetWorthChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}