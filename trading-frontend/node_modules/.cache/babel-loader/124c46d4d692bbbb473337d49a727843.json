{"ast":null,"code":"// ApiCalls.js\n\nexport const fetchTrades = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8000/trades/\");\n    const data = await response.json();\n    const transformedTrades = data.trades.map(trade => ({\n      id: trade[0],\n      symbol: trade[1],\n      optionType: trade[2],\n      strikePrice: trade[3],\n      expDate: trade[4],\n      entryPrice: trade[5],\n      exitPrice: trade[6],\n      contracts: trade[7],\n      entryDate: trade[8],\n      closeDate: trade[9],\n      profitLoss: trade[10]\n    }));\n    return transformedTrades;\n  } catch (error) {\n    console.error(\"Error fetching trades:\", error);\n    throw error;\n  }\n};\nexport const fetchCash = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8000/cash/\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching cash:\", error);\n    throw error;\n  }\n};\nexport const fetchPlan = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8000/plan/\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching plan:\", error);\n    throw error;\n  }\n};\nexport const fetchWatch = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8000/watchlist/\");\n    const data = await response.json();\n    const transformedWatchlist = data.watchlist_entries.map(entry => ({\n      id: entry[0],\n      date: entry[1],\n      symbol: entry[2],\n      price: entry[3],\n      target_price: entry[4],\n      exp_date: entry[5],\n      plan: entry[6]\n    }));\n    return transformedWatchlist;\n  } catch (error) {\n    console.error(\"Error fetching watchlist:\", error);\n    throw error;\n  }\n};\nexport const fetchSummary = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8000/summary/\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching summary:\", error);\n    throw error;\n  }\n};\nexport const fetchRules = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8000/rules/\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching rules:\", error);\n    throw error;\n  }\n};\nexport const fetchAnalysis = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8000/analysis/\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching analysis:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchTrades","response","fetch","data","json","transformedTrades","trades","map","trade","id","symbol","optionType","strikePrice","expDate","entryPrice","exitPrice","contracts","entryDate","closeDate","profitLoss","error","console","fetchCash","fetchPlan","fetchWatch","transformedWatchlist","watchlist_entries","entry","date","price","target_price","exp_date","plan","fetchSummary","fetchRules","fetchAnalysis"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/ApiCalls.js"],"sourcesContent":["// ApiCalls.js\r\n\r\nexport const fetchTrades = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8000/trades/\");\r\n    const data = await response.json();\r\n    const transformedTrades = data.trades.map((trade) => ({\r\n      id: trade[0],\r\n      symbol: trade[1],\r\n      optionType: trade[2],\r\n      strikePrice: trade[3],\r\n      expDate: trade[4],\r\n      entryPrice: trade[5],\r\n      exitPrice: trade[6],\r\n      contracts: trade[7],\r\n      entryDate: trade[8],\r\n      closeDate: trade[9],\r\n      profitLoss: trade[10],\r\n    }));\r\n    return transformedTrades;\r\n  } catch (error) {\r\n    console.error(\"Error fetching trades:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchCash = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8000/cash/\");\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching cash:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchPlan = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8000/plan/\");\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching plan:\", error);\r\n    throw error;\r\n  }\r\n};\r\nexport const fetchWatch = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8000/watchlist/\");\r\n    const data = await response.json();\r\n    const transformedWatchlist = data.watchlist_entries.map((entry) => ({\r\n      id: entry[0],\r\n      date: entry[1],\r\n      symbol: entry[2],\r\n      price: entry[3],\r\n      target_price: entry[4],\r\n      exp_date: entry[5],\r\n      plan: entry[6],\r\n    }));\r\n    return transformedWatchlist;\r\n  } catch (error) {\r\n    console.error(\"Error fetching watchlist:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSummary = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8000/summary/\");\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching summary:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchRules = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8000/rules/\");\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching rules:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchAnalysis = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8000/analysis/\");\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching analysis:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}