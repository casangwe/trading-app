{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\RecentTrades.js\";\nimport React, { useState } from \"react\";\nimport \"./styles/recentTrades.css\";\nconst RecentTrades = ({\n  recentTrades,\n  formatDate,\n  onRefresh\n}) => {\n  const [selectedTrade, setSelectedTrade] = useState(null);\n  const [editedTrade, setEditedTrade] = useState(null);\n  const handleRefresh = () => {\n    onRefresh();\n  };\n  const roundStrikePrice = strikePrice => {\n    return Math.round(parseFloat(strikePrice) * 10) / 10;\n  };\n  const handleRowClick = trade => {\n    setSelectedTrade(trade);\n    setEditedTrade({\n      ...trade\n    }); // Initialize edited trade with the selected trade\n  };\n  const handleCloseModal = () => {\n    setSelectedTrade(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedTrade(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  // Function to update the trade data\n  const updateTradeData = updatedTrade => {\n    const index = tradeData.findIndex(trade => trade.trade_id === updatedTrade.trade_id);\n    if (index !== -1) {\n      const updatedTradeData = [...tradeData];\n      updatedTradeData[index] = updatedTrade;\n      setTradeData(updatedTradeData);\n    }\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send a request to update the trade data on the backend\n      const response = await fetch(`http://localhost:8000/trades/${editedTrade.trade_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(editedTrade)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update trade data\");\n      }\n      // Parse the response data\n      const updatedTradeData = await response.json();\n      // Update the frontend state with the edited trade data\n      // Assuming you have a function to update the state with the edited trade data\n      updateTradeData(updatedTradeData);\n      // Close the modal after successfully updating the trade\n      handleCloseModal();\n      // Provide feedback to the user\n      alert(\"Trade data updated successfully\");\n    } catch (error) {\n      console.error(\"Error updating trade data:\", error);\n      // Provide feedback to the user\n      alert(\"Failed to update trade data. Please try again later.\");\n    }\n  };\n\n  // const handleFormSubmit = (e) => {\n  //   e.preventDefault();\n  //   // Send a request to update the trade data on the backend\n  //   fetch(`http://localhost:8000/trades/${editedTrade.trade_id}`, {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(editedTrade),\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) {\n  //         throw new Error(\"Failed to update trade data\");\n  //       }\n  //       // Close the modal after successfully updating the trade\n  //       handleCloseModal();\n  //       // Provide feedback to the user\n  //       alert(\"Trade data updated successfully\");\n  //       // Optional: You can update the frontend state with the edited trade data here if needed\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error updating trade data:\", error);\n  //       // Provide feedback to the user\n  //       alert(\"Failed to update trade data. Please try again later.\");\n  //     });\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recent-trades\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"recent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Recent Trades\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa-solid fa-arrows-rotate\",\n    id: \"refresh-btn\",\n    onClick: handleRefresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Stock Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Strike Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Entry Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Exit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Contracts\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Expiration Date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, recentTrades.map(trade => /*#__PURE__*/React.createElement(\"tr\", {\n    key: trade.trade_id,\n    onClick: () => handleRowClick(trade),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, trade.trade_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, formatDate(trade.trade_date)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, trade.option_symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"$\", trade.underlying_stock_price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, trade.option_type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"$\", roundStrikePrice(trade.strike_price)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"$\", trade.entry_price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, trade.exit_price ? `$${trade.exit_price}` : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, trade.contracts), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, formatDate(trade.expiration_date)))))), selectedTrade && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Edit Trade: \", selectedTrade.trade_id), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"option_symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Option Symbol:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"option_symbol\",\n    value: editedTrade.option_symbol,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"option_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, \"Option Type:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"option_type\",\n    value: editedTrade.option_type,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"strike_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \"Strike Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"strike_price\",\n    value: editedTrade.strike_price,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"strike_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"Entry Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"entry_price\",\n    value: editedTrade.entry_price,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exit_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Exit Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"exit_price\",\n    value: editedTrade.exit_price,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"Contracts:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"contracts\",\n    value: editedTrade.contracts,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"underlying_stock_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Stock Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"underlying_stock_price\",\n    value: editedTrade.underlying_stock_price,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"rationale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Rationale:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"rationale\",\n    value: editedTrade.rationale,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \"Feedback:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"feedback\",\n    value: editedTrade.feedback,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"outcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \"Outcome:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"outcome\",\n    value: editedTrade.outcome,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"Save Changes\")))));\n};\nexport default RecentTrades;\n\n// import React from \"react\";\n// import \"./styles/recentTrades.css\";\n\n// const RecentTrades = ({ recentTrades, formatDate }) => {\n//   const roundStrikePrice = (strikePrice) => {\n//     return Math.round(parseFloat(strikePrice) * 10) / 10;\n//   };\n\n//   const handleRowClick = (tradeId) => {\n//     // Programmatically navigate to the edit page\n//     window.location.href = `/edit/${tradeId}`;\n//   };\n\n//   return (\n//     <div className=\"recent-trades\">\n//       <div className=\"card\">\n//         <p className=\"recent\">Recent Trades</p>\n//       </div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Date</th>\n//             <th>Symbol</th>\n//             <th>Stock Price</th>\n//             <th>Type</th>\n//             <th>Strike Price</th>\n//             <th>Entry Price</th>\n//             <th>Exit Price</th>\n//             <th>Contracts</th>\n//             <th>Expiration Date</th>\n//           </tr>\n//         </thead>\n\n//         <tbody>\n//           {recentTrades.map((trade) => (\n//             <tr\n//               key={trade.trade_id}\n//               onClick={() => handleRowClick(trade.trade_id)}\n//             >\n//               <td>{trade.trade_id}</td>\n//               <td>{formatDate(trade.trade_date)}</td>\n//               <td>{trade.option_symbol}</td>\n//               <td>${trade.underlying_stock_price}</td>\n//               <td>{trade.option_type}</td>\n//               <td>${roundStrikePrice(trade.strike_price)}</td>\n//               <td>${trade.entry_price}</td>\n//               <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\n//               <td>{trade.contracts}</td>\n//               <td>{formatDate(trade.expiration_date)}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default RecentTrades;\n\n/*\r\nimport React from \"react\";\r\nimport \"./styles/recentTrades.css\";\r\n\r\nconst RecentTrades = ({ recentTrades, formatDate, onRefresh }) => {\r\n  const handleRefresh = () => {\r\n    onRefresh();\r\n  };\r\n  const roundStrikePrice = (strikePrice) => {\r\n    return Math.round(parseFloat(strikePrice) * 10) / 10;\r\n  };\r\n\r\n  return (\r\n    <div className=\"recent-trades\">\r\n      <div className=\"card\">\r\n        <p className=\"recent\">Recent Trades</p>\r\n        <i\r\n          className=\"fa-solid fa-arrows-rotate\"\r\n          id=\"refresh-btn\"\r\n          onClick={handleRefresh}\r\n        ></i>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Date</th>\r\n            <th>Symbol</th>\r\n            <th>Stock Price</th>\r\n            <th>Type</th>\r\n            <th>Strike Price</th>\r\n            <th>Entry Price</th>\r\n            <th>Exit Price</th>\r\n            <th>Contracts</th>\r\n            <th>Expiration Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {recentTrades.map((trade) => (\r\n            <tr key={trade.trade_id}>\r\n              <td>{trade.trade_id}</td>\r\n              <td>{formatDate(trade.trade_date)}</td>\r\n              <td>{trade.option_symbol}</td>\r\n              <td>${trade.underlying_stock_price}</td>\r\n              <td>{trade.option_type}</td>\r\n              <td>${roundStrikePrice(trade.strike_price)}</td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>{formatDate(trade.expiration_date)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentTrades;\r\n*/\n\n/* \r\nAdditional:\r\n\r\nTotal entry cost ($)\r\nfirst trim (50%)\r\nsecond trim (100%)\r\ntotal profit (%)\r\ntotal profit ($)\r\n*/\n\n/* \r\nstrategy: AGGRESSIVE\r\n\r\nstarting $500.00\r\n\r\ntrim:\r\nfirst trim (50%)\r\nsecond trim (100%)\r\n\r\nfull position: \r\n10 contracts if under $1.50\r\n5 contracts if over $1.50\r\n\r\nEnter:\r\nmake analysis and alway enter 1/2 positions first. \r\n\r\nstop loss:\r\nNONE (aggressive trading)\r\n\r\nalways letting 1 or 2 contracts exp. depending on initial cost and success of trade.\r\n\r\n\r\n*/","map":{"version":3,"names":["React","useState","RecentTrades","recentTrades","formatDate","onRefresh","selectedTrade","setSelectedTrade","editedTrade","setEditedTrade","handleRefresh","roundStrikePrice","strikePrice","Math","round","parseFloat","handleRowClick","trade","handleCloseModal","handleInputChange","e","name","value","target","prevState","updateTradeData","updatedTrade","index","tradeData","findIndex","trade_id","updatedTradeData","setTradeData","handleFormSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","alert","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","map","key","trade_date","option_symbol","underlying_stock_price","option_type","strike_price","entry_price","exit_price","contracts","expiration_date","onSubmit","htmlFor","type","onChange","rationale","feedback","outcome"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/RecentTrades.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles/recentTrades.css\";\r\n\r\nconst RecentTrades = ({ recentTrades, formatDate, onRefresh }) => {\r\n  const [selectedTrade, setSelectedTrade] = useState(null);\r\n  const [editedTrade, setEditedTrade] = useState(null);\r\n\r\n  const handleRefresh = () => {\r\n    onRefresh();\r\n  };\r\n\r\n  const roundStrikePrice = (strikePrice) => {\r\n    return Math.round(parseFloat(strikePrice) * 10) / 10;\r\n  };\r\n\r\n  const handleRowClick = (trade) => {\r\n    setSelectedTrade(trade);\r\n    setEditedTrade({ ...trade }); // Initialize edited trade with the selected trade\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedTrade(null);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedTrade((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  // Function to update the trade data\r\n  const updateTradeData = (updatedTrade) => {\r\n    const index = tradeData.findIndex(\r\n      (trade) => trade.trade_id === updatedTrade.trade_id\r\n    );\r\n    if (index !== -1) {\r\n      const updatedTradeData = [...tradeData];\r\n      updatedTradeData[index] = updatedTrade;\r\n      setTradeData(updatedTradeData);\r\n    }\r\n  };\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send a request to update the trade data on the backend\r\n      const response = await fetch(\r\n        `http://localhost:8000/trades/${editedTrade.trade_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(editedTrade),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update trade data\");\r\n      }\r\n      // Parse the response data\r\n      const updatedTradeData = await response.json();\r\n      // Update the frontend state with the edited trade data\r\n      // Assuming you have a function to update the state with the edited trade data\r\n      updateTradeData(updatedTradeData);\r\n      // Close the modal after successfully updating the trade\r\n      handleCloseModal();\r\n      // Provide feedback to the user\r\n      alert(\"Trade data updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating trade data:\", error);\r\n      // Provide feedback to the user\r\n      alert(\"Failed to update trade data. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  // const handleFormSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   // Send a request to update the trade data on the backend\r\n  //   fetch(`http://localhost:8000/trades/${editedTrade.trade_id}`, {\r\n  //     method: \"PUT\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //     body: JSON.stringify(editedTrade),\r\n  //   })\r\n  //     .then((response) => {\r\n  //       if (!response.ok) {\r\n  //         throw new Error(\"Failed to update trade data\");\r\n  //       }\r\n  //       // Close the modal after successfully updating the trade\r\n  //       handleCloseModal();\r\n  //       // Provide feedback to the user\r\n  //       alert(\"Trade data updated successfully\");\r\n  //       // Optional: You can update the frontend state with the edited trade data here if needed\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error updating trade data:\", error);\r\n  //       // Provide feedback to the user\r\n  //       alert(\"Failed to update trade data. Please try again later.\");\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"recent-trades\">\r\n      <div className=\"card\">\r\n        <p className=\"recent\">Recent Trades</p>\r\n        <i\r\n          className=\"fa-solid fa-arrows-rotate\"\r\n          id=\"refresh-btn\"\r\n          onClick={handleRefresh}\r\n        ></i>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Date</th>\r\n            <th>Symbol</th>\r\n            <th>Stock Price</th>\r\n            <th>Type</th>\r\n            <th>Strike Price</th>\r\n            <th>Entry Price</th>\r\n            <th>Exit Price</th>\r\n            <th>Contracts</th>\r\n            <th>Expiration Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {recentTrades.map((trade) => (\r\n            <tr key={trade.trade_id} onClick={() => handleRowClick(trade)}>\r\n              <td>{trade.trade_id}</td>\r\n              <td>{formatDate(trade.trade_date)}</td>\r\n              <td>{trade.option_symbol}</td>\r\n              <td>${trade.underlying_stock_price}</td>\r\n              <td>{trade.option_type}</td>\r\n              <td>${roundStrikePrice(trade.strike_price)}</td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>{formatDate(trade.expiration_date)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {selectedTrade && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={handleCloseModal}>\r\n              &times;\r\n            </span>\r\n            <p>Edit Trade: {selectedTrade.trade_id}</p>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"option_symbol\">Option Symbol:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"option_symbol\"\r\n                  value={editedTrade.option_symbol}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"option_type\">Option Type:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"option_type\"\r\n                  value={editedTrade.option_type}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"strike_price\">Strike Price:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"strike_price\"\r\n                  value={editedTrade.strike_price}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"strike_price\">Entry Price:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"entry_price\"\r\n                  value={editedTrade.entry_price}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"exit_price\">Exit Price:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"exit_price\"\r\n                  value={editedTrade.exit_price}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <label htmlFor=\"contacts\">Contracts:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"contracts\"\r\n                  value={editedTrade.contracts}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <label htmlFor=\"underlying_stock_price\">Stock Price:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"underlying_stock_price\"\r\n                  value={editedTrade.underlying_stock_price}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <label htmlFor=\"rationale\">Rationale:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"rationale\"\r\n                  value={editedTrade.rationale}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"feedback\">Feedback:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"feedback\"\r\n                  value={editedTrade.feedback}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"outcome\">Outcome:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"outcome\"\r\n                  value={editedTrade.outcome}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn\">\r\n                Save Changes\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentTrades;\r\n\r\n// import React from \"react\";\r\n// import \"./styles/recentTrades.css\";\r\n\r\n// const RecentTrades = ({ recentTrades, formatDate }) => {\r\n//   const roundStrikePrice = (strikePrice) => {\r\n//     return Math.round(parseFloat(strikePrice) * 10) / 10;\r\n//   };\r\n\r\n//   const handleRowClick = (tradeId) => {\r\n//     // Programmatically navigate to the edit page\r\n//     window.location.href = `/edit/${tradeId}`;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"recent-trades\">\r\n//       <div className=\"card\">\r\n//         <p className=\"recent\">Recent Trades</p>\r\n//       </div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Date</th>\r\n//             <th>Symbol</th>\r\n//             <th>Stock Price</th>\r\n//             <th>Type</th>\r\n//             <th>Strike Price</th>\r\n//             <th>Entry Price</th>\r\n//             <th>Exit Price</th>\r\n//             <th>Contracts</th>\r\n//             <th>Expiration Date</th>\r\n//           </tr>\r\n//         </thead>\r\n\r\n//         <tbody>\r\n//           {recentTrades.map((trade) => (\r\n//             <tr\r\n//               key={trade.trade_id}\r\n//               onClick={() => handleRowClick(trade.trade_id)}\r\n//             >\r\n//               <td>{trade.trade_id}</td>\r\n//               <td>{formatDate(trade.trade_date)}</td>\r\n//               <td>{trade.option_symbol}</td>\r\n//               <td>${trade.underlying_stock_price}</td>\r\n//               <td>{trade.option_type}</td>\r\n//               <td>${roundStrikePrice(trade.strike_price)}</td>\r\n//               <td>${trade.entry_price}</td>\r\n//               <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\r\n//               <td>{trade.contracts}</td>\r\n//               <td>{formatDate(trade.expiration_date)}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RecentTrades;\r\n\r\n/*\r\nimport React from \"react\";\r\nimport \"./styles/recentTrades.css\";\r\n\r\nconst RecentTrades = ({ recentTrades, formatDate, onRefresh }) => {\r\n  const handleRefresh = () => {\r\n    onRefresh();\r\n  };\r\n  const roundStrikePrice = (strikePrice) => {\r\n    return Math.round(parseFloat(strikePrice) * 10) / 10;\r\n  };\r\n\r\n  return (\r\n    <div className=\"recent-trades\">\r\n      <div className=\"card\">\r\n        <p className=\"recent\">Recent Trades</p>\r\n        <i\r\n          className=\"fa-solid fa-arrows-rotate\"\r\n          id=\"refresh-btn\"\r\n          onClick={handleRefresh}\r\n        ></i>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Date</th>\r\n            <th>Symbol</th>\r\n            <th>Stock Price</th>\r\n            <th>Type</th>\r\n            <th>Strike Price</th>\r\n            <th>Entry Price</th>\r\n            <th>Exit Price</th>\r\n            <th>Contracts</th>\r\n            <th>Expiration Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {recentTrades.map((trade) => (\r\n            <tr key={trade.trade_id}>\r\n              <td>{trade.trade_id}</td>\r\n              <td>{formatDate(trade.trade_date)}</td>\r\n              <td>{trade.option_symbol}</td>\r\n              <td>${trade.underlying_stock_price}</td>\r\n              <td>{trade.option_type}</td>\r\n              <td>${roundStrikePrice(trade.strike_price)}</td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>{formatDate(trade.expiration_date)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentTrades;\r\n*/\r\n\r\n/* \r\nAdditional:\r\n\r\nTotal entry cost ($)\r\nfirst trim (50%)\r\nsecond trim (100%)\r\ntotal profit (%)\r\ntotal profit ($)\r\n*/\r\n\r\n/* \r\nstrategy: AGGRESSIVE\r\n\r\nstarting $500.00\r\n\r\ntrim:\r\nfirst trim (50%)\r\nsecond trim (100%)\r\n\r\nfull position: \r\n10 contracts if under $1.50\r\n5 contracts if over $1.50\r\n\r\nEnter:\r\nmake analysis and alway enter 1/2 positions first. \r\n\r\nstop loss:\r\nNONE (aggressive trading)\r\n\r\nalways letting 1 or 2 contracts exp. depending on initial cost and success of trade.\r\n\r\n\r\n*/\r\n"],"mappings":"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AAA;IAAA;EAAA,GAAC,WAAgB,CAAC,eAC3CvD,KAAA,CAAAgD,aAAA;IACEuB,IAAI,EAAC,MAAM;IACXlD,IAAI,EAAC,UAAU;IACfC,KAAK,EAAEd,WAAW,CAACkE,QAAS;IAC5BF,QAAQ,EAAErD,iBAAkB;IAAA+B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CAAC,EAAC,GAAG,eACNvD,KAAA,CAAAgD,aAAA;IAAOsB,OAAO,EAAC,SAAS;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAe,CAAC,eACzCvD,KAAA,CAAAgD,aAAA;IACEuB,IAAI,EAAC,MAAM;IACXlD,IAAI,EAAC,SAAS;IACdC,KAAK,EAAEd,WAAW,CAACmE,OAAQ;IAC3BH,QAAQ,EAAErD,iBAAkB;IAAA+B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CACE,CAAC,eACNvD,KAAA,CAAAgD,aAAA;IAAQuB,IAAI,EAAC,QAAQ;IAACtB,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAE9B,CACJ,CACH,CACF,CAEJ,CAAC;AAEV,CAAC;AAED,eAAerD,YAAY;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}