{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Modal from \"./Modal\";\n// import \"./styles/watchlist.css\";\n// import { formatDate } from \"./Utility\";\n// import closeIcon from \"./assets/close.png\";\n// import settingIcon from \"./assets/setting.png\";\n\n// const Watchlist = () => {\n//   const [watchlist, setWatchlist] = useState([]);\n//   const [showModal, setShowModal] = useState(false);\n//   const [showWatchModal, setShowWatchModal] = useState(false);\n//   const [editedWatchlist, setEditedWatchlist] = useState(null);\n//   const [formData, setFormData] = useState({\n//     enter_date: \"\",\n//     symbol: \"\",\n//     price: \"\",\n//     target_price: \"\",\n//     exp_date: \"\", // Changed from expiration_date to match backend\n//     plan: \"\",\n//   });\n\n//   useEffect(() => {\n//     fetchWatchlistData();\n//   }, []);\n\n//   const fetchWatchlistData = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8000/watchlist\");\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch watchlist data\");\n//       }\n//       const data = await response.json();\n//       setWatchlist(data.watchlist_entries);\n//     } catch (error) {\n//       console.error(\"Error fetching watchlist data:\", error.message);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleWatchSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\"http://localhost:8000/watchlist\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(formData),\n//       });\n//       if (!response.ok) {\n//         throw new Error(\"Failed to add watchlist item\");\n//       }\n//       setFormData({\n//         enter_date: \"\",\n//         symbol: \"\",\n//         price: \"\",\n//         target_price: \"\",\n//         exp_date: \"\", // Reset exp_date instead of expiration_date\n//         plan: \"\",\n//       });\n//       setShowWatchModal(false);\n//       fetchWatchlistData();\n//     } catch (error) {\n//       console.error(\"Error adding watchlist item:\", error);\n//     }\n//   };\n\n//   const handleAddNewPlan = () => {\n//     setShowWatchModal(true);\n//   };\n\n//   const handleDeleteItem = (id) => {\n//     const updatedWatchlist = watchlist.filter((item) => item.watch_id !== id);\n//     setWatchlist(updatedWatchlist);\n//   };\n\n//   const handleCloseModal = () => {\n//     setShowModal(false);\n//   };\n\n//   const handleSettingsClick = (item, e) => {\n//     e.stopPropagation();\n//     setEditedWatchlist(item);\n//     setShowModal(true);\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditedWatchlist((prevState) => ({\n//       ...prevState,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\n//         `http://localhost:8000/watchlist/${editedWatchlist.watch_id}`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(editedWatchlist),\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update watchlist item\");\n//       }\n//       handleCloseModal();\n//       fetchWatchlistData();\n//     } catch (error) {\n//       console.error(\"Error updating watchlist item:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"watchlist-container\">\n//       <div className=\"watchlist\">\n//         <div className=\"header-card\">\n//           <p>Watchlist</p>\n//           <i\n//             className=\"fa-solid fa-plus\"\n//             id=\"new-btn\"\n//             onClick={handleAddNewPlan}\n//           ></i>\n//         </div>\n//         <div className=\"list-container\">\n//           <ul className=\"cards\">\n//             {watchlist.map((item) => (\n//               <li className=\"list-item\" key={item.watch_id}>\n//                 <div className=\"left\">\n//                   <div>{item.watch_id}</div>\n//                   <div className=\"symbol\">{item.symbol}</div>\n//                 </div>\n//                 <div className=\"right\">\n//                   <div className=\"details\">\n//                     Date: {formatDate(item.enter_date)}\n//                   </div>\n//                   <div className=\"details\">Price: ${item.price}</div>\n//                   <div className=\"target\">Target: ${item.target_price}</div>\n//                   <div className=\"details\">\n//                     Exp date: {formatDate(item.exp_date)}{\" \"}\n//                     {/* Changed from expiration_date to exp_date */}\n//                   </div>\n//                   <img\n//                     src={closeIcon}\n//                     alt=\"Close\"\n//                     className=\"close-icon\"\n//                     onClick={() => handleDeleteItem(item.watch_id)}\n//                   />\n//                   <img\n//                     src={settingIcon}\n//                     alt=\"Setting\"\n//                     className=\"setting-icon\"\n//                     onClick={(e) => handleSettingsClick(item, e)}\n//                   />\n//                 </div>\n//                 <div className=\"right\">\n//                   <div className=\"plan-watchlist\">\n//                     <div className=\"plan-id\">{item.watch_id}</div>{\" \"}\n//                     <div className=\"plan-title\">Plan</div>\n//                     <div> {item.plan}</div>\n//                   </div>\n//                 </div>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//         <Modal isOpen={showModal} onClose={handleCloseModal}>\n//           <div className=\"header-card\">\n//             <h1>{editedWatchlist && editedWatchlist.symbol}</h1>\n//           </div>\n//           {editedWatchlist && (\n//             <div>\n//               <form className=\"watch-form\" onSubmit={handleFormSubmit}>\n//                 <label htmlFor=\"price\">Price:</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"price\"\n//                   value={editedWatchlist.price}\n//                   onChange={handleInputChange}\n//                 />\n//                 <label htmlFor=\"target_price\">Target Price:</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"target_price\"\n//                   value={editedWatchlist.target_price}\n//                   onChange={handleInputChange}\n//                 />\n//                 <label htmlFor=\"exp_date\">Exp. date:</label>{\" \"}\n//                 {/* Changed from expiration_date to exp_date */}\n//                 <input\n//                   type=\"date\"\n//                   name=\"exp_date\"\n//                   value={editedWatchlist.exp_date}\n//                   onChange={handleInputChange}\n//                   required\n//                 />\n//                 <label htmlFor=\"plan\">Plan:</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"plan\"\n//                   value={editedWatchlist.plan}\n//                   onChange={handleInputChange}\n//                 />\n//                 <input type=\"submit\" value=\"Submit\" />\n//               </form>\n//             </div>\n//           )}\n//         </Modal>\n//         <Modal isOpen={showWatchModal} onClose={() => setShowWatchModal(false)}>\n//           <div className=\"header-card\">\n//             <h1>New Watchlist</h1>\n//           </div>\n//           <form className=\"watch-form\" onSubmit={handleWatchSubmit}>\n//             <label htmlFor=\"enter_date\">Date:</label>\n//             <input\n//               type=\"date\"\n//               name=\"enter_date\"\n//               value={formData.enter_date}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"symbol\">Symbol:</label>\n//             <input\n//               type=\"text\"\n//               name=\"symbol\"\n//               value={formData.symbol}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"price\">Current Price:</label>\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={formData.price}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"target_price\">Target Price:</label>\n//             <input\n//               type=\"text\"\n//               name=\"target_price\"\n//               value={formData.target_price}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"exp_date\">Expiration Date:</label>{\" \"}\n//             {/* Changed from expiration_date to exp_date */}\n//             <input\n//               type=\"date\"\n//               name=\"exp_date\"\n//               value={formData.exp_date}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"plan\">Plan:</label>\n//             <input\n//               type=\"text\"\n//               name=\"plan\"\n//               value={formData.plan}\n//               onChange={handleChange}\n//             />\n//             <input type=\"submit\" value=\"Add\" />\n//           </form>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Watchlist;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import Modal from \"./Modal\";\n// // import \"./styles/watchlist.css\";\n// // import { formatDate } from \"./Utility\";\n// // import closeIcon from \"./assets/close.png\";\n// // import settingIcon from \"./assets/setting.png\";\n\n// // const Watchlist = () => {\n// //   const [watchlist, setWatchlist] = useState([]);\n// //   const [showModal, setShowModal] = useState(false);\n// //   const [showWatchModal, setShowWatchModal] = useState(false);\n// //   const [editedWatchlist, setEditedWatchlist] = useState(null);\n// //   const [formData, setFormData] = useState({\n// //     enter_date: \"\",\n// //     symbol: \"\",\n// //     price: \"\",\n// //     target_price: \"\",\n// //     expiration_date: \"\",\n// //     plan: \"\",\n// //   });\n\n// //   useEffect(() => {\n// //     fetchWatchlistData();\n// //   }, []);\n\n// //   const fetchWatchlistData = async () => {\n// //     try {\n// //       const response = await fetch(\"http://localhost:8000/watchlist\");\n// //       if (!response.ok) {\n// //         throw new Error(\"Failed to fetch watchlist data\");\n// //       }\n// //       const data = await response.json();\n// //       setWatchlist(data);\n// //     } catch (error) {\n// //       console.error(\"Error fetching watchlist data:\", error.message);\n// //     }\n// //   };\n\n// //   const handleChange = (e) => {\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// //   };\n\n// //   const handleWatchSubmit = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const response = await fetch(\"http://localhost:8000/watchlist\", {\n// //         method: \"POST\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify(formData),\n// //       });\n// //       if (!response.ok) {\n// //         throw new Error(\"Failed to add watchlist item\");\n// //       }\n// //       setFormData({\n// //         enter_date: \"\",\n// //         symbol: \"\",\n// //         price: \"\",\n// //         target_price: \"\",\n// //         expiration_date: \"\",\n// //         plan: \"\",\n// //       });\n// //       setShowWatchModal(false);\n// //       fetchWatchlistData();\n// //     } catch (error) {\n// //       console.error(\"Error adding watchlist item:\", error);\n// //     }\n// //   };\n\n// //   const handleAddNewPlan = () => {\n// //     setShowWatchModal(true);\n// //   };\n\n// //   const handleDeleteItem = (id) => {\n// //     const updatedWatchlist = watchlist.filter((item) => item.watch_id !== id);\n// //     setWatchlist(updatedWatchlist);\n// //   };\n\n// //   const handleCloseModal = () => {\n// //     setShowModal(false);\n// //   };\n\n// //   const handleSettingsClick = (item, e) => {\n// //     e.stopPropagation();\n// //     setEditedWatchlist(item);\n// //     setShowModal(true);\n// //   };\n\n// //   const handleInputChange = (e) => {\n// //     const { name, value } = e.target;\n// //     setEditedWatchlist((prevState) => ({\n// //       ...prevState,\n// //       [name]: value,\n// //     }));\n// //   };\n\n// //   const handleFormSubmit = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const response = await fetch(\n// //         `http://localhost:8000/watchlist/${editedWatchlist.watch_id}`,\n// //         {\n// //           method: \"PUT\",\n// //           headers: {\n// //             \"Content-Type\": \"application/json\",\n// //           },\n// //           body: JSON.stringify(editedWatchlist),\n// //         }\n// //       );\n// //       if (!response.ok) {\n// //         throw new Error(\"Failed to update watchlist item\");\n// //       }\n// //       handleCloseModal();\n// //       fetchWatchlistData();\n// //     } catch (error) {\n// //       console.error(\"Error updating watchlist item:\", error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"watchlist-container\">\n// //       <div className=\"watchlist\">\n// //         <div className=\"header-card\">\n// //           <p>Watchlist</p>\n// //           <i\n// //             className=\"fa-solid fa-plus\"\n// //             id=\"new-btn\"\n// //             onClick={handleAddNewPlan}\n// //           ></i>\n// //         </div>\n// //         <div className=\"list-container\">\n// //           <ul className=\"cards\">\n// //             {watchlist.map((item) => (\n// //               <li className=\"list-item\" key={item.watch_id}>\n// //                 <div className=\"left\">\n// //                   <div>{item.watch_id}</div>\n// //                   <div className=\"symbol\">{item.symbol}</div>\n// //                 </div>\n// //                 <div className=\"right\">\n// //                   <div className=\"details\">\n// //                     Date: {formatDate(item.enter_date)}\n// //                   </div>\n// //                   <div className=\"details\">Price: ${item.price}</div>\n// //                   <div className=\"target\">Target: ${item.target_price}</div>\n// //                   <div className=\"details\">\n// //                     Exp date: {formatDate(item.expiration_date)}\n// //                   </div>\n// //                   <img\n// //                     src={closeIcon}\n// //                     alt=\"Close\"\n// //                     className=\"close-icon\"\n// //                     onClick={() => handleDeleteItem(item.watch_id)}\n// //                   />\n// //                   <img\n// //                     src={settingIcon}\n// //                     alt=\"Setting\"\n// //                     className=\"setting-icon\"\n// //                     onClick={(e) => handleSettingsClick(item, e)}\n// //                   />\n// //                 </div>\n// //                 <div className=\"right\">\n// //                   <div className=\"plan-watchlist\">\n// //                     <div className=\"plan-id\">{item.watch_id}</div>{\" \"}\n// //                     <div className=\"plan-title\">Plan</div>\n// //                     <div> {item.plan}</div>\n// //                   </div>\n// //                 </div>\n// //               </li>\n// //             ))}\n// //           </ul>\n// //         </div>\n// //         <Modal isOpen={showModal} onClose={handleCloseModal}>\n// //           <div className=\"header-card\">\n// //             <h1>{editedWatchlist && editedWatchlist.symbol}</h1>\n// //           </div>\n// //           {editedWatchlist && (\n// //             <div>\n// //               <form className=\"watch-form\" onSubmit={handleFormSubmit}>\n// //                 <label htmlFor=\"price\">Price:</label>\n// //                 <input\n// //                   type=\"text\"\n// //                   name=\"price\"\n// //                   value={editedWatchlist.price}\n// //                   onChange={handleInputChange}\n// //                 />\n// //                 <label htmlFor=\"target_price\">Target Price:</label>\n// //                 <input\n// //                   type=\"text\"\n// //                   name=\"target_price\"\n// //                   value={editedWatchlist.target_price}\n// //                   onChange={handleInputChange}\n// //                 />\n// //                 <label htmlFor=\"expiration_date\">Exp. date:</label>\n// //                 <input\n// //                   type=\"date\"\n// //                   name=\"expiration_date\"\n// //                   value={editedWatchlist.expiration_date}\n// //                   onChange={handleInputChange}\n// //                   required\n// //                 />\n// //                 <label htmlFor=\"plan\">Plan:</label>\n// //                 <input\n// //                   type=\"text\"\n// //                   name=\"plan\"\n// //                   value={editedWatchlist.plan}\n// //                   onChange={handleInputChange}\n// //                 />\n// //                 <input type=\"submit\" value=\"Submit\" />\n// //               </form>\n// //             </div>\n// //           )}\n// //         </Modal>\n// //         <Modal isOpen={showWatchModal} onClose={() => setShowWatchModal(false)}>\n// //           <div className=\"header-card\">\n// //             <h1>New Watchlist</h1>\n// //           </div>\n// //           <form className=\"watch-form\" onSubmit={handleWatchSubmit}>\n// //             <label htmlFor=\"enter_date\">Date:</label>\n// //             <input\n// //               type=\"date\"\n// //               name=\"enter_date\"\n// //               value={formData.enter_date}\n// //               onChange={handleChange}\n// //               required\n// //             />\n// //             <label htmlFor=\"symbol\">Symbol:</label>\n// //             <input\n// //               type=\"text\"\n// //               name=\"symbol\"\n// //               value={formData.symbol}\n// //               onChange={handleChange}\n// //               required\n// //             />\n// //             <label htmlFor=\"price\">Current Price:</label>\n// //             <input\n// //               type=\"text\"\n// //               name=\"price\"\n// //               value={formData.price}\n// //               onChange={handleChange}\n// //               required\n// //             />\n// //             <label htmlFor=\"target_price\">Target Price:</label>\n// //             <input\n// //               type=\"text\"\n// //               name=\"target_price\"\n// //               value={formData.target_price}\n// //               onChange={handleChange}\n// //               required\n// //             />\n// //             <label htmlFor=\"expiration_date\">Expiration Date:</label>\n// //             <input\n// //               type=\"date\"\n// //               name=\"expiration_date\"\n// //               value={formData.expiration_date}\n// //               onChange={handleChange}\n// //               required\n// //             />\n// //             <label htmlFor=\"plan\">Plan:</label>\n// //             <input\n// //               type=\"text\"\n// //               name=\"plan\"\n// //               value={formData.plan}\n// //               onChange={handleChange}\n// //             />\n// //             <input type=\"submit\" value=\"Add\" />\n// //           </form>\n// //         </Modal>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Watchlist;","map":{"version":3,"names":[],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Watchlist.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Modal from \"./Modal\";\r\n// import \"./styles/watchlist.css\";\r\n// import { formatDate } from \"./Utility\";\r\n// import closeIcon from \"./assets/close.png\";\r\n// import settingIcon from \"./assets/setting.png\";\r\n\r\n// const Watchlist = () => {\r\n//   const [watchlist, setWatchlist] = useState([]);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [showWatchModal, setShowWatchModal] = useState(false);\r\n//   const [editedWatchlist, setEditedWatchlist] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     enter_date: \"\",\r\n//     symbol: \"\",\r\n//     price: \"\",\r\n//     target_price: \"\",\r\n//     exp_date: \"\", // Changed from expiration_date to match backend\r\n//     plan: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchWatchlistData();\r\n//   }, []);\r\n\r\n//   const fetchWatchlistData = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8000/watchlist\");\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to fetch watchlist data\");\r\n//       }\r\n//       const data = await response.json();\r\n//       setWatchlist(data.watchlist_entries);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching watchlist data:\", error.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleWatchSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8000/watchlist\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to add watchlist item\");\r\n//       }\r\n//       setFormData({\r\n//         enter_date: \"\",\r\n//         symbol: \"\",\r\n//         price: \"\",\r\n//         target_price: \"\",\r\n//         exp_date: \"\", // Reset exp_date instead of expiration_date\r\n//         plan: \"\",\r\n//       });\r\n//       setShowWatchModal(false);\r\n//       fetchWatchlistData();\r\n//     } catch (error) {\r\n//       console.error(\"Error adding watchlist item:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddNewPlan = () => {\r\n//     setShowWatchModal(true);\r\n//   };\r\n\r\n//   const handleDeleteItem = (id) => {\r\n//     const updatedWatchlist = watchlist.filter((item) => item.watch_id !== id);\r\n//     setWatchlist(updatedWatchlist);\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setShowModal(false);\r\n//   };\r\n\r\n//   const handleSettingsClick = (item, e) => {\r\n//     e.stopPropagation();\r\n//     setEditedWatchlist(item);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEditedWatchlist((prevState) => ({\r\n//       ...prevState,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleFormSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\r\n//         `http://localhost:8000/watchlist/${editedWatchlist.watch_id}`,\r\n//         {\r\n//           method: \"PUT\",\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//           body: JSON.stringify(editedWatchlist),\r\n//         }\r\n//       );\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to update watchlist item\");\r\n//       }\r\n//       handleCloseModal();\r\n//       fetchWatchlistData();\r\n//     } catch (error) {\r\n//       console.error(\"Error updating watchlist item:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"watchlist-container\">\r\n//       <div className=\"watchlist\">\r\n//         <div className=\"header-card\">\r\n//           <p>Watchlist</p>\r\n//           <i\r\n//             className=\"fa-solid fa-plus\"\r\n//             id=\"new-btn\"\r\n//             onClick={handleAddNewPlan}\r\n//           ></i>\r\n//         </div>\r\n//         <div className=\"list-container\">\r\n//           <ul className=\"cards\">\r\n//             {watchlist.map((item) => (\r\n//               <li className=\"list-item\" key={item.watch_id}>\r\n//                 <div className=\"left\">\r\n//                   <div>{item.watch_id}</div>\r\n//                   <div className=\"symbol\">{item.symbol}</div>\r\n//                 </div>\r\n//                 <div className=\"right\">\r\n//                   <div className=\"details\">\r\n//                     Date: {formatDate(item.enter_date)}\r\n//                   </div>\r\n//                   <div className=\"details\">Price: ${item.price}</div>\r\n//                   <div className=\"target\">Target: ${item.target_price}</div>\r\n//                   <div className=\"details\">\r\n//                     Exp date: {formatDate(item.exp_date)}{\" \"}\r\n//                     {/* Changed from expiration_date to exp_date */}\r\n//                   </div>\r\n//                   <img\r\n//                     src={closeIcon}\r\n//                     alt=\"Close\"\r\n//                     className=\"close-icon\"\r\n//                     onClick={() => handleDeleteItem(item.watch_id)}\r\n//                   />\r\n//                   <img\r\n//                     src={settingIcon}\r\n//                     alt=\"Setting\"\r\n//                     className=\"setting-icon\"\r\n//                     onClick={(e) => handleSettingsClick(item, e)}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"right\">\r\n//                   <div className=\"plan-watchlist\">\r\n//                     <div className=\"plan-id\">{item.watch_id}</div>{\" \"}\r\n//                     <div className=\"plan-title\">Plan</div>\r\n//                     <div> {item.plan}</div>\r\n//                   </div>\r\n//                 </div>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//         <Modal isOpen={showModal} onClose={handleCloseModal}>\r\n//           <div className=\"header-card\">\r\n//             <h1>{editedWatchlist && editedWatchlist.symbol}</h1>\r\n//           </div>\r\n//           {editedWatchlist && (\r\n//             <div>\r\n//               <form className=\"watch-form\" onSubmit={handleFormSubmit}>\r\n//                 <label htmlFor=\"price\">Price:</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"price\"\r\n//                   value={editedWatchlist.price}\r\n//                   onChange={handleInputChange}\r\n//                 />\r\n//                 <label htmlFor=\"target_price\">Target Price:</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"target_price\"\r\n//                   value={editedWatchlist.target_price}\r\n//                   onChange={handleInputChange}\r\n//                 />\r\n//                 <label htmlFor=\"exp_date\">Exp. date:</label>{\" \"}\r\n//                 {/* Changed from expiration_date to exp_date */}\r\n//                 <input\r\n//                   type=\"date\"\r\n//                   name=\"exp_date\"\r\n//                   value={editedWatchlist.exp_date}\r\n//                   onChange={handleInputChange}\r\n//                   required\r\n//                 />\r\n//                 <label htmlFor=\"plan\">Plan:</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"plan\"\r\n//                   value={editedWatchlist.plan}\r\n//                   onChange={handleInputChange}\r\n//                 />\r\n//                 <input type=\"submit\" value=\"Submit\" />\r\n//               </form>\r\n//             </div>\r\n//           )}\r\n//         </Modal>\r\n//         <Modal isOpen={showWatchModal} onClose={() => setShowWatchModal(false)}>\r\n//           <div className=\"header-card\">\r\n//             <h1>New Watchlist</h1>\r\n//           </div>\r\n//           <form className=\"watch-form\" onSubmit={handleWatchSubmit}>\r\n//             <label htmlFor=\"enter_date\">Date:</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               name=\"enter_date\"\r\n//               value={formData.enter_date}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"symbol\">Symbol:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"symbol\"\r\n//               value={formData.symbol}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"price\">Current Price:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"price\"\r\n//               value={formData.price}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"target_price\">Target Price:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"target_price\"\r\n//               value={formData.target_price}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"exp_date\">Expiration Date:</label>{\" \"}\r\n//             {/* Changed from expiration_date to exp_date */}\r\n//             <input\r\n//               type=\"date\"\r\n//               name=\"exp_date\"\r\n//               value={formData.exp_date}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"plan\">Plan:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"plan\"\r\n//               value={formData.plan}\r\n//               onChange={handleChange}\r\n//             />\r\n//             <input type=\"submit\" value=\"Add\" />\r\n//           </form>\r\n//         </Modal>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Watchlist;\r\n\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import Modal from \"./Modal\";\r\n// // import \"./styles/watchlist.css\";\r\n// // import { formatDate } from \"./Utility\";\r\n// // import closeIcon from \"./assets/close.png\";\r\n// // import settingIcon from \"./assets/setting.png\";\r\n\r\n// // const Watchlist = () => {\r\n// //   const [watchlist, setWatchlist] = useState([]);\r\n// //   const [showModal, setShowModal] = useState(false);\r\n// //   const [showWatchModal, setShowWatchModal] = useState(false);\r\n// //   const [editedWatchlist, setEditedWatchlist] = useState(null);\r\n// //   const [formData, setFormData] = useState({\r\n// //     enter_date: \"\",\r\n// //     symbol: \"\",\r\n// //     price: \"\",\r\n// //     target_price: \"\",\r\n// //     expiration_date: \"\",\r\n// //     plan: \"\",\r\n// //   });\r\n\r\n// //   useEffect(() => {\r\n// //     fetchWatchlistData();\r\n// //   }, []);\r\n\r\n// //   const fetchWatchlistData = async () => {\r\n// //     try {\r\n// //       const response = await fetch(\"http://localhost:8000/watchlist\");\r\n// //       if (!response.ok) {\r\n// //         throw new Error(\"Failed to fetch watchlist data\");\r\n// //       }\r\n// //       const data = await response.json();\r\n// //       setWatchlist(data);\r\n// //     } catch (error) {\r\n// //       console.error(\"Error fetching watchlist data:\", error.message);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   const handleWatchSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const response = await fetch(\"http://localhost:8000/watchlist\", {\r\n// //         method: \"POST\",\r\n// //         headers: {\r\n// //           \"Content-Type\": \"application/json\",\r\n// //         },\r\n// //         body: JSON.stringify(formData),\r\n// //       });\r\n// //       if (!response.ok) {\r\n// //         throw new Error(\"Failed to add watchlist item\");\r\n// //       }\r\n// //       setFormData({\r\n// //         enter_date: \"\",\r\n// //         symbol: \"\",\r\n// //         price: \"\",\r\n// //         target_price: \"\",\r\n// //         expiration_date: \"\",\r\n// //         plan: \"\",\r\n// //       });\r\n// //       setShowWatchModal(false);\r\n// //       fetchWatchlistData();\r\n// //     } catch (error) {\r\n// //       console.error(\"Error adding watchlist item:\", error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleAddNewPlan = () => {\r\n// //     setShowWatchModal(true);\r\n// //   };\r\n\r\n// //   const handleDeleteItem = (id) => {\r\n// //     const updatedWatchlist = watchlist.filter((item) => item.watch_id !== id);\r\n// //     setWatchlist(updatedWatchlist);\r\n// //   };\r\n\r\n// //   const handleCloseModal = () => {\r\n// //     setShowModal(false);\r\n// //   };\r\n\r\n// //   const handleSettingsClick = (item, e) => {\r\n// //     e.stopPropagation();\r\n// //     setEditedWatchlist(item);\r\n// //     setShowModal(true);\r\n// //   };\r\n\r\n// //   const handleInputChange = (e) => {\r\n// //     const { name, value } = e.target;\r\n// //     setEditedWatchlist((prevState) => ({\r\n// //       ...prevState,\r\n// //       [name]: value,\r\n// //     }));\r\n// //   };\r\n\r\n// //   const handleFormSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const response = await fetch(\r\n// //         `http://localhost:8000/watchlist/${editedWatchlist.watch_id}`,\r\n// //         {\r\n// //           method: \"PUT\",\r\n// //           headers: {\r\n// //             \"Content-Type\": \"application/json\",\r\n// //           },\r\n// //           body: JSON.stringify(editedWatchlist),\r\n// //         }\r\n// //       );\r\n// //       if (!response.ok) {\r\n// //         throw new Error(\"Failed to update watchlist item\");\r\n// //       }\r\n// //       handleCloseModal();\r\n// //       fetchWatchlistData();\r\n// //     } catch (error) {\r\n// //       console.error(\"Error updating watchlist item:\", error);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"watchlist-container\">\r\n// //       <div className=\"watchlist\">\r\n// //         <div className=\"header-card\">\r\n// //           <p>Watchlist</p>\r\n// //           <i\r\n// //             className=\"fa-solid fa-plus\"\r\n// //             id=\"new-btn\"\r\n// //             onClick={handleAddNewPlan}\r\n// //           ></i>\r\n// //         </div>\r\n// //         <div className=\"list-container\">\r\n// //           <ul className=\"cards\">\r\n// //             {watchlist.map((item) => (\r\n// //               <li className=\"list-item\" key={item.watch_id}>\r\n// //                 <div className=\"left\">\r\n// //                   <div>{item.watch_id}</div>\r\n// //                   <div className=\"symbol\">{item.symbol}</div>\r\n// //                 </div>\r\n// //                 <div className=\"right\">\r\n// //                   <div className=\"details\">\r\n// //                     Date: {formatDate(item.enter_date)}\r\n// //                   </div>\r\n// //                   <div className=\"details\">Price: ${item.price}</div>\r\n// //                   <div className=\"target\">Target: ${item.target_price}</div>\r\n// //                   <div className=\"details\">\r\n// //                     Exp date: {formatDate(item.expiration_date)}\r\n// //                   </div>\r\n// //                   <img\r\n// //                     src={closeIcon}\r\n// //                     alt=\"Close\"\r\n// //                     className=\"close-icon\"\r\n// //                     onClick={() => handleDeleteItem(item.watch_id)}\r\n// //                   />\r\n// //                   <img\r\n// //                     src={settingIcon}\r\n// //                     alt=\"Setting\"\r\n// //                     className=\"setting-icon\"\r\n// //                     onClick={(e) => handleSettingsClick(item, e)}\r\n// //                   />\r\n// //                 </div>\r\n// //                 <div className=\"right\">\r\n// //                   <div className=\"plan-watchlist\">\r\n// //                     <div className=\"plan-id\">{item.watch_id}</div>{\" \"}\r\n// //                     <div className=\"plan-title\">Plan</div>\r\n// //                     <div> {item.plan}</div>\r\n// //                   </div>\r\n// //                 </div>\r\n// //               </li>\r\n// //             ))}\r\n// //           </ul>\r\n// //         </div>\r\n// //         <Modal isOpen={showModal} onClose={handleCloseModal}>\r\n// //           <div className=\"header-card\">\r\n// //             <h1>{editedWatchlist && editedWatchlist.symbol}</h1>\r\n// //           </div>\r\n// //           {editedWatchlist && (\r\n// //             <div>\r\n// //               <form className=\"watch-form\" onSubmit={handleFormSubmit}>\r\n// //                 <label htmlFor=\"price\">Price:</label>\r\n// //                 <input\r\n// //                   type=\"text\"\r\n// //                   name=\"price\"\r\n// //                   value={editedWatchlist.price}\r\n// //                   onChange={handleInputChange}\r\n// //                 />\r\n// //                 <label htmlFor=\"target_price\">Target Price:</label>\r\n// //                 <input\r\n// //                   type=\"text\"\r\n// //                   name=\"target_price\"\r\n// //                   value={editedWatchlist.target_price}\r\n// //                   onChange={handleInputChange}\r\n// //                 />\r\n// //                 <label htmlFor=\"expiration_date\">Exp. date:</label>\r\n// //                 <input\r\n// //                   type=\"date\"\r\n// //                   name=\"expiration_date\"\r\n// //                   value={editedWatchlist.expiration_date}\r\n// //                   onChange={handleInputChange}\r\n// //                   required\r\n// //                 />\r\n// //                 <label htmlFor=\"plan\">Plan:</label>\r\n// //                 <input\r\n// //                   type=\"text\"\r\n// //                   name=\"plan\"\r\n// //                   value={editedWatchlist.plan}\r\n// //                   onChange={handleInputChange}\r\n// //                 />\r\n// //                 <input type=\"submit\" value=\"Submit\" />\r\n// //               </form>\r\n// //             </div>\r\n// //           )}\r\n// //         </Modal>\r\n// //         <Modal isOpen={showWatchModal} onClose={() => setShowWatchModal(false)}>\r\n// //           <div className=\"header-card\">\r\n// //             <h1>New Watchlist</h1>\r\n// //           </div>\r\n// //           <form className=\"watch-form\" onSubmit={handleWatchSubmit}>\r\n// //             <label htmlFor=\"enter_date\">Date:</label>\r\n// //             <input\r\n// //               type=\"date\"\r\n// //               name=\"enter_date\"\r\n// //               value={formData.enter_date}\r\n// //               onChange={handleChange}\r\n// //               required\r\n// //             />\r\n// //             <label htmlFor=\"symbol\">Symbol:</label>\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               name=\"symbol\"\r\n// //               value={formData.symbol}\r\n// //               onChange={handleChange}\r\n// //               required\r\n// //             />\r\n// //             <label htmlFor=\"price\">Current Price:</label>\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               name=\"price\"\r\n// //               value={formData.price}\r\n// //               onChange={handleChange}\r\n// //               required\r\n// //             />\r\n// //             <label htmlFor=\"target_price\">Target Price:</label>\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               name=\"target_price\"\r\n// //               value={formData.target_price}\r\n// //               onChange={handleChange}\r\n// //               required\r\n// //             />\r\n// //             <label htmlFor=\"expiration_date\">Expiration Date:</label>\r\n// //             <input\r\n// //               type=\"date\"\r\n// //               name=\"expiration_date\"\r\n// //               value={formData.expiration_date}\r\n// //               onChange={handleChange}\r\n// //               required\r\n// //             />\r\n// //             <label htmlFor=\"plan\">Plan:</label>\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               name=\"plan\"\r\n// //               value={formData.plan}\r\n// //               onChange={handleChange}\r\n// //             />\r\n// //             <input type=\"submit\" value=\"Add\" />\r\n// //           </form>\r\n// //         </Modal>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Watchlist;\r\n"],"mappings},"metadata":{},"sourceType":"module"}