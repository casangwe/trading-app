{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\InvestmentChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { ScatterChart, Scatter, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst InvestmentChart = () => {\n  const [dailyPNLData, setDailyPNLData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        setDailyPNLData(data);\n      } catch (error) {\n        setError(\"No Daily PNL data\");\n        console.error(\"Error fetching daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  useEffect(() => {\n    if (!dailyPNLData.length) return;\n    setChartData(prepareChartData());\n  }, [view, dailyPNLData]);\n  const prepareChartData = () => {\n    let data = [];\n    return data.map(entry => ({\n      date: formatDate(entry.entry_date),\n      balance: parseFloat(entry.balance || 0)\n    }));\n  };\n  const getCurrentMonth = data => {\n    const today = new Date();\n    return data.filter(entry => new Date(entry.entry_date).getMonth() === today.getMonth());\n  };\n  const getMonthsData = data => {\n    const months = Array.from({\n      length: 12\n    }, () => []);\n    data.forEach(entry => {\n      const entryDate = new Date(entry.entry_date);\n      months[entryDate.getMonth()].push(entry);\n    });\n    return months.filter(month => month.length > 0);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"investment-chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ScatterChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    type: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    dataKey: \"balance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    formatter: value => formatCash(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Scatter, {\n    data: chartData,\n    fill: \"#4a90e2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default InvestmentChart;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","ScatterChart","Scatter","XAxis","YAxis","Tooltip","ResponsiveContainer","formatCash","formatDate","InvestmentChart","dailyPNLData","setDailyPNLData","loading","setLoading","error","setError","chartData","setChartData","fetchDailyPNLData","data","console","length","prepareChartData","view","map","entry","date","entry_date","balance","parseFloat","getCurrentMonth","today","Date","filter","getMonth","getMonthsData","months","Array","from","forEach","entryDate","push","month","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","width","height","dataKey","type","formatter","value","fill"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/InvestmentChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst InvestmentChart = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n      } catch (error) {\r\n        setError(\"No Daily PNL data\");\r\n        console.error(\"Error fetching daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!dailyPNLData.length) return;\r\n    setChartData(prepareChartData());\r\n  }, [view, dailyPNLData]);\r\n\r\n  const prepareChartData = () => {\r\n    let data = [];\r\n\r\n    return data.map((entry) => ({\r\n      date: formatDate(entry.entry_date),\r\n      balance: parseFloat(entry.balance || 0),\r\n    }));\r\n  };\r\n\r\n  const getCurrentMonth = (data) => {\r\n    const today = new Date();\r\n    return data.filter(\r\n      (entry) => new Date(entry.entry_date).getMonth() === today.getMonth()\r\n    );\r\n  };\r\n\r\n  const getMonthsData = (data) => {\r\n    const months = Array.from({ length: 12 }, () => []);\r\n    data.forEach((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      months[entryDate.getMonth()].push(entry);\r\n    });\r\n    return months.filter((month) => month.length > 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"investment-chart-container\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <XAxis dataKey=\"date\" type=\"category\" />\r\n              <YAxis dataKey=\"balance\" />\r\n              <Tooltip formatter={(value) => formatCash(value)} />\r\n              <Scatter data={chartData} fill=\"#4a90e2\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvestmentChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}