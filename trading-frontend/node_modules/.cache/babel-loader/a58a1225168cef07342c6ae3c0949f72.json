{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Trade.js\";\nimport React, { useState, useEffect } from \"react\";\nconst Trade = () => {\n  // Define state variables\n  const [trades, setTrades] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Function to fetch the list of trades from the backend\n  const fetchTrades = async () => {\n    try {\n      // Make API call to fetch trades data\n      const response = await fetch(\"http://localhost:8000/trades\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch trades data\");\n      }\n      const data = await response.json();\n      // Update state with fetched trades data\n      setTrades(data);\n    } catch (error) {\n      // Handle errors\n      setError(error.message);\n    }\n  };\n\n  // UseEffect hook to fetch trades data when component mounts\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n\n  // Function to format date\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = date.getDate().toString().padStart(2, \"0\"); // eslint-disable-next-line\n    const year = date.getFullYear();\n    return `${month}/${day}`;\n    return dateString; // Placeholder, replace with actual logic\n  };\n\n  // Render the component JSX\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Error: \", error), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Options\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Trade Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Settle Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"QTY\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Principle\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Exit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"%\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Net Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"P/L\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, trades.map(trade => /*#__PURE__*/React.createElement(\"tr\", {\n    key: trade.trade_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, trade.trade_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, trade.symbol, \" \", formatDate(trade.exp_date), \" \", trade.option_type, \" \", \"$\", trade.strike_price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, formatDate(trade.entry_date)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, formatDate(trade.close_date)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"$\", trade.entry_price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, trade.contracts), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"$\", (trade.entry_price * trade.contracts).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"$\", trade.exit_price ? trade.exit_price : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, trade.exit_price && trade.entry_price ? ((trade.exit_price - trade.entry_price) / trade.entry_price * 100).toFixed(2) + \"%\" : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"$\", (trade.exit_price ? trade.exit_price : 0) * trade.contracts), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"$\", (trade.profit_loss * trade.contracts).toFixed(2)))))));\n};\nexport default Trade;","map":{"version":3,"names":["React","useState","useEffect","Trade","trades","setTrades","error","setError","fetchTrades","response","fetch","ok","Error","data","json","message","formatDate","dateString","date","Date","month","getMonth","toString","padStart","day","getDate","year","getFullYear","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","trade","key","trade_id","symbol","exp_date","option_type","strike_price","entry_date","close_date","entry_price","contracts","toFixed","exit_price","profit_loss"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Trade.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Trade = () => {\r\n  // Define state variables\r\n  const [trades, setTrades] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to fetch the list of trades from the backend\r\n  const fetchTrades = async () => {\r\n    try {\r\n      // Make API call to fetch trades data\r\n      const response = await fetch(\"http://localhost:8000/trades\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch trades data\");\r\n      }\r\n      const data = await response.json();\r\n      // Update state with fetched trades data\r\n      setTrades(data);\r\n    } catch (error) {\r\n      // Handle errors\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // UseEffect hook to fetch trades data when component mounts\r\n  useEffect(() => {\r\n    fetchTrades();\r\n  }, []);\r\n\r\n  // Function to format date\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = date.getDate().toString().padStart(2, \"0\"); // eslint-disable-next-line\r\n    const year = date.getFullYear();\r\n    return `${month}/${day}`;\r\n    return dateString; // Placeholder, replace with actual logic\r\n  };\r\n\r\n  // Render the component JSX\r\n  return (\r\n    <div>\r\n      {error && <p>Error: {error}</p>}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Options</th>\r\n            <th>Trade Date</th>\r\n            <th>Settle Date</th>\r\n            <th>Price</th>\r\n            <th>QTY</th>\r\n            <th>Principle</th>\r\n            <th>Exit</th>\r\n            <th>%</th>\r\n            <th>Net Amount</th>\r\n            <th>P/L</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {trades.map((trade) => (\r\n            <tr key={trade.trade_id}>\r\n              <td>{trade.trade_id}</td>\r\n              <td>\r\n                {trade.symbol} {formatDate(trade.exp_date)} {trade.option_type}{\" \"}\r\n                ${trade.strike_price}\r\n              </td>\r\n              <td>{formatDate(trade.entry_date)}</td>\r\n              <td>{formatDate(trade.close_date)}</td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>${(trade.entry_price * trade.contracts).toFixed(2)}</td>\r\n              <td>${trade.exit_price ? trade.exit_price : \"\"}</td>\r\n              <td>\r\n                {trade.exit_price && trade.entry_price\r\n                  ? (\r\n                      ((trade.exit_price - trade.entry_price) /\r\n                        trade.entry_price) *\r\n                      100\r\n                    ).toFixed(2) + \"%\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>\r\n                ${(trade.exit_price ? trade.exit_price : 0) * trade.contracts}\r\n              </td>\r\n              <td>${(trade.profit_loss * trade.contracts).toFixed(2)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trade;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}