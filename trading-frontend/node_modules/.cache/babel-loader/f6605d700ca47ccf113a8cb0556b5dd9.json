{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\trades\\\\EQTcurve.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTrades } from \"../api/TradesAPI\";\nimport { LineChart, Line, XAxis, Tooltip, ResponsiveContainer, Area, AreaChart } from \"recharts\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst EQTCurve = () => {\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAndFormatData = async () => {\n      try {\n        const trades = await fetchTrades();\n        if (trades && trades.length > 0) {\n          const formattedData = formatChartData(trades);\n          setChartData(formattedData);\n        } else {\n          setError(\"No trade data available\");\n        }\n      } catch (error) {\n        setError(\"Error fetching trade data\");\n        console.error(\"Error:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAndFormatData();\n  }, []);\n  const formatChartData = trades => {\n    let cumulativeEquity = 100000; // Starting equity, adjust as needed\n    const idealIncrement = (300000 - 100000) / trades.length; // Ideal growth increment per trade\n\n    return trades.map((trade, index) => {\n      cumulativeEquity += parseFloat(trade.profit_loss || 0) * 100; // Convert profit/loss to cents\n      const idealEquity = 100000 + idealIncrement * (index + 1);\n      return {\n        date: formatDate(trade.close_date),\n        equity: cumulativeEquity,\n        idealEquity: idealEquity,\n        aboveIdeal: cumulativeEquity > idealEquity\n      };\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equity-curve-chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AreaChart, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    tick: false,\n    axisLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          date,\n          equity\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }\n        }, formatCash(equity)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"trade-date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }\n        }, date));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"idealEquity\",\n    stroke: \"green\",\n    strokeWidth: 2,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"equity\",\n    stroke: \"purple\",\n    strokeWidth: 2,\n    dot: {\n      r: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"equity\",\n    stroke: \"none\",\n    fill: \"pink\",\n    fillOpacity: 0.5,\n    isAbove: () => chartData.aboveIdeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"equity\",\n    stroke: \"none\",\n    fill: \"lightblue\",\n    fillOpacity: 0.5,\n    isAbove: () => !chartData.aboveIdeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default EQTCurve;","map":{"version":3,"names":["React","useState","useEffect","fetchTrades","LineChart","Line","XAxis","Tooltip","ResponsiveContainer","Area","AreaChart","formatCash","formatDate","EQTCurve","chartData","setChartData","loading","setLoading","error","setError","fetchAndFormatData","trades","length","formattedData","formatChartData","console","cumulativeEquity","idealIncrement","map","trade","index","parseFloat","profit_loss","idealEquity","date","close_date","equity","aboveIdeal","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","dataKey","tick","axisLine","cursor","content","payload","type","stroke","strokeWidth","dot","r","fill","fillOpacity","isAbove"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/trades/EQTcurve.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst EQTCurve = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAndFormatData = async () => {\r\n      try {\r\n        const trades = await fetchTrades();\r\n        if (trades && trades.length > 0) {\r\n          const formattedData = formatChartData(trades);\r\n          setChartData(formattedData);\r\n        } else {\r\n          setError(\"No trade data available\");\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching trade data\");\r\n        console.error(\"Error:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAndFormatData();\r\n  }, []);\r\n\r\n  const formatChartData = (trades) => {\r\n    let cumulativeEquity = 100000; // Starting equity, adjust as needed\r\n    const idealIncrement = (300000 - 100000) / trades.length; // Ideal growth increment per trade\r\n\r\n    return trades.map((trade, index) => {\r\n      cumulativeEquity += parseFloat(trade.profit_loss || 0) * 100; // Convert profit/loss to cents\r\n      const idealEquity = 100000 + idealIncrement * (index + 1);\r\n\r\n      return {\r\n        date: formatDate(trade.close_date),\r\n        equity: cumulativeEquity,\r\n        idealEquity: idealEquity,\r\n        aboveIdeal: cumulativeEquity > idealEquity,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"equity-curve-chart-container\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n          <AreaChart data={chartData}>\r\n            <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { date, equity } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p>{formatCash(equity)}</p>\r\n                      <p className=\"trade-date\">{date}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n\r\n            {/* Ideal Line */}\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"idealEquity\"\r\n              stroke=\"green\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n            />\r\n\r\n            {/* Equity Curve Line */}\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"equity\"\r\n              stroke=\"purple\"\r\n              strokeWidth={2}\r\n              dot={{ r: 3 }}\r\n            />\r\n\r\n            {/* Area Above Ideal Line */}\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"equity\"\r\n              stroke=\"none\"\r\n              fill=\"pink\"\r\n              fillOpacity={0.5}\r\n              isAbove={() => chartData.aboveIdeal}\r\n            />\r\n\r\n            {/* Area Below Ideal Line */}\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"equity\"\r\n              stroke=\"none\"\r\n              fill=\"lightblue\"\r\n              fillOpacity={0.5}\r\n              isAbove={() => !chartData.aboveIdeal}\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EQTCurve;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}