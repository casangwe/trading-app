{"ast":null,"code":"/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n    * An empty function that can be used, for example, for optional callback.\n    */\nfunction noop() {\n  /* noop */}\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nconst uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value) {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current;\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge(target, source, {\n    merger: _mergerIf\n  });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n/**\n * @private\n */\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n/**\n * @private\n */\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n/**\n * @private\n */\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = value => typeof value !== 'undefined';\nconst isFunction = value => typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * @param e - The event\n * @private\n */\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < -0.5 * PI) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || (index => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = lo + hi >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {\n    lo,\n    hi\n  };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nconst _lookupByKey = (table, key, value, last) => _lookup(table, value, last ? index => {\n  const ti = table[index][key];\n  return ti < value || ti === value && table[index + 1][key] === value;\n} : index => table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nconst _rlookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach(key => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach(object => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach(key => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\n/**\n * @param items\n */\nfunction _arrayUnique(items) {\n  const set = new Set(items);\n  if (set.size === items.length) {\n    return items;\n  }\n  return Array.from(set);\n}\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/\nconst requestAnimFrame = function () {\n  if (typeof window === 'undefined') {\n    return function (callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nfunction throttled(fn, thisArg) {\n  let argsToUse = [];\n  let ticking = false;\n  return function (...args) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */\nfunction debounce(fn, delay) {\n  let timeout;\n  return function (...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nconst _toLeftRightCenter = align => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n      // @ts-expect-error Need to type _parsed\n      _lookupByKey(_parsed, axis, min).lo,\n      // @ts-expect-error Need to fix types on _lookupByKey\n      animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n      // @ts-expect-error Need to type _parsed\n      _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n      // @ts-expect-error Need to fix types on _lookupByKey\n      animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nfunction _scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nconst atEdge = t => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < 1 / d) {\n      return m * t * t;\n    }\n    if (t < 2 / d) {\n      return m * (t -= 1.5 / d) * t + 0.75;\n    }\n    if (t < 2.5 / d) {\n      return m * (t -= 2.25 / d) * t + 0.9375;\n    }\n    return m * (t -= 2.625 / d) * t + 0.984375;\n  },\n  easeInOutBounce: t => t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\nfunction applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n  });\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n  });\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    }\n  });\n  defaults.describe('animations', {\n    _fallback: 'animation'\n  });\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0\n        }\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0\n        }\n      }\n    }\n  });\n}\nfunction applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\nfunction applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    clip: true,\n    grace: 0,\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false\n    },\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n    title: {\n      display: false,\n      text: '',\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2\n    }\n  });\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n  });\n  defaults.describe('scales', {\n    _fallback: 'scale'\n  });\n  defaults.describe('scale.ticks', {\n    _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: name => name !== 'backdropPadding'\n  });\n}\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = context => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n  apply(appliers) {\n    appliers.forEach(apply => apply(this));\n  }\n}\nvar defaults = /* #__PURE__ */new Defaults({\n  _scriptable: name => !name.startsWith('on'),\n  _indexable: name => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n    // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n      // NOTE: the rounded rect implementation changed to use `arc` instead of\n      // `quadraticCurveTo` since it generates better results when rect is\n      // almost a circle. 0.516 (instead of 0.5) produces results with visually\n      // closer proportion to the previous impl and it is inscribed in the\n      // circle with `radius`. For more details, see the following PRs:\n      // https://github.com/chartjs/Chart.js/issues/5597\n      // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n  return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\n/**\n * @private\n */\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n    * Now that IE11 support has been dropped, we can use more\n    * of the TextMetrics object. The actual bounding boxes\n    * are unflagged in Chrome, Firefox, Edge, and Safari so they\n    * can be safely used.\n    * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n    */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += Number(font.lineHeight);\n  }\n  ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nfunction addRoundedRectPath(ctx, rect) {\n  const {\n    x,\n    y,\n    w,\n    h,\n    radius\n  } = rect;\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n    * Converts the given line height `value` in pixels for a specific font `size`.\n    * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n    * @param size - The font size (in pixels) used to resolve relative `value`.\n    * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n    * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n    * @since 2.7.0\n    */\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value) ? objProps ? prop => valueOrDefault(value[prop], value[props[prop]]) : prop => value[prop] : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nfunction toTRBL(value) {\n  return _readValueToProps(value, {\n    top: 'y',\n    right: 'x',\n    bottom: 'y',\n    left: 'x'\n  });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {\n    min,\n    max\n  } = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nfunction _createResolver(scopes, prefixes = [''], rootScopes, fallback, getTarget = () => scopes[0]) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: scope => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback)\n  };\n  return new Proxy(cache, {\n    /**\n    * A trap for the delete operator.\n    */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n    /**\n    * A trap for getting property values.\n    */\n    get(target, prop) {\n      return _cached(target, prop, () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    /**\n    * A trap for Object.getOwnPropertyDescriptor.\n    * Also used by Object.hasOwnProperty.\n    */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    /**\n    * A trap for Object.getPrototypeOf.\n    */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    /**\n    * A trap for the in operator.\n    */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    /**\n    * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n    */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    /**\n    * A trap for setting property values.\n    */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: ctx => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: scope => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n    * A trap for the delete operator.\n    */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n    /**\n    * A trap for getting property values.\n    */\n    get(target, prop, receiver) {\n      return _cached(target, prop, () => _resolveWithContext(target, prop, receiver));\n    },\n    /**\n    * A trap for Object.getOwnPropertyDescriptor.\n    * Also used by Object.hasOwnProperty.\n    */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n        enumerable: true,\n        configurable: true\n      } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    /**\n    * A trap for Object.getPrototypeOf.\n    */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    /**\n    * A trap for the in operator.\n    */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    /**\n    * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n    */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    /**\n    * A trap for setting property values.\n    */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n/**\n * @private\n */\nfunction _descriptors(proxy, defaults = {\n  scriptable: true,\n  indexable: true\n}) {\n  const {\n    _scriptable = defaults.scriptable,\n    _indexable = defaults.indexable,\n    _allKeys = defaults.allKeys\n  } = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {\n    _proxy,\n    _context,\n    _subProxy,\n    _descriptors: descriptors\n  } = target;\n  let value = _proxy[prop]; // resolve from proxy\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n  const {\n    _proxy,\n    _context,\n    _subProxy,\n    _stack\n  } = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {\n    _proxy,\n    _context,\n    _subProxy,\n    _descriptors: descriptors\n  } = target;\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback, () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {\n    iScale\n  } = meta;\n  const {\n    key = 'r'\n  } = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = indexAxis => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n  // This function must also respect \"skipped\" points\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n/**\n * @private\n */\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter(pt => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n    * @private\n    */\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = element => element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {\n    offsetX,\n    offsetY\n  } = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {\n    x,\n    y,\n    box\n  };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\nfunction getRelativePosition(event, chart) {\n  if ('native' in event) {\n    return event;\n  }\n  const {\n    canvas,\n    currentDevicePixelRatio\n  } = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {\n    x,\n    y,\n    box\n  } = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {\n    width,\n    height\n  } = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {\n    width,\n    height\n  } = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n  return {\n    width,\n    height\n  };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n  const canvas = chart.canvas;\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nconst supportsEventListenerOptions = function () {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n/**\n * @private\n */\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n  };\n}\n/**\n * @private\n */\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {\n    x: p1.cp2x,\n    y: p1.cp2y\n  };\n  const cp2 = {\n    x: p2.cp1x,\n    y: p2.cp1y\n  };\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\nconst getRightToLeftAdapter = function (rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    }\n  };\n};\nconst getLeftToRightAdapter = function () {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {},\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    }\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({\n  start,\n  end,\n  count,\n  loop,\n  style\n}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {\n    property,\n    start: startBound,\n    end: endBound\n  } = bounds;\n  const {\n    between,\n    normalize\n  } = propertyFn(property);\n  const count = points.length;\n  let {\n    start,\n    end,\n    loop\n  } = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {\n    start,\n    end,\n    loop,\n    style: segment.style\n  };\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {\n    property,\n    start: startBound,\n    end: endBound\n  } = bounds;\n  const count = points.length;\n  const {\n    compare,\n    between,\n    normalize\n  } = propertyFn(property);\n  const {\n    start,\n    end,\n    loop,\n    style\n  } = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end: i,\n        loop,\n        count,\n        style\n      }));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({\n      start: subStart,\n      end,\n      loop,\n      count,\n      style\n    }));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {\n    start,\n    end\n  };\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({\n          start: start % count,\n          end: (end - 1) % count,\n          loop\n        });\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({\n      start: start % count,\n      end: last % count,\n      loop\n    });\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {\n    start,\n    end\n  } = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{\n      start,\n      end,\n      loop\n    }], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {\n    _datasetIndex: datasetIndex,\n    options: {\n      spanGaps\n    }\n  } = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({\n        start: s % count,\n        end: e % count,\n        loop: l,\n        style: st\n      });\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function (key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };","map":{"version":3,"sources":["../../src/helpers/helpers.core.ts","../../src/helpers/helpers.math.ts","../../src/helpers/helpers.collection.ts","../../src/helpers/helpers.extras.ts","../../src/helpers/helpers.easing.ts","../../src/helpers/helpers.color.ts","../../src/core/core.animations.defaults.js","../../src/core/core.layouts.defaults.js","../../src/helpers/helpers.intl.ts","../../src/core/core.ticks.js","../../src/core/core.scale.defaults.js","../../src/core/core.defaults.js","../../src/helpers/helpers.canvas.ts","../../src/helpers/helpers.options.ts","../../src/helpers/helpers.config.ts","../../src/helpers/helpers.curve.ts","../../src/helpers/helpers.dom.ts","../../src/helpers/helpers.interpolation.ts","../../src/helpers/helpers.rtl.ts","../../src/helpers/helpers.segment.js"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","undefined","console","warn","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","_getKeyResolver","obj","resolveObjectKey","resolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","isPatternOrGradient","color","Color","getHoverColor","saturate","darken","hexString","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","to","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","Defaults","constructor","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","weight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","j","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","w","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","h","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","parseInt","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","r","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","l","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer"],"mappings":"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","sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n"]},"metadata":{},"sourceType":"module"}