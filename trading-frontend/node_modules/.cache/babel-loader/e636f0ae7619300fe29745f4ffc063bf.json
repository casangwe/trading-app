{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\AccountGraph.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/accountGraph.css\";\nconst AccountGraph = ({\n  trades,\n  onTimePeriodChange\n}) => {\n  const chartRef = useRef(null);\n  const [timePeriod, setTimePeriod] = useState(\"1D\");\n  useEffect(() => {\n    const renderChart = () => {\n      // Implement logic to render the chart based on selected time period\n      console.log(\"Rendering chart for\", timePeriod);\n    };\n\n    // Call renderChart when component mounts or when trades or time period change\n    renderChart();\n\n    // Cleanup function\n    return () => {\n      // Implement any cleanup if necessary\n    };\n  }, [trades, timePeriod]);\n  const handleTimePeriodChange = period => {\n    setTimePeriod(period);\n    onTimePeriodChange(period); // Notify parent component about time period change\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"account-graph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-period-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"time-period-button\",\n    onClick: () => handleTimePeriodChange(\"1D\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"1D\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"time-period-button\",\n    onClick: () => handleTimePeriodChange(\"1W\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"1W\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"time-period-button\",\n    onClick: () => handleTimePeriodChange(\"1M\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"1M\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"time-period-button\",\n    onClick: () => handleTimePeriodChange(\"3M\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"3M\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"time-period-button\",\n    onClick: () => handleTimePeriodChange(\"YTD\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"YTD\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"time-period-button\",\n    onClick: () => handleTimePeriodChange(\"1Y\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"1Y\")));\n};\nexport default AccountGraph;","map":{"version":3,"names":["React","useEffect","useRef","useState","AccountGraph","trades","onTimePeriodChange","chartRef","timePeriod","setTimePeriod","renderChart","console","log","handleTimePeriodChange","period","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/AccountGraph.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./styles/accountGraph.css\";\r\n\r\nconst AccountGraph = ({ trades, onTimePeriodChange }) => {\r\n  const chartRef = useRef(null);\r\n  const [timePeriod, setTimePeriod] = useState(\"1D\");\r\n\r\n  useEffect(() => {\r\n    const renderChart = () => {\r\n      // Implement logic to render the chart based on selected time period\r\n      console.log(\"Rendering chart for\", timePeriod);\r\n    };\r\n\r\n    // Call renderChart when component mounts or when trades or time period change\r\n    renderChart();\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      // Implement any cleanup if necessary\r\n    };\r\n  }, [trades, timePeriod]);\r\n\r\n  const handleTimePeriodChange = (period) => {\r\n    setTimePeriod(period);\r\n    onTimePeriodChange(period); // Notify parent component about time period change\r\n  };\r\n\r\n  return (\r\n    <div className=\"account-graph\">\r\n      <canvas ref={chartRef} />\r\n      <div className=\"time-period-selector\">\r\n        <button\r\n          className=\"time-period-button\"\r\n          onClick={() => handleTimePeriodChange(\"1D\")}\r\n        >\r\n          1D\r\n        </button>\r\n        <button\r\n          className=\"time-period-button\"\r\n          onClick={() => handleTimePeriodChange(\"1W\")}\r\n        >\r\n          1W\r\n        </button>\r\n        <button\r\n          className=\"time-period-button\"\r\n          onClick={() => handleTimePeriodChange(\"1M\")}\r\n        >\r\n          1M\r\n        </button>\r\n        <button\r\n          className=\"time-period-button\"\r\n          onClick={() => handleTimePeriodChange(\"3M\")}\r\n        >\r\n          3M\r\n        </button>\r\n        <button\r\n          className=\"time-period-button\"\r\n          onClick={() => handleTimePeriodChange(\"YTD\")}\r\n        >\r\n          YTD\r\n        </button>\r\n        <button\r\n          className=\"time-period-button\"\r\n          onClick={() => handleTimePeriodChange(\"1Y\")}\r\n        >\r\n          1Y\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountGraph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}