{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\Calender.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { formatCash } from \"../func/functions\";\nconst Calender = () => {\n  const [dailyPNLData, setDailyPNLData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [modalDetails, setModalDetails] = useState(null);\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        setDailyPNLData(data);\n      } catch (error) {\n        setError(\"Error fetching Daily PNL data\");\n        console.error(\"Error fetching Daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  const aggregateByMonth = () => {\n    const monthlyData = {};\n    dailyPNLData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n    dailyPNLData.forEach(entry => {\n      const date = new Date(entry.entry_date);\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n      if (!monthlyData[monthKey]) {\n        monthlyData[monthKey] = {\n          initial_open_cash: entry.open_cash,\n          final_close_cash: entry.close_cash,\n          balance: parseFloat(entry.balance),\n          roi: 0,\n          entries: []\n        };\n      } else {\n        monthlyData[monthKey].balance += parseFloat(entry.balance);\n        monthlyData[monthKey].final_close_cash = entry.close_cash;\n      }\n      monthlyData[monthKey].entries.push(entry);\n    });\n    Object.keys(monthlyData).forEach(monthKey => {\n      const monthData = monthlyData[monthKey];\n      const {\n        entries\n      } = monthData;\n      if (entries.length > 0) {\n        monthData.initial_open_cash = entries[0].open_cash;\n        monthData.final_close_cash = entries[entries.length - 1].close_cash;\n      } else {\n        console.log(\"No data\");\n      }\n      monthData.roi = ((parseFloat(monthData.final_close_cash) - parseFloat(monthData.initial_open_cash)) / parseFloat(monthData.initial_open_cash) * 100).toFixed(2);\n    });\n    console.log(monthlyData);\n    return monthlyData;\n  };\n  const aggregateByYear = () => {\n    const yearlyData = {};\n    dailyPNLData.forEach(entry => {\n      const date = new Date(entry.entry_date);\n      const yearKey = date.getFullYear();\n      if (!yearlyData[yearKey]) {\n        yearlyData[yearKey] = {\n          initial_open_cash: entry.open_cash,\n          final_close_cash: entry.close_cash,\n          balance: parseFloat(entry.balance),\n          roi: 0,\n          entries: []\n        };\n      } else {\n        yearlyData[yearKey].balance += parseFloat(entry.balance);\n        yearlyData[yearKey].final_close_cash = entry.close_cash;\n      }\n      yearlyData[yearKey].entries.push(entry);\n    });\n    Object.keys(yearlyData).forEach(yearKey => {\n      const yearData = yearlyData[yearKey];\n      const {\n        entries\n      } = yearData;\n      if (entries.length > 0) {\n        yearData.initial_open_cash = entries[0].open_cash;\n        yearData.final_close_cash = entries[entries.length - 1].close_cash;\n      }\n      yearData.roi = ((parseFloat(yearData.final_close_cash) - parseFloat(yearData.initial_open_cash)) / parseFloat(yearData.initial_open_cash) * 100).toFixed(2);\n    });\n    return yearlyData;\n  };\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    const formattedDate = date.toISOString().split(\"T\")[0];\n    if (view === \"month\") {\n      const pnlEntry = dailyPNLData.find(pnl => pnl.entry_date === formattedDate);\n      if (pnlEntry) {\n        const icon = parseFloat(pnlEntry.open_cash) <= parseFloat(pnlEntry.close_cash) ? /*#__PURE__*/React.createElement(FaArrowUp, {\n          style: {\n            color: \"#4caf50\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }\n        }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pnl-tile\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }, icon), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }\n        }, formatCash(pnlEntry.balance)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }\n        }, pnlEntry.roi, \"%\"));\n      }\n    } else if (view === \"year\") {\n      const monthlyData = aggregateByMonth();\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n      const monthlyEntry = monthlyData[monthKey];\n      if (monthlyEntry) {\n        const icon = parseFloat(monthlyEntry.final_close_cash) > parseFloat(monthlyEntry.initial_open_cash) ? /*#__PURE__*/React.createElement(FaArrowUp, {\n          style: {\n            color: \"#4caf50\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }\n        }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pnl-tile\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }\n        }, icon), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }\n        }, formatCash(monthlyEntry.balance)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }\n        }, monthlyEntry.roi, \"%\"));\n      }\n    } else if (view === \"decade\") {\n      const yearlyData = aggregateByYear();\n      const yearKey = date.getFullYear();\n      const yearlyEntry = yearlyData[yearKey];\n      if (yearlyEntry) {\n        const icon = parseFloat(yearlyEntry.final_close_cash) > parseFloat(yearlyEntry.initial_open_cash) ? /*#__PURE__*/React.createElement(FaArrowUp, {\n          style: {\n            color: \"#4caf50\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }\n        }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pnl-tile\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }\n        }, icon), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }\n        }, formatCash(yearlyEntry.balance)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }\n        }, yearlyEntry.roi, \"%\"));\n      }\n    }\n    return null;\n  };\n  const handleTileClick = (date, view) => {\n    let modalDetails = null;\n    if (view === \"month\") {\n      const formattedDate = date.toISOString().split(\"T\")[0];\n      const pnlEntry = dailyPNLData.find(pnl => pnl.entry_date === formattedDate);\n      if (pnlEntry) {\n        const formattedDateForDisplay = `${date.getMonth() + 1}/${date.getDate()}`;\n        modalDetails = {\n          date: formattedDateForDisplay,\n          ...pnlEntry\n        };\n      }\n    } else if (view === \"year\") {\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n      const monthlyData = aggregateByMonth();\n      const monthlyEntry = monthlyData[monthKey];\n      if (monthlyEntry) {\n        modalDetails = {\n          date: monthKey,\n          ...monthlyEntry\n        };\n      }\n    } else if (view === \"decade\") {\n      const yearKey = date.getFullYear();\n      const yearlyData = aggregateByYear();\n      const yearlyEntry = yearlyData[yearKey];\n      if (yearlyEntry) {\n        modalDetails = {\n          date: yearKey,\n          ...yearlyEntry\n        };\n      }\n    }\n    if (modalDetails) {\n      setModalDetails(modalDetails);\n    }\n  };\n  const handleCloseModal = () => {\n    setModalDetails(null);\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    onChange: setSelectedDate,\n    value: selectedDate,\n    tileContent: tileContent,\n    onClickDay: date => handleTileClick(date, \"month\"),\n    onActiveStartDateChange: ({\n      activeStartDate,\n      view\n    }) => handleTileClick(activeStartDate, view),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }), modalDetails && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, modalDetails.date), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, \"Cash\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, \"Open:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, formatCash(modalDetails.open_cash))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"Close:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, formatCash(modalDetails.close_cash))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"hrs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, \"Balance:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, formatCash(modalDetails.balance))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, \"RoI:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, modalDetails.roi, \"%\")))))\n  // <div className=\"modal-container\">\n  //   <div className=\"modal-content\">\n  //     <div className=\"modal-header\">\n  //       <h2>{modalDetails.date}</h2>\n  //       <button className=\"close-button\" onClick={handleCloseModal}>\n  //         &times;\n  //       </button>\n  //     </div>\n  //     <div className=\"modal-body\">\n  //       <p>\n  //         <strong>Balance:</strong> {formatCash(modalDetails.balance)}\n  //       </p>\n  //       <p>\n  //         <strong>RoI:</strong> {modalDetails.roi}%\n  //       </p>\n  //       <p>\n  //         <strong>Close Cash:</strong>{\" \"}\n  //         {formatCash(modalDetails.close_cash)}\n  //       </p>\n  //       <p>\n  //         <strong>Open Cash:</strong> {formatCash(modalDetails.open_cash)}\n  //       </p>\n  //     </div>\n  //   </div>\n  // </div>\n  , dailyPNLData.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 37\n    }\n  }, \"No P/L\"));\n};\nexport default Calender;","map":{"version":3,"names":["React","useState","useEffect","Calendar","FaArrowUp","FaArrowDown","fetchDailyPnls","formatCash","Calender","dailyPNLData","setDailyPNLData","loading","setLoading","error","setError","selectedDate","setSelectedDate","Date","modalDetails","setModalDetails","fetchDailyPNLData","data","console","aggregateByMonth","monthlyData","sort","a","b","entry_date","forEach","entry","date","monthKey","getFullYear","getMonth","initial_open_cash","open_cash","final_close_cash","close_cash","balance","parseFloat","roi","entries","push","Object","keys","monthData","length","log","toFixed","aggregateByYear","yearlyData","yearKey","yearData","tileContent","view","formattedDate","toISOString","split","pnlEntry","find","pnl","icon","createElement","style","color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","monthlyEntry","yearlyEntry","handleTileClick","formattedDateForDisplay","getDate","handleCloseModal","onChange","value","onClickDay","onActiveStartDateChange","activeStartDate","onClick"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/Calender.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { formatCash } from \"../func/functions\";\r\n\r\nconst Calender = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [modalDetails, setModalDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n      } catch (error) {\r\n        setError(\"Error fetching Daily PNL data\");\r\n        console.error(\"Error fetching Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  const aggregateByMonth = () => {\r\n    const monthlyData = {};\r\n\r\n    dailyPNLData.sort(\r\n      (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n    );\r\n\r\n    dailyPNLData.forEach((entry) => {\r\n      const date = new Date(entry.entry_date);\r\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\r\n      if (!monthlyData[monthKey]) {\r\n        monthlyData[monthKey] = {\r\n          initial_open_cash: entry.open_cash,\r\n          final_close_cash: entry.close_cash,\r\n          balance: parseFloat(entry.balance),\r\n          roi: 0,\r\n          entries: [],\r\n        };\r\n      } else {\r\n        monthlyData[monthKey].balance += parseFloat(entry.balance);\r\n        monthlyData[monthKey].final_close_cash = entry.close_cash;\r\n      }\r\n      monthlyData[monthKey].entries.push(entry);\r\n    });\r\n    Object.keys(monthlyData).forEach((monthKey) => {\r\n      const monthData = monthlyData[monthKey];\r\n      const { entries } = monthData;\r\n      if (entries.length > 0) {\r\n        monthData.initial_open_cash = entries[0].open_cash;\r\n        monthData.final_close_cash = entries[entries.length - 1].close_cash;\r\n      } else {\r\n        console.log(\"No data\");\r\n      }\r\n      monthData.roi = (\r\n        ((parseFloat(monthData.final_close_cash) -\r\n          parseFloat(monthData.initial_open_cash)) /\r\n          parseFloat(monthData.initial_open_cash)) *\r\n        100\r\n      ).toFixed(2);\r\n    });\r\n    console.log(monthlyData);\r\n    return monthlyData;\r\n  };\r\n\r\n  const aggregateByYear = () => {\r\n    const yearlyData = {};\r\n\r\n    dailyPNLData.forEach((entry) => {\r\n      const date = new Date(entry.entry_date);\r\n      const yearKey = date.getFullYear();\r\n\r\n      if (!yearlyData[yearKey]) {\r\n        yearlyData[yearKey] = {\r\n          initial_open_cash: entry.open_cash,\r\n          final_close_cash: entry.close_cash,\r\n          balance: parseFloat(entry.balance),\r\n          roi: 0,\r\n          entries: [],\r\n        };\r\n      } else {\r\n        yearlyData[yearKey].balance += parseFloat(entry.balance);\r\n        yearlyData[yearKey].final_close_cash = entry.close_cash;\r\n      }\r\n      yearlyData[yearKey].entries.push(entry);\r\n    });\r\n\r\n    Object.keys(yearlyData).forEach((yearKey) => {\r\n      const yearData = yearlyData[yearKey];\r\n      const { entries } = yearData;\r\n\r\n      if (entries.length > 0) {\r\n        yearData.initial_open_cash = entries[0].open_cash;\r\n        yearData.final_close_cash = entries[entries.length - 1].close_cash;\r\n      }\r\n      yearData.roi = (\r\n        ((parseFloat(yearData.final_close_cash) -\r\n          parseFloat(yearData.initial_open_cash)) /\r\n          parseFloat(yearData.initial_open_cash)) *\r\n        100\r\n      ).toFixed(2);\r\n    });\r\n    return yearlyData;\r\n  };\r\n\r\n  const tileContent = ({ date, view }) => {\r\n    const formattedDate = date.toISOString().split(\"T\")[0];\r\n\r\n    if (view === \"month\") {\r\n      const pnlEntry = dailyPNLData.find(\r\n        (pnl) => pnl.entry_date === formattedDate\r\n      );\r\n\r\n      if (pnlEntry) {\r\n        const icon =\r\n          parseFloat(pnlEntry.open_cash) <= parseFloat(pnlEntry.close_cash) ? (\r\n            <FaArrowUp style={{ color: \"#4caf50\" }} />\r\n          ) : (\r\n            <FaArrowDown style={{ color: \"red\" }} />\r\n          );\r\n\r\n        return (\r\n          <div className=\"pnl-tile\">\r\n            <div>{icon}</div>\r\n            <div>{formatCash(pnlEntry.balance)}</div>\r\n            <div>{pnlEntry.roi}%</div>\r\n          </div>\r\n        );\r\n      }\r\n    } else if (view === \"year\") {\r\n      const monthlyData = aggregateByMonth();\r\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\r\n      const monthlyEntry = monthlyData[monthKey];\r\n\r\n      if (monthlyEntry) {\r\n        const icon =\r\n          parseFloat(monthlyEntry.final_close_cash) >\r\n          parseFloat(monthlyEntry.initial_open_cash) ? (\r\n            <FaArrowUp style={{ color: \"#4caf50\" }} />\r\n          ) : (\r\n            <FaArrowDown style={{ color: \"red\" }} />\r\n          );\r\n\r\n        return (\r\n          <div className=\"pnl-tile\">\r\n            <div>{icon}</div>\r\n            <div>{formatCash(monthlyEntry.balance)}</div>\r\n            <div>{monthlyEntry.roi}%</div>\r\n          </div>\r\n        );\r\n      }\r\n    } else if (view === \"decade\") {\r\n      const yearlyData = aggregateByYear();\r\n      const yearKey = date.getFullYear();\r\n      const yearlyEntry = yearlyData[yearKey];\r\n\r\n      if (yearlyEntry) {\r\n        const icon =\r\n          parseFloat(yearlyEntry.final_close_cash) >\r\n          parseFloat(yearlyEntry.initial_open_cash) ? (\r\n            <FaArrowUp style={{ color: \"#4caf50\" }} />\r\n          ) : (\r\n            <FaArrowDown style={{ color: \"red\" }} />\r\n          );\r\n\r\n        return (\r\n          <div className=\"pnl-tile\">\r\n            <div>{icon}</div>\r\n            <div>{formatCash(yearlyEntry.balance)}</div>\r\n            <div>{yearlyEntry.roi}%</div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n  const handleTileClick = (date, view) => {\r\n    let modalDetails = null;\r\n\r\n    if (view === \"month\") {\r\n      const formattedDate = date.toISOString().split(\"T\")[0];\r\n      const pnlEntry = dailyPNLData.find(\r\n        (pnl) => pnl.entry_date === formattedDate\r\n      );\r\n\r\n      if (pnlEntry) {\r\n        const formattedDateForDisplay = `${\r\n          date.getMonth() + 1\r\n        }/${date.getDate()}`;\r\n        modalDetails = { date: formattedDateForDisplay, ...pnlEntry };\r\n      }\r\n    } else if (view === \"year\") {\r\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\r\n      const monthlyData = aggregateByMonth();\r\n      const monthlyEntry = monthlyData[monthKey];\r\n\r\n      if (monthlyEntry) {\r\n        modalDetails = { date: monthKey, ...monthlyEntry };\r\n      }\r\n    } else if (view === \"decade\") {\r\n      const yearKey = date.getFullYear();\r\n      const yearlyData = aggregateByYear();\r\n      const yearlyEntry = yearlyData[yearKey];\r\n\r\n      if (yearlyEntry) {\r\n        modalDetails = { date: yearKey, ...yearlyEntry };\r\n      }\r\n    }\r\n\r\n    if (modalDetails) {\r\n      setModalDetails(modalDetails);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalDetails(null);\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <Calendar\r\n        onChange={setSelectedDate}\r\n        value={selectedDate}\r\n        tileContent={tileContent}\r\n        onClickDay={(date) => handleTileClick(date, \"month\")}\r\n        onActiveStartDateChange={({ activeStartDate, view }) =>\r\n          handleTileClick(activeStartDate, view)\r\n        }\r\n      />\r\n      {modalDetails && (\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h2>{modalDetails.date}</h2>\r\n              <button className=\"close-button\" onClick={handleCloseModal}>\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"cash-title\">Cash</div>\r\n              <hr />\r\n              <div className=\"modal-row\">\r\n                <span className=\"label\">Open:</span>\r\n                <span className=\"separator\"></span>\r\n                <span className=\"value\">\r\n                  {formatCash(modalDetails.open_cash)}\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-row\">\r\n                <span className=\"label\">Close:</span>\r\n                <span className=\"separator\"></span>\r\n                <span className=\"value\">\r\n                  {formatCash(modalDetails.close_cash)}\r\n                </span>\r\n              </div>\r\n              <span className=\"hrs\">\r\n                <hr />\r\n              </span>\r\n\r\n              <div className=\"modal-row\">\r\n                <span className=\"label\">Balance:</span>\r\n                <span className=\"separator\"></span>\r\n                <span className=\"value\">\r\n                  {formatCash(modalDetails.balance)}\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-row\">\r\n                <span className=\"label\">RoI:</span>\r\n                <span className=\"separator\"></span>\r\n                <span className=\"value\">{modalDetails.roi}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        // <div className=\"modal-container\">\r\n        //   <div className=\"modal-content\">\r\n        //     <div className=\"modal-header\">\r\n        //       <h2>{modalDetails.date}</h2>\r\n        //       <button className=\"close-button\" onClick={handleCloseModal}>\r\n        //         &times;\r\n        //       </button>\r\n        //     </div>\r\n        //     <div className=\"modal-body\">\r\n        //       <p>\r\n        //         <strong>Balance:</strong> {formatCash(modalDetails.balance)}\r\n        //       </p>\r\n        //       <p>\r\n        //         <strong>RoI:</strong> {modalDetails.roi}%\r\n        //       </p>\r\n        //       <p>\r\n        //         <strong>Close Cash:</strong>{\" \"}\r\n        //         {formatCash(modalDetails.close_cash)}\r\n        //       </p>\r\n        //       <p>\r\n        //         <strong>Open Cash:</strong> {formatCash(modalDetails.open_cash)}\r\n        //       </p>\r\n        //     </div>\r\n        //   </div>\r\n        // </div>\r\n      )}\r\n      {dailyPNLData.length === 0 && <p>No P/L</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}