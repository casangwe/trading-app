{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Trade.js\";\n// Trades.js\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTrades } from \"./ApiCalls\"; // Import the fetchTrades function\nimport { successModal, unsuccessModal } from \"./Utility\";\nconst Trade = ({\n  onAdd,\n  updateCurrentCash,\n  newCurrentCashValue\n}) => {\n  const [trades, setTrades] = useState([]); // eslint-disable-next-line\n  const [error, setError] = useState(null); // eslint-disable-next-line\n  const [showModal, setShowModal] = useState(false);\n  const [selectedTrade, setSelectedTrade] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [formData, setFormData] = useState({\n    symbol: \"\",\n    option_type: \"\",\n    strike_price: \"\",\n    exp_date: \"\",\n    entry_price: \"\",\n    exit_price: \"\",\n    contracts: \"\",\n    entry_date: \"\",\n    close_date: \"\"\n    // profit_loss: \"\",\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const fetchTradesData = async () => {\n    try {\n      const tradesData = await fetchTrades();\n      setTrades(tradesData);\n      successModal();\n    } catch (error) {\n      setError(error.message);\n      unsuccessModal(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchTradesData();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const exitPrice = formData.exit_price === \"\" || formData.exit_price === null ? 0 : formData.exit_price;\n      const response = await fetch(\"http://localhost:8000/trades\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...formData,\n          exit_price: exitPrice\n        }) // Send exit_price as 0 if empty\n      });\n      console.log(formData);\n      if (!response.ok) {\n        throw new Error(\"Failed to add Trade\");\n      }\n      successModal();\n      setShowModal(false);\n      setFormData({\n        symbol: \"\",\n        option_type: \"\",\n        strike_price: \"\",\n        exp_date: \"\",\n        entry_price: \"\",\n        exit_price: \"\",\n        contracts: \"\",\n        entry_date: \"\",\n        close_date: \"\"\n      });\n      fetchTradesData();\n    } catch (error) {\n      console.error(\"Error adding Trade:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Trades\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa-solid fa-plus\",\n    id: \"new-btn\",\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Options\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Trade Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Settle Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Principle\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"QTY\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Exit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Net Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"P/L\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, trades.map(trade => /*#__PURE__*/React.createElement(\"tr\", {\n    key: trade.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, trade.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, trade.symbol, \" \", trade.optionType, \" $\", trade.strikePrice, \" \", trade.expDate.split(\"-\").slice(1).join(\"/\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, trade.entryDate.split(\"-\").slice(1).join(\"/\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, trade.closeDate.split(\"-\").slice(1).join(\"/\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"$\", trade.entryPrice.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"$\", (trade.entryPrice * trade.contracts * 100).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, trade.contracts), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"$\", trade.exitPrice), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, trade.exitPrice && trade.contracts ? `$${(trade.exitPrice * trade.contracts * 100).toFixed(2)}` : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, trade.profitLoss && trade.contracts ? `$${(trade.profitLoss * trade.contracts * 100).toFixed(2)}` : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, trade.profitLoss ? `${((trade.exitPrice - trade.entryPrice) / trade.entryPrice * 100).toFixed(2)}%` : \"\"))))), showModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"Trade\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"new-trade-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Symbol:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"symbol\",\n    value: formData.symbol,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"option_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"Option Type:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"option_type\",\n    value: formData.option_type,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"strike_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"Strike Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"strike_price\",\n    value: formData.strike_price,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exp_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Exp. Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"exp_date\",\n    value: formData.exp_date,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"entry_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Entry Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"entry_price\",\n    value: formData.entry_price,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exit_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Exit Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"exit_price\",\n    value: formData.exit_price,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, \"Contracts:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"contracts\",\n    value: formData.contracts,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"entry_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"Entry Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"entry_date\",\n    value: formData.entry_date,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"close_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, \"Close Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"close_date\",\n    value: formData.close_date,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, \"Add Trade\")))));\n};\nexport default Trade;\n\n// import React, { useState, useEffect } from \"react\";\n// import { successModal, unsuccessModal } from \"./Utility\";\n\n// const Trade = ({ onAdd, updateCurrentCash, newCurrentCashValue }) => {\n//   const [trades, setTrades] = useState([]); // eslint-disable-next-line\n//   const [error, setError] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n//   const [formData, setFormData] = useState({\n//     symbol: \"\",\n//     option_type: \"\",\n//     strike_price: \"\",\n//     exp_date: \"\",\n//     entry_price: \"\",\n//     exit_price: \"\",\n//     contracts: \"\",\n//     entry_date: \"\",\n//     close_date: \"\",\n//     // profit_loss: \"\",\n//   });\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const fetchTrades = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8000/trades\");\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch trades data\");\n//       }\n//       const data = await response.json();\n//       console.log(data);\n//       setTrades(data.trades);\n//       successModal();\n//     } catch (error) {\n//       setError(error.message);\n//       unsuccessModal(error.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchTrades();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const exitPrice =\n//         formData.exit_price === \"\" || formData.exit_price === null\n//           ? 0\n//           : formData.exit_price;\n\n//       const response = await fetch(\"http://localhost:8000/trades\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ ...formData, exit_price: exitPrice }), // Send exit_price as 0 if empty\n//       });\n//       console.log(formData);\n//       if (!response.ok) {\n//         throw new Error(\"Failed to add Trade\");\n//       }\n//       successModal();\n//       setShowModal(false);\n//       setFormData({\n//         symbol: \"\",\n//         option_type: \"\",\n//         strike_price: \"\",\n//         exp_date: \"\",\n//         entry_price: \"\",\n//         exit_price: \"\",\n//         contracts: \"\",\n//         entry_date: \"\",\n//         close_date: \"\",\n//       });\n//       fetchTrades();\n//       // // Call the onAdd function to update the trades list\n//       // const data = await response.json();\n//       // onAdd(data);\n//     } catch (error) {\n//       console.error(\"Error adding Trade:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"trade\">\n//       <div className=\"header\">\n//         <p className=\"\">Trades</p>\n//         <i\n//           className=\"fa-solid fa-plus\"\n//           id=\"new-btn\"\n//           onClick={() => setShowModal(true)}\n//         ></i>\n//       </div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Options</th>\n//             <th>Trade Date</th>\n//             <th>Settle Date</th>\n//             <th>Price</th>\n//             <th>Principle</th>\n//             <th>QTY</th>\n//             <th>Exit</th>\n//             <th>Net Amount</th>\n//             <th>P/L</th>\n//             <th>%</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {trades.map((trade) => (\n//             <tr key={trade[0]}>\n//               <td>{trade[0]}</td> {/* Trade ID */}\n//               <td>\n//                 {trade[1]} {trade[2]} ${trade[3]}{\" \"}\n//                 {trade[4].split(\"-\").slice(1).join(\"/\")}\n//               </td>\n//               {/* Symbol, Option Type, Strike Price */}\n//               <td>{trade[8].split(\"-\").slice(1).join(\"/\")}</td>\n//               {/* Trade Date */}\n//               <td>{trade[9].split(\"-\").slice(1).join(\"/\")}</td>\n//               {/* Settle Date */}\n//               <td>${trade[5]}</td> {/* Price */}\n//               <td>${(trade[5] * trade[7] * 100).toFixed(2)}</td>\n//               {/* Principle */}\n//               <td>{trade[7]}</td> {/* QTY */}\n//               <td>${trade[6]}</td> {/* Exit */}\n//               <td>\n//                 {trade[6] && trade[7]\n//                   ? `$${(trade[6] * trade[7] * 100).toFixed(2)}`\n//                   : \"\"}\n//               </td>{\" \"}\n//               {/* Net Amount */}\n//               <td>\n//                 {trade[10] && trade[7]\n//                   ? `$${(trade[10] * trade[7] * 100).toFixed(2)}`\n//                   : \"\"}\n//               </td>{\" \"}\n//               {/* P/L */}\n//               <td>\n//                 {trade[10]\n//                   ? `${(((trade[6] - trade[5]) / trade[5]) * 100).toFixed(2)}%`\n//                   : \"\"}\n//               </td>{\" \"}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n// {showModal && (\n//   <div className=\"form-modal\">\n//     <div className=\"form-modal-content\">\n//       <div className=\"header\">\n//         {\" \"}\n//         <span className=\"close\" onClick={() => setShowModal(false)}>\n//           &times;\n//         </span>\n//         <div>Trade</div>\n//       </div>\n\n//       <form className=\"new-trade-form\" onSubmit={handleSubmit}>\n//         <label htmlFor=\"symbol\">Symbol:</label>\n//         <input\n//           type=\"text\"\n//           name=\"symbol\"\n//           value={formData.symbol}\n//           onChange={handleChange}\n//         />\n\n//         <label htmlFor=\"option_type\">Option Type:</label>\n//         <input\n//           type=\"text\"\n//           name=\"option_type\"\n//           value={formData.option_type}\n//           onChange={handleChange}\n//         />\n\n//         <label htmlFor=\"strike_price\">Strike Price:</label>\n//         <input\n//           type=\"number\"\n//           name=\"strike_price\"\n//           value={formData.strike_price}\n//           onChange={handleChange}\n//         />\n\n//         <label htmlFor=\"exp_date\">Exp. Date:</label>\n//         <input\n//           type=\"date\"\n//           name=\"exp_date\"\n//           value={formData.exp_date}\n//           onChange={handleChange}\n//         />\n\n//         <label htmlFor=\"entry_price\">Entry Price:</label>\n//         <input\n//           type=\"number\"\n//           name=\"entry_price\"\n//           value={formData.entry_price}\n//           onChange={handleChange}\n//         />\n\n//         <label htmlFor=\"exit_price\">Exit Price:</label>\n//         <input\n//           type=\"number\"\n//           name=\"exit_price\"\n//           value={formData.exit_price}\n//           onChange={handleChange}\n//         />\n\n//         <label htmlFor=\"contracts\">Contracts:</label>\n//         <input\n//           type=\"number\"\n//           name=\"contracts\"\n//           value={formData.contracts}\n//           onChange={handleChange}\n//         />\n\n//         <label htmlFor=\"entry_date\">Entry Date:</label>\n//         <input\n//           type=\"date\"\n//           name=\"entry_date\"\n//           value={formData.entry_date}\n//           onChange={handleChange}\n//         />\n\n//         <label htmlFor=\"close_date\">Close Date:</label>\n//         <input\n//           type=\"date\"\n//           name=\"close_date\"\n//           value={formData.close_date}\n//           onChange={handleChange}\n//         />\n\n//         <button type=\"submit\">Add Trade</button>\n//       </form>\n//     </div>\n//   </div>\n// )}\n//     </div>\n//   );\n// };\n\n// export default Trade;","map":{"version":3,"names":["React","useState","useEffect","fetchTrades","successModal","unsuccessModal","Trade","onAdd","updateCurrentCash","newCurrentCashValue","trades","setTrades","error","setError","showModal","setShowModal","selectedTrade","setSelectedTrade","showEditModal","setShowEditModal","formData","setFormData","symbol","option_type","strike_price","exp_date","entry_price","exit_price","contracts","entry_date","close_date","handleChange","e","target","name","value","fetchTradesData","tradesData","message","handleSubmit","preventDefault","exitPrice","response","fetch","method","headers","body","JSON","stringify","console","log","ok","Error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","map","trade","key","optionType","strikePrice","expDate","split","slice","join","entryDate","closeDate","entryPrice","toFixed","profitLoss","onSubmit","htmlFor","type","onChange"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Trade.js"],"sourcesContent":["// Trades.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { fetchTrades } from \"./ApiCalls\"; // Import the fetchTrades function\r\nimport { successModal, unsuccessModal } from \"./Utility\";\r\n\r\nconst Trade = ({ onAdd, updateCurrentCash, newCurrentCashValue }) => {\r\n  const [trades, setTrades] = useState([]); // eslint-disable-next-line\r\n  const [error, setError] = useState(null); // eslint-disable-next-line\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedTrade, setSelectedTrade] = useState(null);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    symbol: \"\",\r\n    option_type: \"\",\r\n    strike_price: \"\",\r\n    exp_date: \"\",\r\n    entry_price: \"\",\r\n    exit_price: \"\",\r\n    contracts: \"\",\r\n    entry_date: \"\",\r\n    close_date: \"\",\r\n    // profit_loss: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const fetchTradesData = async () => {\r\n    try {\r\n      const tradesData = await fetchTrades();\r\n      setTrades(tradesData);\r\n      successModal();\r\n    } catch (error) {\r\n      setError(error.message);\r\n      unsuccessModal(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTradesData();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const exitPrice =\r\n        formData.exit_price === \"\" || formData.exit_price === null\r\n          ? 0\r\n          : formData.exit_price;\r\n\r\n      const response = await fetch(\"http://localhost:8000/trades\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...formData, exit_price: exitPrice }), // Send exit_price as 0 if empty\r\n      });\r\n      console.log(formData);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to add Trade\");\r\n      }\r\n      successModal();\r\n      setShowModal(false);\r\n      setFormData({\r\n        symbol: \"\",\r\n        option_type: \"\",\r\n        strike_price: \"\",\r\n        exp_date: \"\",\r\n        entry_price: \"\",\r\n        exit_price: \"\",\r\n        contracts: \"\",\r\n        entry_date: \"\",\r\n        close_date: \"\",\r\n      });\r\n      fetchTradesData();\r\n    } catch (error) {\r\n      console.error(\"Error adding Trade:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"trade\">\r\n      <div className=\"header\">\r\n        <p className=\"\">Trades</p>\r\n        <i\r\n          className=\"fa-solid fa-plus\"\r\n          id=\"new-btn\"\r\n          onClick={() => setShowModal(true)}\r\n        ></i>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Options</th>\r\n            <th>Trade Date</th>\r\n            <th>Settle Date</th>\r\n            <th>Price</th>\r\n            <th>Principle</th>\r\n            <th>QTY</th>\r\n            <th>Exit</th>\r\n            <th>Net Amount</th>\r\n            <th>P/L</th>\r\n            <th>%</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {trades.map((trade) => (\r\n            <tr key={trade.id}>\r\n              <td>{trade.id}</td>\r\n              <td>\r\n                {trade.symbol} {trade.optionType} ${trade.strikePrice}{\" \"}\r\n                {trade.expDate.split(\"-\").slice(1).join(\"/\")}\r\n              </td>\r\n              <td>{trade.entryDate.split(\"-\").slice(1).join(\"/\")}</td>\r\n              <td>{trade.closeDate.split(\"-\").slice(1).join(\"/\")}</td>\r\n              <td>${trade.entryPrice.toFixed(2)}</td>\r\n              <td>${(trade.entryPrice * trade.contracts * 100).toFixed(2)}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>${trade.exitPrice}</td>\r\n              <td>\r\n                {trade.exitPrice && trade.contracts\r\n                  ? `$${(trade.exitPrice * trade.contracts * 100).toFixed(2)}`\r\n                  : \"\"}\r\n              </td>\r\n              <td>\r\n                {trade.profitLoss && trade.contracts\r\n                  ? `$${(trade.profitLoss * trade.contracts * 100).toFixed(2)}`\r\n                  : \"\"}\r\n              </td>\r\n              <td>\r\n                {trade.profitLoss\r\n                  ? `${(\r\n                      ((trade.exitPrice - trade.entryPrice) /\r\n                        trade.entryPrice) *\r\n                      100\r\n                    ).toFixed(2)}%`\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {showModal && (\r\n        <div className=\"form-modal\">\r\n          <div className=\"form-modal-content\">\r\n            <div className=\"header\">\r\n              {\" \"}\r\n              <span className=\"close\" onClick={() => setShowModal(false)}>\r\n                &times;\r\n              </span>\r\n              <div>Trade</div>\r\n            </div>\r\n\r\n            <form className=\"new-trade-form\" onSubmit={handleSubmit}>\r\n              <label htmlFor=\"symbol\">Symbol:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"symbol\"\r\n                value={formData.symbol}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"option_type\">Option Type:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"option_type\"\r\n                value={formData.option_type}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"strike_price\">Strike Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"strike_price\"\r\n                value={formData.strike_price}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"exp_date\">Exp. Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"exp_date\"\r\n                value={formData.exp_date}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"entry_price\">Entry Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"entry_price\"\r\n                value={formData.entry_price}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"exit_price\">Exit Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"exit_price\"\r\n                value={formData.exit_price}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"contracts\">Contracts:</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"contracts\"\r\n                value={formData.contracts}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"entry_date\">Entry Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"entry_date\"\r\n                value={formData.entry_date}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"close_date\">Close Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"close_date\"\r\n                value={formData.close_date}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <button type=\"submit\">Add Trade</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trade;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { successModal, unsuccessModal } from \"./Utility\";\r\n\r\n// const Trade = ({ onAdd, updateCurrentCash, newCurrentCashValue }) => {\r\n//   const [trades, setTrades] = useState([]); // eslint-disable-next-line\r\n//   const [error, setError] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [formData, setFormData] = useState({\r\n//     symbol: \"\",\r\n//     option_type: \"\",\r\n//     strike_price: \"\",\r\n//     exp_date: \"\",\r\n//     entry_price: \"\",\r\n//     exit_price: \"\",\r\n//     contracts: \"\",\r\n//     entry_date: \"\",\r\n//     close_date: \"\",\r\n//     // profit_loss: \"\",\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const fetchTrades = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8000/trades\");\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to fetch trades data\");\r\n//       }\r\n//       const data = await response.json();\r\n//       console.log(data);\r\n//       setTrades(data.trades);\r\n//       successModal();\r\n//     } catch (error) {\r\n//       setError(error.message);\r\n//       unsuccessModal(error.message);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchTrades();\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const exitPrice =\r\n//         formData.exit_price === \"\" || formData.exit_price === null\r\n//           ? 0\r\n//           : formData.exit_price;\r\n\r\n//       const response = await fetch(\"http://localhost:8000/trades\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ ...formData, exit_price: exitPrice }), // Send exit_price as 0 if empty\r\n//       });\r\n//       console.log(formData);\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to add Trade\");\r\n//       }\r\n//       successModal();\r\n//       setShowModal(false);\r\n//       setFormData({\r\n//         symbol: \"\",\r\n//         option_type: \"\",\r\n//         strike_price: \"\",\r\n//         exp_date: \"\",\r\n//         entry_price: \"\",\r\n//         exit_price: \"\",\r\n//         contracts: \"\",\r\n//         entry_date: \"\",\r\n//         close_date: \"\",\r\n//       });\r\n//       fetchTrades();\r\n//       // // Call the onAdd function to update the trades list\r\n//       // const data = await response.json();\r\n//       // onAdd(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error adding Trade:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"trade\">\r\n//       <div className=\"header\">\r\n//         <p className=\"\">Trades</p>\r\n//         <i\r\n//           className=\"fa-solid fa-plus\"\r\n//           id=\"new-btn\"\r\n//           onClick={() => setShowModal(true)}\r\n//         ></i>\r\n//       </div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Options</th>\r\n//             <th>Trade Date</th>\r\n//             <th>Settle Date</th>\r\n//             <th>Price</th>\r\n//             <th>Principle</th>\r\n//             <th>QTY</th>\r\n//             <th>Exit</th>\r\n//             <th>Net Amount</th>\r\n//             <th>P/L</th>\r\n//             <th>%</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {trades.map((trade) => (\r\n//             <tr key={trade[0]}>\r\n//               <td>{trade[0]}</td> {/* Trade ID */}\r\n//               <td>\r\n//                 {trade[1]} {trade[2]} ${trade[3]}{\" \"}\r\n//                 {trade[4].split(\"-\").slice(1).join(\"/\")}\r\n//               </td>\r\n//               {/* Symbol, Option Type, Strike Price */}\r\n//               <td>{trade[8].split(\"-\").slice(1).join(\"/\")}</td>\r\n//               {/* Trade Date */}\r\n//               <td>{trade[9].split(\"-\").slice(1).join(\"/\")}</td>\r\n//               {/* Settle Date */}\r\n//               <td>${trade[5]}</td> {/* Price */}\r\n//               <td>${(trade[5] * trade[7] * 100).toFixed(2)}</td>\r\n//               {/* Principle */}\r\n//               <td>{trade[7]}</td> {/* QTY */}\r\n//               <td>${trade[6]}</td> {/* Exit */}\r\n//               <td>\r\n//                 {trade[6] && trade[7]\r\n//                   ? `$${(trade[6] * trade[7] * 100).toFixed(2)}`\r\n//                   : \"\"}\r\n//               </td>{\" \"}\r\n//               {/* Net Amount */}\r\n//               <td>\r\n//                 {trade[10] && trade[7]\r\n//                   ? `$${(trade[10] * trade[7] * 100).toFixed(2)}`\r\n//                   : \"\"}\r\n//               </td>{\" \"}\r\n//               {/* P/L */}\r\n//               <td>\r\n//                 {trade[10]\r\n//                   ? `${(((trade[6] - trade[5]) / trade[5]) * 100).toFixed(2)}%`\r\n//                   : \"\"}\r\n//               </td>{\" \"}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n// {showModal && (\r\n//   <div className=\"form-modal\">\r\n//     <div className=\"form-modal-content\">\r\n//       <div className=\"header\">\r\n//         {\" \"}\r\n//         <span className=\"close\" onClick={() => setShowModal(false)}>\r\n//           &times;\r\n//         </span>\r\n//         <div>Trade</div>\r\n//       </div>\r\n\r\n//       <form className=\"new-trade-form\" onSubmit={handleSubmit}>\r\n//         <label htmlFor=\"symbol\">Symbol:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"symbol\"\r\n//           value={formData.symbol}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <label htmlFor=\"option_type\">Option Type:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"option_type\"\r\n//           value={formData.option_type}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <label htmlFor=\"strike_price\">Strike Price:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           name=\"strike_price\"\r\n//           value={formData.strike_price}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <label htmlFor=\"exp_date\">Exp. Date:</label>\r\n//         <input\r\n//           type=\"date\"\r\n//           name=\"exp_date\"\r\n//           value={formData.exp_date}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <label htmlFor=\"entry_price\">Entry Price:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           name=\"entry_price\"\r\n//           value={formData.entry_price}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <label htmlFor=\"exit_price\">Exit Price:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           name=\"exit_price\"\r\n//           value={formData.exit_price}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <label htmlFor=\"contracts\">Contracts:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           name=\"contracts\"\r\n//           value={formData.contracts}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <label htmlFor=\"entry_date\">Entry Date:</label>\r\n//         <input\r\n//           type=\"date\"\r\n//           name=\"entry_date\"\r\n//           value={formData.entry_date}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <label htmlFor=\"close_date\">Close Date:</label>\r\n//         <input\r\n//           type=\"date\"\r\n//           name=\"close_date\"\r\n//           value={formData.close_date}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//         <button type=\"submit\">Add Trade</button>\r\n//       </form>\r\n//     </div>\r\n//   </div>\r\n// )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Trade;\r\n"],"mappings":"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},"metadata":{},"sourceType":"module"}