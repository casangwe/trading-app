{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\BiggestWinsLosses.js\";\nimport React, { useState } from \"react\";\nimport \"./styles/biggestWinsLosses.css\";\nimport flip from \"./assets/switch.png\";\nconst BiggestWinsLosses = ({\n  recentTrades\n}) => {\n  const [showPositive, setShowPositive] = useState(true);\n  const toggleProfitDisplay = () => {\n    setShowPositive(!showPositive);\n  };\n  const filteredTrades = recentTrades.filter(trade => {\n    if (trade.profit_loss === undefined || trade.profit_loss === \"\" || isNaN(trade.profit_loss) || isNaN(trade.contracts)) {\n      return false;\n    }\n    return showPositive ? trade.profit_loss > 0 : trade.profit_loss < 0;\n  });\n\n  // Sort trades in descending order based on profit_loss\n  filteredTrades.sort((a, b) => {\n    return showPositive ? b.profit_loss * b.contracts - a.profit_loss * a.contracts : a.profit_loss * a.contracts - b.profit_loss * b.contracts;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"winslost-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"PL\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"menu\",\n    onClick: toggleProfitDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"::\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"listed-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, filteredTrades.map((trade, index) => {\n    const isPositive = trade.profit_loss > 0;\n    const cardItemClasses = `card-item ${isPositive ? \"positive\" : \"negative\"}`;\n    const profitLoss = trade.profit_loss * trade.contracts * 100;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: cardItemClasses,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, trade.symbol), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, trade.entry_price && trade.exit_price ? `${((trade.exit_price - trade.entry_price) / trade.entry_price * 100).toFixed(2)}%` : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"$\", profitLoss.toFixed(2))));\n  }))));\n};\nexport default BiggestWinsLosses;","map":{"version":3,"names":["React","useState","flip","BiggestWinsLosses","recentTrades","showPositive","setShowPositive","toggleProfitDisplay","filteredTrades","filter","trade","profit_loss","undefined","isNaN","contracts","sort","a","b","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","isPositive","cardItemClasses","profitLoss","key","symbol","entry_price","exit_price","toFixed"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/BiggestWinsLosses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles/biggestWinsLosses.css\";\r\nimport flip from \"./assets/switch.png\";\r\n\r\nconst BiggestWinsLosses = ({ recentTrades }) => {\r\n  const [showPositive, setShowPositive] = useState(true);\r\n\r\n  const toggleProfitDisplay = () => {\r\n    setShowPositive(!showPositive);\r\n  };\r\n\r\n  const filteredTrades = recentTrades.filter((trade) => {\r\n    if (\r\n      trade.profit_loss === undefined ||\r\n      trade.profit_loss === \"\" ||\r\n      isNaN(trade.profit_loss) ||\r\n      isNaN(trade.contracts)\r\n    ) {\r\n      return false;\r\n    }\r\n    return showPositive ? trade.profit_loss > 0 : trade.profit_loss < 0;\r\n  });\r\n\r\n  // Sort trades in descending order based on profit_loss\r\n  filteredTrades.sort((a, b) => {\r\n    return showPositive\r\n      ? b.profit_loss * b.contracts - a.profit_loss * a.contracts\r\n      : a.profit_loss * a.contracts - b.profit_loss * b.contracts;\r\n  });\r\n\r\n  return (\r\n    <div className=\"winslost-container\">\r\n      <div className=\"header-card\">\r\n        <p>PL</p>\r\n        <p className=\"menu\" onClick={toggleProfitDisplay}>\r\n          ::\r\n        </p>\r\n      </div>\r\n      <div className=\"card-list\">\r\n        <ul className=\"listed-cards\">\r\n          {filteredTrades.map((trade, index) => {\r\n            const isPositive = trade.profit_loss > 0;\r\n            const cardItemClasses = `card-item ${\r\n              isPositive ? \"positive\" : \"negative\"\r\n            }`;\r\n            const profitLoss = trade.profit_loss * trade.contracts * 100;\r\n\r\n            return (\r\n              <li className={cardItemClasses} key={index}>\r\n                <div className=\"card-content\">\r\n                  <p>{trade.symbol}</p>\r\n                  <p>\r\n                    {/* Calculate and display the percentage difference */}\r\n                    {trade.entry_price && trade.exit_price\r\n                      ? `${(\r\n                          ((trade.exit_price - trade.entry_price) /\r\n                            trade.entry_price) *\r\n                          100\r\n                        ).toFixed(2)}%`\r\n                      : \"\"}\r\n                  </p>\r\n                  <p>${profitLoss.toFixed(2)}</p>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiggestWinsLosses;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gCAAgC;AACvC,OAAOC,IAAI,MAAM,qBAAqB;AAEtC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;IAChCD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMG,cAAc,GAAGJ,YAAY,CAACK,MAAM,CAAEC,KAAK,IAAK;IACpD,IACEA,KAAK,CAACC,WAAW,KAAKC,SAAS,IAC/BF,KAAK,CAACC,WAAW,KAAK,EAAE,IACxBE,KAAK,CAACH,KAAK,CAACC,WAAW,CAAC,IACxBE,KAAK,CAACH,KAAK,CAACI,SAAS,CAAC,EACtB;MACA,OAAO,KAAK;IACd;IACA,OAAOT,YAAY,GAAGK,KAAK,CAACC,WAAW,GAAG,CAAC,GAAGD,KAAK,CAACC,WAAW,GAAG,CAAC;EACrE,CAAC,CAAC;;EAEF;EACAH,cAAc,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC5B,OAAOZ,YAAY,GACfY,CAAC,CAACN,WAAW,GAAGM,CAAC,CAACH,SAAS,GAAGE,CAAC,CAACL,WAAW,GAAGK,CAAC,CAACF,SAAS,GACzDE,CAAC,CAACL,WAAW,GAAGK,CAAC,CAACF,SAAS,GAAGG,CAAC,CAACN,WAAW,GAAGM,CAAC,CAACH,SAAS;EAC/D,CAAC,CAAC;EAEF,oBACEd,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjCzB,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BzB,KAAA,CAAAkB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,IAAK,CAAC,eACTzB,KAAA,CAAAkB,aAAA;IAAGC,SAAS,EAAC,MAAM;IAACO,OAAO,EAAEnB,mBAAoB;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,IAE/C,CACA,CAAC,eACNzB,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBzB,KAAA,CAAAkB,aAAA;IAAIC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzBjB,cAAc,CAACmB,GAAG,CAAC,CAACjB,KAAK,EAAEkB,KAAK,KAAK;IACpC,MAAMC,UAAU,GAAGnB,KAAK,CAACC,WAAW,GAAG,CAAC;IACxC,MAAMmB,eAAe,GAAI,aACvBD,UAAU,GAAG,UAAU,GAAG,UAC3B,EAAC;IACF,MAAME,UAAU,GAAGrB,KAAK,CAACC,WAAW,GAAGD,KAAK,CAACI,SAAS,GAAG,GAAG;IAE5D,oBACEd,KAAA,CAAAkB,aAAA;MAAIC,SAAS,EAAEW,eAAgB;MAACE,GAAG,EAAEJ,KAAM;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACzCzB,KAAA,CAAAkB,aAAA;MAAKC,SAAS,EAAC,cAAc;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC3BzB,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAIf,KAAK,CAACuB,MAAU,CAAC,eACrBjC,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEGf,KAAK,CAACwB,WAAW,IAAIxB,KAAK,CAACyB,UAAU,GACjC,GAAE,CACA,CAACzB,KAAK,CAACyB,UAAU,GAAGzB,KAAK,CAACwB,WAAW,IACpCxB,KAAK,CAACwB,WAAW,GACnB,GAAG,EACHE,OAAO,CAAC,CAAC,CAAE,GAAE,GACf,EACH,CAAC,eACJpC,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,GAAC,EAACM,UAAU,CAACK,OAAO,CAAC,CAAC,CAAK,CAC3B,CACH,CAAC;EAET,CAAC,CACC,CACD,CACF,CAAC;AAEV,CAAC;AAED,eAAejC,iBAAiB"},"metadata":{},"sourceType":"module"}