{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Graph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nconst Graph = () => {\n  const [graphData, setGraphData] = useState({});\n  useEffect(() => {\n    fetch(\"http://localhost:8000/Graph/\").then(response => response.json()).then(data => setGraphData(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    if (Object.keys(graphData).length > 0) {\n      renderChart();\n    }\n  }, [graphData]);\n  const renderChart = () => {\n    const labels = Object.keys(graphData);\n    const data = Object.values(graphData);\n    const ctx = document.getElementById(\"myChart\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"Profit/Loss\",\n          data: data,\n          backgroundColor: data.map(value => value < 0 ? \"rgba(255, 99, 132, 0.2)\" : \"rgba(75, 192, 192, 0.2)\"),\n          borderWidth: 1,\n          barThickness: 40\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            grid: {\n              display: false // Hide vertical grid lines\n            }\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              display: false // Hide horizontal grid lines\n            }\n          }\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"myChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Graph;","map":{"version":3,"names":["React","useState","useEffect","Chart","Graph","graphData","setGraphData","fetch","then","response","json","data","catch","error","console","Object","keys","length","renderChart","labels","values","ctx","document","getElementById","type","datasets","label","backgroundColor","map","value","borderWidth","barThickness","options","scales","x","grid","display","y","beginAtZero","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Graph.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nconst Graph = () => {\r\n  const [graphData, setGraphData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/Graph/\")\r\n      .then((response) => response.json())\r\n      .then((data) => setGraphData(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(graphData).length > 0) {\r\n      renderChart();\r\n    }\r\n  }, [graphData]);\r\n\r\n  const renderChart = () => {\r\n    const labels = Object.keys(graphData);\r\n    const data = Object.values(graphData);\r\n\r\n    const ctx = document.getElementById(\"myChart\");\r\n    new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: \"Profit/Loss\",\r\n            data: data,\r\n            backgroundColor: data.map((value) =>\r\n              value < 0 ? \"rgba(255, 99, 132, 0.2)\" : \"rgba(75, 192, 192, 0.2)\"\r\n            ),\r\n            borderWidth: 1,\r\n            barThickness: 40,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          x: {\r\n            grid: {\r\n              display: false, // Hide vertical grid lines\r\n            },\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            grid: {\r\n              display: false, // Hide horizontal grid lines\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AAEjC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,YAAY,CAACK,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACd,IAAIa,MAAM,CAACC,IAAI,CAACX,SAAS,CAAC,CAACY,MAAM,GAAG,CAAC,EAAE;MACrCC,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEf,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,MAAM,GAAGJ,MAAM,CAACC,IAAI,CAACX,SAAS,CAAC;IACrC,MAAMM,IAAI,GAAGI,MAAM,CAACK,MAAM,CAACf,SAAS,CAAC;IAErC,MAAMgB,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAC9C,IAAIpB,KAAK,CAACkB,GAAG,EAAE;MACbG,IAAI,EAAE,KAAK;MACXb,IAAI,EAAE;QACJQ,MAAM,EAAEA,MAAM;QACdM,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,aAAa;UACpBf,IAAI,EAAEA,IAAI;UACVgB,eAAe,EAAEhB,IAAI,CAACiB,GAAG,CAAEC,KAAK,IAC9BA,KAAK,GAAG,CAAC,GAAG,yBAAyB,GAAG,yBAC1C,CAAC;UACDC,WAAW,EAAE,CAAC;UACdC,YAAY,EAAE;QAChB,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,IAAI,EAAE;cACJC,OAAO,EAAE,KAAK,CAAE;YAClB;UACF,CAAC;UACDC,CAAC,EAAE;YACDC,WAAW,EAAE,IAAI;YACjBH,IAAI,EAAE;cACJC,OAAO,EAAE,KAAK,CAAE;YAClB;UACF;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpC,KAAA,CAAAuC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE7C,KAAA,CAAAuC,aAAA;IAAQO,EAAE,EAAC,SAAS;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAS,CAC1B,CAAC;AAEV,CAAC;AAED,eAAezC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}