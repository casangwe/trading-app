{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\cash\\\\Cash.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaMoneyBillWave, FaChartLine, FaCashRegister, FaPercentage, FaChartPie } from \"react-icons/fa\";\nimport { getCash } from \"../api/CashApi\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\nimport { calculateInitialCash, calculateAvailableCash, calculateNetPL, calculateCashBalance, calculateROI } from \"./CashCalc\";\nimport { formatCash } from \"../func/functions\";\nconst Cash = () => {\n  const [cashData, setCashData] = useState(null);\n  const [dailyPnls, setDailyPnls] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [cashResponse, pnlResponse, transactionsResponse] = await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\n        setCashData(cashResponse);\n        setDailyPnls(pnlResponse);\n        setTransactions(transactionsResponse);\n      } catch (error) {\n        setError(\"No cash data\");\n        console.error(\"Error fetching cash data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  // Show the error message but still render the cards\n  const errorMessage = error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 32\n    }\n  }, error) : null;\n  const initialCash = cashData ? calculateInitialCash(cashData) : 0;\n  const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\n  const availableCash = transactions.length > 0 ? formatCash(calculateAvailableCash(initialCash, transactions)) : formatCash(initialCash);\n  const cashBalance = transactions.length > 0 || netPL !== 0 ? formatCash(calculateCashBalance(initialCash, netPL, transactions)) : formatCash(initialCash);\n  const roi = initialCash !== 0 && netPL !== 0 ? `${calculateROI(initialCash, netPL).toFixed(2)}%` : \"NA\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaCashRegister, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Initial Cash:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, formatCash(initialCash)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaChartPie, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Available Cash:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, availableCash))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaChartLine, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Net P/L:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, formatCash(netPL)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaMoneyBillWave, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Cash Balance:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, cashBalance))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaPercentage, {\n    className: \"card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"RoI:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, roi)))));\n};\nexport default Cash;\n\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   FaMoneyBillWave,\n//   FaChartLine,\n//   FaCashRegister,\n//   FaPercentage,\n//   FaChartPie,\n// } from \"react-icons/fa\";\n// import { getCash } from \"../api/CashApi\";\n// import { fetchDailyPnls } from \"../api/DailyPNLApi\";\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\n// import {\n//   calculateInitialCash,\n//   calculateAvailableCash,\n//   calculateNetPL,\n//   calculateCashBalance,\n//   calculateROI,\n// } from \"./CashCalc\";\n// import { formatCash } from \"../func/functions\";\n\n// const Cash = () => {\n//   const [cashData, setCashData] = useState(null);\n//   const [dailyPnls, setDailyPnls] = useState([]);\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [cashResponse, pnlResponse, transactionsResponse] =\n//           await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\n\n//         setCashData(cashResponse);\n//         setDailyPnls(pnlResponse);\n//         setTransactions(transactionsResponse);\n//       } catch (error) {\n//         setError(\"No Cash data\");\n//         console.error(\"No Cash data:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>{error}</p>;\n\n//   const initialCash = cashData ? calculateInitialCash(cashData) : 0;\n//   const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\n\n//   const availableCash =\n//     transactions.length > 0\n//       ? formatCash(calculateAvailableCash(initialCash, transactions))\n//       : formatCash(initialCash);\n\n//   const cashBalance =\n//     transactions.length > 0 || netPL !== 0\n//       ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\n//       : formatCash(initialCash); // Fallback to initial cash if no transactions\n\n//   const roi =\n//     initialCash !== 0 && netPL !== 0\n//       ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\n//       : \"NA\";\n\n//   return (\n//     <div className=\"cash-container\">\n//       <div className=\"cash-card-container\">\n//         {/* Initial Cash Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaCashRegister className=\"card-icon\" />\n//             <span className=\"label\">Initial Cash:</span>\n//             <span className=\"value\">{formatCash(initialCash)}</span>\n//           </div>\n//         </div>\n\n//         {/* Available Cash Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaChartPie className=\"card-icon\" />\n//             <span className=\"label\">Available Cash:</span>\n//             <span className=\"value\">{availableCash}</span>\n//           </div>\n//         </div>\n\n//         {/* Net P/L Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaChartLine className=\"card-icon\" />\n//             <span className=\"label\">Net P/L:</span>\n//             <span className=\"value\">{formatCash(netPL)}</span>\n//           </div>\n//         </div>\n\n//         {/* Cash Balance Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaMoneyBillWave className=\"card-icon\" />\n//             <span className=\"label\">Cash Balance:</span>\n//             <span className=\"value\">{cashBalance}</span>\n//           </div>\n//         </div>\n\n//         {/* RoI Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaPercentage className=\"card-icon\" />\n//             <span className=\"label\">RoI:</span>\n//             <span className=\"value\">{roi}</span>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cash;\n\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   FaMoneyBillWave,\n//   FaChartLine,\n//   FaCashRegister,\n//   FaPercentage,\n//   FaChartPie,\n// } from \"react-icons/fa\";\n// import { getCash } from \"../api/CashApi\";\n// import { fetchDailyPnls } from \"../api/DailyPNLApi\";\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\n// import {\n//   calculateInitialCash,\n//   calculateAvailableCash,\n//   calculateNetPL,\n//   calculateCashBalance,\n//   calculateROI,\n// } from \"./CashCalc\";\n\n// const Cash = () => {\n//   const [cashData, setCashData] = useState(null);\n//   const [dailyPnls, setDailyPnls] = useState([]);\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [cashResponse, pnlResponse, transactionsResponse] =\n//           await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\n\n//         setCashData(cashResponse);\n//         setDailyPnls(pnlResponse);\n//         setTransactions(transactionsResponse);\n//       } catch (error) {\n//         setError(\"No cash data\");\n//         console.error(\"No cash data:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>{error}</p>;\n\n//   // Use the new calculations\n//   const initialCash = cashData ? calculateInitialCash(cashData) : \"NA\";\n//   const netPL = calculateNetPL(dailyPnls);\n//   const availableCash = calculateAvailableCash(initialCash, transactions);\n//   const cashBalance = calculateCashBalance(initialCash, netPL, transactions);\n//   const roi = calculateROI(initialCash, netPL);\n\n//   return (\n//     <div className=\"cash-container\">\n//       <div className=\"cash-card-container\">\n//         {/* Initial Cash Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaCashRegister className=\"card-icon\" />\n//             <span className=\"label\">Initial Cash:</span>\n//             <span className=\"value\">{`$${initialCash.toFixed(2)}`}</span>\n//           </div>\n//         </div>\n\n//         {/* Available Cash Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaChartPie className=\"card-icon\" />\n//             <span className=\"label\">Available Cash:</span>\n//             <span className=\"value\">{`$${availableCash.toFixed(2)}`}</span>\n//           </div>\n//         </div>\n\n//         {/* Net P/L Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaChartLine className=\"card-icon\" />\n//             <span className=\"label\">Net P/L:</span>\n//             <span className=\"value\">{`$${netPL.toFixed(2)}`}</span>\n//           </div>\n//         </div>\n\n//         {/* Cash Balance Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaMoneyBillWave className=\"card-icon\" />\n//             <span className=\"label\">Cash Balance:</span>\n//             <span className=\"value\">{`$${cashBalance.toFixed(2)}`}</span>\n//           </div>\n//         </div>\n\n//         {/* RoI Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaPercentage className=\"card-icon\" />\n//             <span className=\"label\">RoI:</span>\n//             <span className=\"value\">{`${roi.toFixed(2)}%`}</span>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cash;\n\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   FaMoneyBillWave,\n//   FaChartLine,\n//   FaCashRegister,\n//   FaPercentage,\n//   FaChartPie,\n// } from \"react-icons/fa\";\n// import { getCash } from \"../api/CashApi\";\n// import {\n//   calculateInitialCash,\n//   calculateAvailableCash,\n//   calculateNetPL,\n//   calculateCashBalance,\n//   calculateROI,\n// } from \"./CashCalc\";\n\n// const Cash = () => {\n//   const [cashData, setCashData] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchCashData = async () => {\n//       try {\n//         const data = await getCash();\n//         setCashData(data);\n//         console.log(data);\n//       } catch (error) {\n//         setError(\"Error fetching cash data\");\n//         console.error(\"Error fetching cash data:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchCashData();\n//   }, []);\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>{error}</p>;\n\n//   // Use the calculations\n//   const initialCash = calculateInitialCash(cashData?.initial_cash);\n//   const netPL = calculateNetPL(cashData?.trades || []);\n//   const availableCash = calculateAvailableCash(\n//     initialCash,\n//     cashData?.trades || []\n//   );\n//   const cashBalance = calculateCashBalance(initialCash, netPL);\n//   const roi = calculateROI(initialCash, netPL);\n\n//   return (\n//     <div className=\"cash-container\">\n//       <div className=\"cash-card-container\">\n//         {/* Initial Cash Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaCashRegister className=\"card-icon\" />\n//             <span className=\"label\">Initial Cash:</span>\n//             <span className=\"value\">{`$${initialCash.toFixed(2)}`}</span>\n//           </div>\n//         </div>\n\n//         {/* Available Cash Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaChartPie className=\"card-icon\" />\n//             <span className=\"label\">Available Cash:</span>\n//             <span className=\"value\">{`$${availableCash.toFixed(2)}`}</span>\n//           </div>\n//         </div>\n\n//         {/* Net P/L Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaChartLine className=\"card-icon\" />\n//             <span className=\"label\">Net P/L:</span>\n//             <span className=\"value\">{`$${netPL.toFixed(2)}`}</span>\n//           </div>\n//         </div>\n\n//         {/* Cash Balance Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaMoneyBillWave className=\"card-icon\" />\n//             <span className=\"label\">Cash Balance:</span>\n//             <span className=\"value\">{`$${cashBalance.toFixed(2)}`}</span>\n//           </div>\n//         </div>\n\n//         {/* RoI Card */}\n//         <div className=\"cash-card\">\n//           <div className=\"card-content\">\n//             <FaPercentage className=\"card-icon\" />\n//             <span className=\"label\">RoI:</span>\n//             <span className=\"value\">{`${roi.toFixed(2)}%`}</span>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cash;\n\n// // import React, { useEffect, useState } from \"react\";\n// // import {\n// //   FaMoneyBillWave,\n// //   FaChartLine,\n// //   FaCashRegister,\n// //   FaPercentage,\n// //   FaChartPie,\n// // } from \"react-icons/fa\";\n// // import { getCash } from \"../api/CashApi\";\n\n// // const Cash = () => {\n// //   const [cashData, setCashData] = useState(null);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     const fetchCashData = async () => {\n// //       try {\n// //         const data = await getCash();\n// //         setCashData(data);\n// //         console.log(data);\n// //       } catch (error) {\n// //         setError(\"Error fetching cash data\");\n// //         console.error(\"Error fetching cash data:\", error);\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     fetchCashData();\n// //   }, []);\n// //   if (loading) return <p>Loading...</p>;\n// //   if (error) return <p>{error}</p>;\n\n// //   return (\n// //     <div className=\"cash-container\">\n// //       <div className=\"cash-card-container\">\n// //         {/* Initial Cash Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaCashRegister className=\"card-icon\" />\n// //             <span className=\"label\">Initial Cash:</span>\n// //             <span className=\"value\">\n// //               {loading\n// //                 ? \"Loading...\"\n// //                 : error\n// //                 ? \"Fund Account\"\n// //                 : `$${cashData?.initial_cash || \"Fund Account\"}`}\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {/* Available Cash Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaChartPie className=\"card-icon\" />\n// //             <span className=\"label\">Available Cash:</span>\n// //             <span className=\"value\">\n// //               {loading\n// //                 ? \"Loading...\"\n// //                 : error\n// //                 ? \"N/A\"\n// //                 : `$${cashData?.available_cash || \"N/A\"}`}\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {/* Net P/L Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaChartLine className=\"card-icon\" />\n// //             <span className=\"label\">Net P/L:</span>\n// //             <span className=\"value\">\n// //               {loading\n// //                 ? \"Loading...\"\n// //                 : error\n// //                 ? \"N/A\"\n// //                 : `$${cashData?.net_pnl || \"N/A\"}`}\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {/* Cash Balance Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaMoneyBillWave className=\"card-icon\" />\n// //             <span className=\"label\">Cash Balance:</span>\n// //             <span className=\"value\">\n// //               {loading\n// //                 ? \"Loading...\"\n// //                 : error\n// //                 ? \"N/A\"\n// //                 : `$${cashData?.cash_balance || \"N/A\"}`}\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {/* RoI Card */}\n// //         <div className=\"cash-card\">\n// //           <div className=\"card-content\">\n// //             <FaPercentage className=\"card-icon\" />\n// //             <span className=\"label\">RoI:</span>\n// //             <span className=\"value\">\n// //               {loading\n// //                 ? \"Loading...\"\n// //                 : error\n// //                 ? \"N/A\"\n// //                 : `${cashData?.roi || \"N/A\"}%`}\n// //             </span>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Cash;","map":{"version":3,"names":["React","useEffect","useState","FaMoneyBillWave","FaChartLine","FaCashRegister","FaPercentage","FaChartPie","getCash","fetchDailyPnls","fetchTransactions","calculateInitialCash","calculateAvailableCash","calculateNetPL","calculateCashBalance","calculateROI","formatCash","Cash","cashData","setCashData","dailyPnls","setDailyPnls","transactions","setTransactions","loading","setLoading","error","setError","fetchData","cashResponse","pnlResponse","transactionsResponse","Promise","all","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","className","initialCash","netPL","length","availableCash","cashBalance","roi","toFixed"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/cash/Cash.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FaMoneyBillWave,\r\n  FaChartLine,\r\n  FaCashRegister,\r\n  FaPercentage,\r\n  FaChartPie,\r\n} from \"react-icons/fa\";\r\nimport { getCash } from \"../api/CashApi\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\r\nimport {\r\n  calculateInitialCash,\r\n  calculateAvailableCash,\r\n  calculateNetPL,\r\n  calculateCashBalance,\r\n  calculateROI,\r\n} from \"./CashCalc\";\r\nimport { formatCash } from \"../func/functions\";\r\n\r\nconst Cash = () => {\r\n  const [cashData, setCashData] = useState(null);\r\n  const [dailyPnls, setDailyPnls] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [cashResponse, pnlResponse, transactionsResponse] =\r\n          await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\r\n\r\n        setCashData(cashResponse);\r\n        setDailyPnls(pnlResponse);\r\n        setTransactions(transactionsResponse);\r\n      } catch (error) {\r\n        setError(\"No cash data\");\r\n        console.error(\"Error fetching cash data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  // Show the error message but still render the cards\r\n  const errorMessage = error ? <p className=\"error-message\">{error}</p> : null;\r\n\r\n  const initialCash = cashData ? calculateInitialCash(cashData) : 0;\r\n  const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\r\n\r\n  const availableCash =\r\n    transactions.length > 0\r\n      ? formatCash(calculateAvailableCash(initialCash, transactions))\r\n      : formatCash(initialCash);\r\n\r\n  const cashBalance =\r\n    transactions.length > 0 || netPL !== 0\r\n      ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\r\n      : formatCash(initialCash);\r\n\r\n  const roi =\r\n    initialCash !== 0 && netPL !== 0\r\n      ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\r\n      : \"NA\";\r\n\r\n  return (\r\n    <div className=\"cash-container\">\r\n      {/* {errorMessage}  */}\r\n      <div className=\"cash-card-container\">\r\n        {/* Initial Cash Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaCashRegister className=\"card-icon\" />\r\n            <span className=\"label\">Initial Cash:</span>\r\n            <span className=\"value\">{formatCash(initialCash)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Available Cash Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaChartPie className=\"card-icon\" />\r\n            <span className=\"label\">Available Cash:</span>\r\n            <span className=\"value\">{availableCash}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Net P/L Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaChartLine className=\"card-icon\" />\r\n            <span className=\"label\">Net P/L:</span>\r\n            <span className=\"value\">{formatCash(netPL)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Cash Balance Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaMoneyBillWave className=\"card-icon\" />\r\n            <span className=\"label\">Cash Balance:</span>\r\n            <span className=\"value\">{cashBalance}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* RoI Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <FaPercentage className=\"card-icon\" />\r\n            <span className=\"label\">RoI:</span>\r\n            <span className=\"value\">{roi}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cash;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   FaMoneyBillWave,\r\n//   FaChartLine,\r\n//   FaCashRegister,\r\n//   FaPercentage,\r\n//   FaChartPie,\r\n// } from \"react-icons/fa\";\r\n// import { getCash } from \"../api/CashApi\";\r\n// import { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\r\n// import {\r\n//   calculateInitialCash,\r\n//   calculateAvailableCash,\r\n//   calculateNetPL,\r\n//   calculateCashBalance,\r\n//   calculateROI,\r\n// } from \"./CashCalc\";\r\n// import { formatCash } from \"../func/functions\";\r\n\r\n// const Cash = () => {\r\n//   const [cashData, setCashData] = useState(null);\r\n//   const [dailyPnls, setDailyPnls] = useState([]);\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const [cashResponse, pnlResponse, transactionsResponse] =\r\n//           await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\r\n\r\n//         setCashData(cashResponse);\r\n//         setDailyPnls(pnlResponse);\r\n//         setTransactions(transactionsResponse);\r\n//       } catch (error) {\r\n//         setError(\"No Cash data\");\r\n//         console.error(\"No Cash data:\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n//   if (error) return <p>{error}</p>;\r\n\r\n//   const initialCash = cashData ? calculateInitialCash(cashData) : 0;\r\n//   const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\r\n\r\n//   const availableCash =\r\n//     transactions.length > 0\r\n//       ? formatCash(calculateAvailableCash(initialCash, transactions))\r\n//       : formatCash(initialCash);\r\n\r\n//   const cashBalance =\r\n//     transactions.length > 0 || netPL !== 0\r\n//       ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\r\n//       : formatCash(initialCash); // Fallback to initial cash if no transactions\r\n\r\n//   const roi =\r\n//     initialCash !== 0 && netPL !== 0\r\n//       ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\r\n//       : \"NA\";\r\n\r\n//   return (\r\n//     <div className=\"cash-container\">\r\n//       <div className=\"cash-card-container\">\r\n//         {/* Initial Cash Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaCashRegister className=\"card-icon\" />\r\n//             <span className=\"label\">Initial Cash:</span>\r\n//             <span className=\"value\">{formatCash(initialCash)}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Available Cash Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaChartPie className=\"card-icon\" />\r\n//             <span className=\"label\">Available Cash:</span>\r\n//             <span className=\"value\">{availableCash}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Net P/L Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaChartLine className=\"card-icon\" />\r\n//             <span className=\"label\">Net P/L:</span>\r\n//             <span className=\"value\">{formatCash(netPL)}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Cash Balance Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaMoneyBillWave className=\"card-icon\" />\r\n//             <span className=\"label\">Cash Balance:</span>\r\n//             <span className=\"value\">{cashBalance}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* RoI Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaPercentage className=\"card-icon\" />\r\n//             <span className=\"label\">RoI:</span>\r\n//             <span className=\"value\">{roi}</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cash;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   FaMoneyBillWave,\r\n//   FaChartLine,\r\n//   FaCashRegister,\r\n//   FaPercentage,\r\n//   FaChartPie,\r\n// } from \"react-icons/fa\";\r\n// import { getCash } from \"../api/CashApi\";\r\n// import { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\n// import { fetchTransactions } from \"../api/TransactionsAPI\";\r\n// import {\r\n//   calculateInitialCash,\r\n//   calculateAvailableCash,\r\n//   calculateNetPL,\r\n//   calculateCashBalance,\r\n//   calculateROI,\r\n// } from \"./CashCalc\";\r\n\r\n// const Cash = () => {\r\n//   const [cashData, setCashData] = useState(null);\r\n//   const [dailyPnls, setDailyPnls] = useState([]);\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const [cashResponse, pnlResponse, transactionsResponse] =\r\n//           await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\r\n\r\n//         setCashData(cashResponse);\r\n//         setDailyPnls(pnlResponse);\r\n//         setTransactions(transactionsResponse);\r\n//       } catch (error) {\r\n//         setError(\"No cash data\");\r\n//         console.error(\"No cash data:\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n//   if (error) return <p>{error}</p>;\r\n\r\n//   // Use the new calculations\r\n//   const initialCash = cashData ? calculateInitialCash(cashData) : \"NA\";\r\n//   const netPL = calculateNetPL(dailyPnls);\r\n//   const availableCash = calculateAvailableCash(initialCash, transactions);\r\n//   const cashBalance = calculateCashBalance(initialCash, netPL, transactions);\r\n//   const roi = calculateROI(initialCash, netPL);\r\n\r\n//   return (\r\n//     <div className=\"cash-container\">\r\n//       <div className=\"cash-card-container\">\r\n//         {/* Initial Cash Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaCashRegister className=\"card-icon\" />\r\n//             <span className=\"label\">Initial Cash:</span>\r\n//             <span className=\"value\">{`$${initialCash.toFixed(2)}`}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Available Cash Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaChartPie className=\"card-icon\" />\r\n//             <span className=\"label\">Available Cash:</span>\r\n//             <span className=\"value\">{`$${availableCash.toFixed(2)}`}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Net P/L Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaChartLine className=\"card-icon\" />\r\n//             <span className=\"label\">Net P/L:</span>\r\n//             <span className=\"value\">{`$${netPL.toFixed(2)}`}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Cash Balance Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaMoneyBillWave className=\"card-icon\" />\r\n//             <span className=\"label\">Cash Balance:</span>\r\n//             <span className=\"value\">{`$${cashBalance.toFixed(2)}`}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* RoI Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaPercentage className=\"card-icon\" />\r\n//             <span className=\"label\">RoI:</span>\r\n//             <span className=\"value\">{`${roi.toFixed(2)}%`}</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cash;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   FaMoneyBillWave,\r\n//   FaChartLine,\r\n//   FaCashRegister,\r\n//   FaPercentage,\r\n//   FaChartPie,\r\n// } from \"react-icons/fa\";\r\n// import { getCash } from \"../api/CashApi\";\r\n// import {\r\n//   calculateInitialCash,\r\n//   calculateAvailableCash,\r\n//   calculateNetPL,\r\n//   calculateCashBalance,\r\n//   calculateROI,\r\n// } from \"./CashCalc\";\r\n\r\n// const Cash = () => {\r\n//   const [cashData, setCashData] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCashData = async () => {\r\n//       try {\r\n//         const data = await getCash();\r\n//         setCashData(data);\r\n//         console.log(data);\r\n//       } catch (error) {\r\n//         setError(\"Error fetching cash data\");\r\n//         console.error(\"Error fetching cash data:\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchCashData();\r\n//   }, []);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n//   if (error) return <p>{error}</p>;\r\n\r\n//   // Use the calculations\r\n//   const initialCash = calculateInitialCash(cashData?.initial_cash);\r\n//   const netPL = calculateNetPL(cashData?.trades || []);\r\n//   const availableCash = calculateAvailableCash(\r\n//     initialCash,\r\n//     cashData?.trades || []\r\n//   );\r\n//   const cashBalance = calculateCashBalance(initialCash, netPL);\r\n//   const roi = calculateROI(initialCash, netPL);\r\n\r\n//   return (\r\n//     <div className=\"cash-container\">\r\n//       <div className=\"cash-card-container\">\r\n//         {/* Initial Cash Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaCashRegister className=\"card-icon\" />\r\n//             <span className=\"label\">Initial Cash:</span>\r\n//             <span className=\"value\">{`$${initialCash.toFixed(2)}`}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Available Cash Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaChartPie className=\"card-icon\" />\r\n//             <span className=\"label\">Available Cash:</span>\r\n//             <span className=\"value\">{`$${availableCash.toFixed(2)}`}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Net P/L Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaChartLine className=\"card-icon\" />\r\n//             <span className=\"label\">Net P/L:</span>\r\n//             <span className=\"value\">{`$${netPL.toFixed(2)}`}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Cash Balance Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaMoneyBillWave className=\"card-icon\" />\r\n//             <span className=\"label\">Cash Balance:</span>\r\n//             <span className=\"value\">{`$${cashBalance.toFixed(2)}`}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* RoI Card */}\r\n//         <div className=\"cash-card\">\r\n//           <div className=\"card-content\">\r\n//             <FaPercentage className=\"card-icon\" />\r\n//             <span className=\"label\">RoI:</span>\r\n//             <span className=\"value\">{`${roi.toFixed(2)}%`}</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cash;\r\n\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import {\r\n// //   FaMoneyBillWave,\r\n// //   FaChartLine,\r\n// //   FaCashRegister,\r\n// //   FaPercentage,\r\n// //   FaChartPie,\r\n// // } from \"react-icons/fa\";\r\n// // import { getCash } from \"../api/CashApi\";\r\n\r\n// // const Cash = () => {\r\n// //   const [cashData, setCashData] = useState(null);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [error, setError] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchCashData = async () => {\r\n// //       try {\r\n// //         const data = await getCash();\r\n// //         setCashData(data);\r\n// //         console.log(data);\r\n// //       } catch (error) {\r\n// //         setError(\"Error fetching cash data\");\r\n// //         console.error(\"Error fetching cash data:\", error);\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchCashData();\r\n// //   }, []);\r\n// //   if (loading) return <p>Loading...</p>;\r\n// //   if (error) return <p>{error}</p>;\r\n\r\n// //   return (\r\n// //     <div className=\"cash-container\">\r\n// //       <div className=\"cash-card-container\">\r\n// //         {/* Initial Cash Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaCashRegister className=\"card-icon\" />\r\n// //             <span className=\"label\">Initial Cash:</span>\r\n// //             <span className=\"value\">\r\n// //               {loading\r\n// //                 ? \"Loading...\"\r\n// //                 : error\r\n// //                 ? \"Fund Account\"\r\n// //                 : `$${cashData?.initial_cash || \"Fund Account\"}`}\r\n// //             </span>\r\n// //           </div>\r\n// //         </div>\r\n\r\n// //         {/* Available Cash Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaChartPie className=\"card-icon\" />\r\n// //             <span className=\"label\">Available Cash:</span>\r\n// //             <span className=\"value\">\r\n// //               {loading\r\n// //                 ? \"Loading...\"\r\n// //                 : error\r\n// //                 ? \"N/A\"\r\n// //                 : `$${cashData?.available_cash || \"N/A\"}`}\r\n// //             </span>\r\n// //           </div>\r\n// //         </div>\r\n\r\n// //         {/* Net P/L Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaChartLine className=\"card-icon\" />\r\n// //             <span className=\"label\">Net P/L:</span>\r\n// //             <span className=\"value\">\r\n// //               {loading\r\n// //                 ? \"Loading...\"\r\n// //                 : error\r\n// //                 ? \"N/A\"\r\n// //                 : `$${cashData?.net_pnl || \"N/A\"}`}\r\n// //             </span>\r\n// //           </div>\r\n// //         </div>\r\n\r\n// //         {/* Cash Balance Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaMoneyBillWave className=\"card-icon\" />\r\n// //             <span className=\"label\">Cash Balance:</span>\r\n// //             <span className=\"value\">\r\n// //               {loading\r\n// //                 ? \"Loading...\"\r\n// //                 : error\r\n// //                 ? \"N/A\"\r\n// //                 : `$${cashData?.cash_balance || \"N/A\"}`}\r\n// //             </span>\r\n// //           </div>\r\n// //         </div>\r\n\r\n// //         {/* RoI Card */}\r\n// //         <div className=\"cash-card\">\r\n// //           <div className=\"card-content\">\r\n// //             <FaPercentage className=\"card-icon\" />\r\n// //             <span className=\"label\">RoI:</span>\r\n// //             <span className=\"value\">\r\n// //               {loading\r\n// //                 ? \"Loading...\"\r\n// //                 : error\r\n// //                 ? \"N/A\"\r\n// //                 : `${cashData?.roi || \"N/A\"}%`}\r\n// //             </span>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Cash;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module"}