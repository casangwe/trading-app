{"ast":null,"code":"// src/api/AnalysisAPI.js\nimport jwt_decode from \"jwt-decode\";\nconst API_BASE_URL = \"http://localhost:8000\"; // Ensure this is the correct URL for your API\n\nexport const analysisAPI = async (userId, startDate, endDate) => {\n  try {\n    const token = localStorage.getItem(\"access_token\");\n\n    // Decode the token to extract the user ID\n    const decodedToken = jwt_decode(token);\n    const userId = decodedToken.sub; // Assumes 'sub' holds the user ID\n\n    const response = await fetch(`${API_BASE_URL}/analysis/${userId}?start_date=${startDate}&end_date=${endDate}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n    console.log(response);\n    if (!response.ok) throw new Error(\"Error fetching analysis\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Fetch Analysis Error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["jwt_decode","API_BASE_URL","analysisAPI","userId","startDate","endDate","token","localStorage","getItem","decodedToken","sub","response","fetch","method","headers","Accept","console","log","ok","Error","json","error"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/api/AnalysisAPI.js"],"sourcesContent":["// src/api/AnalysisAPI.js\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst API_BASE_URL = \"http://localhost:8000\"; // Ensure this is the correct URL for your API\r\n\r\nexport const analysisAPI = async (userId, startDate, endDate) => {\r\n  try {\r\n    const token = localStorage.getItem(\"access_token\");\r\n\r\n    // Decode the token to extract the user ID\r\n    const decodedToken = jwt_decode(token);\r\n    const userId = decodedToken.sub; // Assumes 'sub' holds the user ID\r\n\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/analysis/${userId}?start_date=${startDate}&end_date=${endDate}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    console.log(response);\r\n\r\n    if (!response.ok) throw new Error(\"Error fetching analysis\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Analysis Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,UAAU,MAAM,YAAY;AAEnC,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,EAAEC,OAAO,KAAK;EAC/D,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;IAElD;IACA,MAAMC,YAAY,GAAGT,UAAU,CAACM,KAAK,CAAC;IACtC,MAAMH,MAAM,GAAGM,YAAY,CAACC,GAAG,CAAC,CAAC;;IAEjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEX,YAAa,aAAYE,MAAO,eAAcC,SAAU,aAAYC,OAAQ,EAAC,EAChF;MACEQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE;MACV;IACF,CACF,CAAC;IACDC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IAErB,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5D,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}