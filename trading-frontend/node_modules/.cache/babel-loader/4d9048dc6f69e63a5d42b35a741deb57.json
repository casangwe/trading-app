{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Graph.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Chart from \"chart.js\";\nconst Graph = () => {\n  const chartRef = useRef(null);\n  const [graphData, setGraphData] = useState({});\n  useEffect(() => {\n    console.log(\"Fetching data...\");\n    fetch(\"http://localhost:8000/Graph/\").then(response => response.json()).then(data => {\n      console.log(\"Data fetched:\", data);\n      setGraphData(data);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    if (Object.keys(graphData).length > 0) {\n      console.log(\"Rendering chart...\");\n      renderChart();\n    }\n  }, [graphData]);\n  const fetchData = () => {\n    // Mocking the provided data for demonstration purposes\n    const data = {\n      \"1D\": 800,\n      \"1M\": 600,\n      \"1W\": 600,\n      \"1Y\": 600,\n      \"3M\": 600,\n      Max: 600,\n      YTD: 600\n    };\n    setGraphData(data);\n  };\n  const renderChart = () => {\n    const labels = Object.keys(graphData);\n    const data = Object.values(graphData);\n    const ctx = chartRef.current.getContext(\"2d\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"Value\",\n          data: data,\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\", \"rgba(255, 99, 132, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\", \"rgba(255, 99, 132, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            display: false // Hides the y-axis\n          }\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Graph;","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","Graph","chartRef","graphData","setGraphData","console","log","fetch","then","response","json","data","catch","error","Object","keys","length","renderChart","fetchData","Max","YTD","labels","values","ctx","current","getContext","type","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","display","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Graph.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nconst Graph = () => {\r\n  const chartRef = useRef(null);\r\n  const [graphData, setGraphData] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(\"Fetching data...\");\r\n    fetch(\"http://localhost:8000/Graph/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Data fetched:\", data);\r\n        setGraphData(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(graphData).length > 0) {\r\n      console.log(\"Rendering chart...\");\r\n      renderChart();\r\n    }\r\n  }, [graphData]);\r\n\r\n  const fetchData = () => {\r\n    // Mocking the provided data for demonstration purposes\r\n    const data = {\r\n      \"1D\": 800,\r\n      \"1M\": 600,\r\n      \"1W\": 600,\r\n      \"1Y\": 600,\r\n      \"3M\": 600,\r\n      Max: 600,\r\n      YTD: 600,\r\n    };\r\n\r\n    setGraphData(data);\r\n  };\r\n\r\n  const renderChart = () => {\r\n    const labels = Object.keys(graphData);\r\n    const data = Object.values(graphData);\r\n\r\n    const ctx = chartRef.current.getContext(\"2d\");\r\n    new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: \"Value\",\r\n            data: data,\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.2)\",\r\n              \"rgba(54, 162, 235, 0.2)\",\r\n              \"rgba(255, 206, 86, 0.2)\",\r\n              \"rgba(75, 192, 192, 0.2)\",\r\n              \"rgba(153, 102, 255, 0.2)\",\r\n              \"rgba(255, 159, 64, 0.2)\",\r\n              \"rgba(255, 99, 132, 0.2)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 99, 132, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            display: false, // Hides the y-axis\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}