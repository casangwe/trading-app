{"ast":null,"code":"const API_BASE_URL = \"http://localhost:8000\";\n\n// Retrieve userId from localStorage\nconst getUserId = () => {\n  const userDataString = localStorage.getItem(\"user_data\");\n  if (!userDataString) {\n    console.error(\"No user data found in localStorage\");\n    return null;\n  }\n  try {\n    const userData = JSON.parse(userDataString);\n    return userData.sub;\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n    return null;\n  }\n};\n\n// Retrieve the userId\nconst userId = getUserId();\n\n// Fetch all rules for a specific user\nexport const fetchRules = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/rules?user_id=${userId}`);\n    if (!response.ok) throw new Error(\"Error fetching rules\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Fetch Rules Error:\", error);\n    throw error;\n  }\n};\n\n// Create a new rule for a specific user\nexport const createRule = async ruleData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/rules?user_id=${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...ruleData,\n        user_id: userId\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || \"Error creating rule\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Create Rule Error:\", error);\n    throw error;\n  }\n};\n\n// Update an existing rule for a specific user\nexport const updateRule = async (ruleId, ruleData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(ruleData)\n    });\n    if (!response.ok) throw new Error(\"Error updating rule\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Update Rule Error:\", error);\n    throw error;\n  }\n};\n\n// Delete a rule for a specific user\nexport const deleteRule = async ruleId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`, {\n      method: \"DELETE\"\n    });\n    if (!response.ok) throw new Error(\"Error deleting rule\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Delete Rule Error:\", error);\n    throw error;\n  }\n};\n\n// Fetch a single rule by ID for a specific user\nexport const fetchRuleById = async ruleId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`);\n    if (!response.ok) throw new Error(\"Rule not found\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Fetch Rule Error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getUserId","userDataString","localStorage","getItem","console","error","userData","JSON","parse","sub","userId","fetchRules","response","fetch","ok","Error","json","createRule","ruleData","method","headers","body","stringify","user_id","errorData","detail","updateRule","ruleId","deleteRule","fetchRuleById"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/api/RulesAPI.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Fetch all rules for a specific user\r\nexport const fetchRules = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/rules?user_id=${userId}`);\r\n    if (!response.ok) throw new Error(\"Error fetching rules\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Rules Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new rule for a specific user\r\nexport const createRule = async (ruleData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/rules?user_id=${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...ruleData, user_id: userId }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || \"Error creating rule\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Create Rule Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an existing rule for a specific user\r\nexport const updateRule = async (ruleId, ruleData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(ruleData),\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error updating rule\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Rule Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a rule for a specific user\r\nexport const deleteRule = async (ruleId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error deleting rule\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Rule Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single rule by ID for a specific user\r\nexport const fetchRuleById = async (ruleId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Rule not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Rule Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}