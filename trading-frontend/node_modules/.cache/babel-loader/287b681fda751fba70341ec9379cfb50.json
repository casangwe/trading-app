{"ast":null,"code":"const API_BASE_URL = \"http://localhost:8000\";\n\n// Retrieve userId from localStorage\nconst getUserId = () => {\n  const userDataString = localStorage.getItem(\"user_data\");\n  if (!userDataString) {\n    console.error(\"No user data found in localStorage\");\n    return null;\n  }\n  try {\n    const userData = JSON.parse(userDataString);\n    return userData.sub;\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n    return null;\n  }\n};\n\n// Retrieve the userId\nconst userId = getUserId();\n\n// // Fetch all misc entries for a specific user\n// export const fetchMiscEntries = async () => {\n//   try {\n//     const response = await fetch(`${API_BASE_URL}/misc?user_id=${userId}`);\n//     if (!response.ok) throw new Error(\"Error fetching misc entries\");\n//     return await response.json();\n//   } catch (error) {\n//     console.error(\"Fetch Misc Entries Error:\", error);\n//     throw error;\n//   }\n// };\n\n// Fetch all misc entries for a specific user with optional category filter\nexport const fetchMiscEntries = async (category = null) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/misc?user_id=${userId}${category ? `&category=${category}` : \"\"}`);\n    if (!response.ok) throw new Error(\"Error fetching misc entries\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Fetch Misc Entries Error:\", error);\n    throw error;\n  }\n};\n\n// Fetch a single misc entry by ID for a specific user\nexport const fetchMiscEntryById = async miscId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/misc/${miscId}?user_id=${userId}`);\n    if (!response.ok) throw new Error(\"Misc entry not found\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Fetch Misc Entry Error:\", error);\n    throw error;\n  }\n};\n\n// Create a new misc entry for a specific user\nexport const createMiscEntry = async miscData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/misc?user_id=${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...miscData,\n        user_id: userId\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || \"Error creating misc entry\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Create Misc Entry Error:\", error);\n    throw error;\n  }\n};\n\n// Update an existing misc entry for a specific user\nexport const updateMiscEntry = async (miscId, miscData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/misc/${miscId}?user_id=${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(miscData)\n    });\n    if (!response.ok) throw new Error(\"Error updating misc entry\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Update Misc Entry Error:\", error);\n    throw error;\n  }\n};\n\n// Delete a misc entry for a specific user\nexport const deleteMiscEntry = async miscId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/misc/${miscId}?user_id=${userId}`, {\n      method: \"DELETE\"\n    });\n    if (!response.ok) throw new Error(\"Error deleting misc entry\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Delete Misc Entry Error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getUserId","userDataString","localStorage","getItem","console","error","userData","JSON","parse","sub","userId","fetchMiscEntries","category","response","fetch","ok","Error","json","fetchMiscEntryById","miscId","createMiscEntry","miscData","method","headers","body","stringify","user_id","errorData","detail","updateMiscEntry","deleteMiscEntry"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/api/MiscAPI.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// // Fetch all misc entries for a specific user\r\n// export const fetchMiscEntries = async () => {\r\n//   try {\r\n//     const response = await fetch(`${API_BASE_URL}/misc?user_id=${userId}`);\r\n//     if (!response.ok) throw new Error(\"Error fetching misc entries\");\r\n//     return await response.json();\r\n//   } catch (error) {\r\n//     console.error(\"Fetch Misc Entries Error:\", error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// Fetch all misc entries for a specific user with optional category filter\r\nexport const fetchMiscEntries = async (category = null) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/misc?user_id=${userId}${\r\n        category ? `&category=${category}` : \"\"\r\n      }`\r\n    );\r\n    if (!response.ok) throw new Error(\"Error fetching misc entries\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Misc Entries Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single misc entry by ID for a specific user\r\nexport const fetchMiscEntryById = async (miscId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/misc/${miscId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Misc entry not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Misc Entry Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new misc entry for a specific user\r\nexport const createMiscEntry = async (miscData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/misc?user_id=${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...miscData, user_id: userId }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || \"Error creating misc entry\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Create Misc Entry Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an existing misc entry for a specific user\r\nexport const updateMiscEntry = async (miscId, miscData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/misc/${miscId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(miscData),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) throw new Error(\"Error updating misc entry\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Misc Entry Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a misc entry for a specific user\r\nexport const deleteMiscEntry = async (miscId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/misc/${miscId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n\r\n    if (!response.ok) throw new Error(\"Error deleting misc entry\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Misc Entry Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}