{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\analysis\\\\AnalysisDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { performAnalysis } from \"./AnalysisGet\";\nimport { RadialBarChart, RadialBar, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nconst AnalysisDisplay = () => {\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const results = await performAnalysis();\n        setAnalysisResults(results);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const formatValue = (value, isCurrency = false) => {\n    if (isNaN(value) || value === undefined) {\n      return isCurrency ? \"$0.00\" : \"N/A\";\n    }\n    return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n  };\n  if (error) {\n    console.error(\"Error fetching analysis data:\", error);\n  }\n  if (!analysisResults && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  const {\n    profitFactor = 0,\n    winRate = 0,\n    winningTrades = 0,\n    losingTrades = 0,\n    numberOfTrades = 0,\n    averageWin = 0,\n    averageLoss = 0,\n    winLossRatio = 0,\n    absoluteReturn = 0,\n    sharpeRatio = 0,\n    riskRewardRatio = 0\n  } = analysisResults || {};\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metrics-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Absolute Return\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, formatValue(absoluteReturn, true))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Sharpe Ratio\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, formatValue(sharpeRatio)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Trades\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, numberOfTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Wins\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, winningTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Losses\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, losingTrades))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metrics-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Win Rate\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, formatValue(winRate), \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Avg. Win\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, formatValue(averageWin, true))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Avg. Loss\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, formatValue(averageLoss, true))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Risk Reward\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, formatValue(riskRewardRatio)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visual-metrics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Profit Factor \", /*#__PURE__*/React.createElement(FaInfoCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadialBarChart, {\n    innerRadius: \"80%\",\n    outerRadius: \"100%\",\n    data: [{\n      value: profitFactor\n    }],\n    startAngle: 180,\n    endAngle: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RadialBar, {\n    dataKey: \"value\",\n    fill: profitFactor >= 1 ? \"#34a853\" : \"#ea4335\",\n    cornerRadius: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    formatter: value => value.toFixed(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, profitFactor.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Win % \", /*#__PURE__*/React.createElement(FaInfoCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadialBarChart, {\n    innerRadius: \"70%\",\n    outerRadius: \"100%\",\n    data: [{\n      value: winRate\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RadialBar, {\n    dataKey: \"value\",\n    fill: winRate >= 50 ? \"#34a853\" : \"#ea4335\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    formatter: value => `${value.toFixed(2)}%`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, winRate.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"win-loss-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"win-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, winningTrades), \" /\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"loss-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, losingTrades)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"Avg win/loss trade \", /*#__PURE__*/React.createElement(FaInfoCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 34\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, winLossRatio.toFixed(1)), /*#__PURE__*/React.createElement(ProgressBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    now: averageWin / (averageWin + averageLoss) * 100,\n    label: `$${formatValue(averageWin, true)}`,\n    variant: \"success\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ProgressBar, {\n    now: averageLoss / (averageWin + averageLoss) * 100,\n    label: `$${formatValue(averageLoss, true)}`,\n    variant: \"danger\",\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }))))));\n};\nexport default AnalysisDisplay;\n// import React, { useState, useEffect } from \"react\";\n// import { performAnalysis } from \"./AnalysisGet\";\n// import {\n//   RadialBarChart,\n//   RadialBar,\n//   Tooltip,\n//   ResponsiveContainer,\n// } from \"recharts\";\n// import { ProgressBar } from \"react-bootstrap\";\n// import { FaInfoCircle } from \"react-icons/fa\"; // For information icons\n\n// const AnalysisDisplay = () => {\n//   const [analysisResults, setAnalysisResults] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const results = await performAnalysis();\n//         setAnalysisResults(results);\n//       } catch (err) {\n//         setError(err);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const formatValue = (value, isCurrency = false) => {\n//     if (isNaN(value) || value === undefined) {\n//       return isCurrency ? \"$0.00\" : \"N/A\";\n//     }\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n//   };\n\n//   if (error) {\n//     console.error(\"Error fetching analysis data:\", error);\n//   }\n\n//   if (!analysisResults && !error) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const {\n//     profitFactor = 0,\n//     winRate = 0,\n//     winningTrades = 0,\n//     losingTrades = 0,\n//     averageWin = 0,\n//     averageLoss = 0,\n//     winLossRatio = 0,\n//   } = analysisResults || {};\n\n//   return (\n//     <div className=\"analysis-container\">\n//       {/* Profit Factor Card */}\n//       <div className=\"metric-card\">\n//         <div className=\"metric-header\">\n//           <span>\n//             Profit Factor <FaInfoCircle />\n//           </span>\n//         </div>\n//         <div className=\"metric-content\">\n//           <ResponsiveContainer width=\"100%\" height={120}>\n//             <RadialBarChart\n//               innerRadius=\"80%\"\n//               outerRadius=\"100%\"\n//               data={[{ value: profitFactor }]}\n//               startAngle={180}\n//               endAngle={0}\n//             >\n//               <RadialBar\n//                 dataKey=\"value\"\n//                 fill={profitFactor >= 1 ? \"#34a853\" : \"#ea4335\"}\n//                 cornerRadius={10}\n//               />\n//               <Tooltip formatter={(value) => value.toFixed(2)} />\n//             </RadialBarChart>\n//           </ResponsiveContainer>\n//           <p className=\"metric-value\">{profitFactor.toFixed(2)}</p>\n//         </div>\n//       </div>\n\n//       {/* Win % Card */}\n//       <div className=\"metric-card\">\n//         <div className=\"metric-header\">\n//           <span>\n//             Win % <FaInfoCircle />\n//           </span>\n//         </div>\n//         <div className=\"metric-content\">\n//           <ResponsiveContainer width=\"100%\" height={120}>\n//             <RadialBarChart\n//               innerRadius=\"70%\"\n//               outerRadius=\"100%\"\n//               data={[{ value: winRate }]}\n//             >\n//               <RadialBar\n//                 dataKey=\"value\"\n//                 fill={winRate >= 50 ? \"#34a853\" : \"#ea4335\"}\n//               />\n//               <Tooltip formatter={(value) => `${value.toFixed(2)}%`} />\n//             </RadialBarChart>\n//           </ResponsiveContainer>\n//           <p className=\"metric-value\">{winRate.toFixed(2)}%</p>\n//           <div className=\"win-loss-count\">\n//             <span className=\"win-count\">{winningTrades}</span> /{\" \"}\n//             <span className=\"loss-count\">{losingTrades}</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Avg Win/Loss Trade Card */}\n//       <div className=\"metric-card\">\n//         <div className=\"metric-header\">\n//           <span>\n//             Avg win/loss trade <FaInfoCircle />\n//           </span>\n//         </div>\n//         <div className=\"metric-content\">\n//           <p className=\"metric-value\">{winLossRatio.toFixed(1)}</p>\n//           <ProgressBar>\n//             <ProgressBar\n//               now={(averageWin / (averageWin + averageLoss)) * 100}\n//               label={`$${formatValue(averageWin, true)}`}\n//               variant=\"success\"\n//               key={1}\n//             />\n//             <ProgressBar\n//               now={(averageLoss / (averageWin + averageLoss)) * 100}\n//               label={`$${formatValue(averageLoss, true)}`}\n//               variant=\"danger\"\n//               key={2}\n//             />\n//           </ProgressBar>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AnalysisDisplay;\n\n// import React, { useState, useEffect } from \"react\";\n// import { performAnalysis } from \"./AnalysisGet\";\n\n// const AnalysisDisplay = () => {\n//   const [analysisResults, setAnalysisResults] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const results = await performAnalysis();\n//         setAnalysisResults(results);\n//       } catch (err) {\n//         setError(err);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const formatValue = (value, isCurrency = false) => {\n//     if (isNaN(value) || value === undefined) {\n//       return isCurrency ? \"$0.00\" : \"N/A\";\n//     }\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n//   };\n\n//   if (error) {\n//     console.error(\"Error fetching analysis data:\", error);\n//   }\n\n//   if (!analysisResults && !error) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const {\n//     numberOfTrades = 0,\n//     winningTrades = 0,\n//     losingTrades = 0,\n//     winRate = 0,\n//     averageWin = 0,\n//     averageLoss = 0,\n//     riskRewardRatio = 0,\n//     absoluteReturn = 0,\n//     sharpeRatio = 0,\n//   } = analysisResults || {};\n\n//   return (\n// <div className=\"analysis-container\">\n//   <div className=\"analysis-metrics-row\">\n//     <div className=\"analysis-metric\">\n//       <h3>Absolute Return</h3>\n//       <p>{formatValue(absoluteReturn, true)}</p>\n//     </div>\n//     <div className=\"analysis-metric\">\n//       <h3>Sharpe Ratio</h3>\n//       <p>{formatValue(sharpeRatio)}</p>\n//     </div>\n//   </div>\n//   <div className=\"analysis-row\">\n//     <div className=\"analysis-circle\">\n//       <h3>Trades</h3>\n//       <p>{numberOfTrades}</p>\n//     </div>\n//     <div className=\"analysis-circle\">\n//       <h3>Wins</h3>\n//       <p>{winningTrades}</p>\n//     </div>\n//     <div className=\"analysis-circle\">\n//       <h3>Losses</h3>\n//       <p>{losingTrades}</p>\n//     </div>\n//   </div>\n\n//   <div className=\"analysis-metrics-row\">\n//     <div className=\"analysis-metric\">\n//       <h3>Win Rate</h3>\n//       <p>{formatValue(winRate)}%</p>\n//     </div>\n//     <div className=\"analysis-metric\">\n//       <h3>Avg. Win</h3>\n//       <p>{formatValue(averageWin, true)}</p>\n//     </div>\n//     <div className=\"analysis-metric\">\n//       <h3>Avg. Loss</h3>\n//       <p>{formatValue(averageLoss, true)}</p>\n//     </div>\n//     <div className=\"analysis-metric\">\n//       <h3>Risk Reward</h3>\n//       <p>{formatValue(riskRewardRatio)}</p>\n//     </div>\n//   </div>\n// </div>\n//   );\n// };\n\n// export default AnalysisDisplay;","map":{"version":3,"names":["React","useState","useEffect","performAnalysis","RadialBarChart","RadialBar","Tooltip","ResponsiveContainer","ProgressBar","FaInfoCircle","AnalysisDisplay","analysisResults","setAnalysisResults","error","setError","fetchData","results","err","formatValue","value","isCurrency","isNaN","undefined","toFixed","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","profitFactor","winRate","winningTrades","losingTrades","numberOfTrades","averageWin","averageLoss","winLossRatio","absoluteReturn","sharpeRatio","riskRewardRatio","className","width","height","innerRadius","outerRadius","data","startAngle","endAngle","dataKey","fill","cornerRadius","formatter","now","label","variant","key"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { performAnalysis } from \"./AnalysisGet\";\r\nimport {\r\n  RadialBarChart,\r\n  RadialBar,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport { FaInfoCircle } from \"react-icons/fa\";\r\n\r\nconst AnalysisDisplay = () => {\r\n  const [analysisResults, setAnalysisResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const results = await performAnalysis();\r\n        setAnalysisResults(results);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const formatValue = (value, isCurrency = false) => {\r\n    if (isNaN(value) || value === undefined) {\r\n      return isCurrency ? \"$0.00\" : \"N/A\";\r\n    }\r\n    return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n  };\r\n\r\n  if (error) {\r\n    console.error(\"Error fetching analysis data:\", error);\r\n  }\r\n\r\n  if (!analysisResults && !error) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const {\r\n    profitFactor = 0,\r\n    winRate = 0,\r\n    winningTrades = 0,\r\n    losingTrades = 0,\r\n    numberOfTrades = 0,\r\n    averageWin = 0,\r\n    averageLoss = 0,\r\n    winLossRatio = 0,\r\n    absoluteReturn = 0,\r\n    sharpeRatio = 0,\r\n    riskRewardRatio = 0,\r\n  } = analysisResults || {};\r\n\r\n  return (\r\n    <div className=\"analysis-container\">\r\n      {/* Original Metric Cards */}\r\n      <div className=\"analysis-metrics-row\">\r\n        <div className=\"analysis-metric\">\r\n          <h3>Absolute Return</h3>\r\n          <p>{formatValue(absoluteReturn, true)}</p>\r\n        </div>\r\n        <div className=\"analysis-metric\">\r\n          <h3>Sharpe Ratio</h3>\r\n          <p>{formatValue(sharpeRatio)}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"analysis-row\">\r\n        <div className=\"analysis-circle\">\r\n          <h3>Trades</h3>\r\n          <p>{numberOfTrades}</p>\r\n        </div>\r\n        <div className=\"analysis-circle\">\r\n          <h3>Wins</h3>\r\n          <p>{winningTrades}</p>\r\n        </div>\r\n        <div className=\"analysis-circle\">\r\n          <h3>Losses</h3>\r\n          <p>{losingTrades}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"analysis-metrics-row\">\r\n        <div className=\"analysis-metric\">\r\n          <h3>Win Rate</h3>\r\n          <p>{formatValue(winRate)}%</p>\r\n        </div>\r\n        <div className=\"analysis-metric\">\r\n          <h3>Avg. Win</h3>\r\n          <p>{formatValue(averageWin, true)}</p>\r\n        </div>\r\n        <div className=\"analysis-metric\">\r\n          <h3>Avg. Loss</h3>\r\n          <p>{formatValue(averageLoss, true)}</p>\r\n        </div>\r\n        <div className=\"analysis-metric\">\r\n          <h3>Risk Reward</h3>\r\n          <p>{formatValue(riskRewardRatio)}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* New Visual Gauges and Progress Bars */}\r\n      <div className=\"visual-metrics\">\r\n        {/* Profit Factor Card */}\r\n        <div className=\"metric-card\">\r\n          <div className=\"metric-header\">\r\n            <span>\r\n              Profit Factor <FaInfoCircle />\r\n            </span>\r\n          </div>\r\n          <div className=\"metric-content\">\r\n            <ResponsiveContainer width=\"100%\" height={120}>\r\n              <RadialBarChart\r\n                innerRadius=\"80%\"\r\n                outerRadius=\"100%\"\r\n                data={[{ value: profitFactor }]}\r\n                startAngle={180}\r\n                endAngle={0}\r\n              >\r\n                <RadialBar\r\n                  dataKey=\"value\"\r\n                  fill={profitFactor >= 1 ? \"#34a853\" : \"#ea4335\"}\r\n                  cornerRadius={10}\r\n                />\r\n                <Tooltip formatter={(value) => value.toFixed(2)} />\r\n              </RadialBarChart>\r\n            </ResponsiveContainer>\r\n            <p className=\"metric-value\">{profitFactor.toFixed(2)}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Win % Card */}\r\n        <div className=\"metric-card\">\r\n          <div className=\"metric-header\">\r\n            <span>\r\n              Win % <FaInfoCircle />\r\n            </span>\r\n          </div>\r\n          <div className=\"metric-content\">\r\n            <ResponsiveContainer width=\"100%\" height={120}>\r\n              <RadialBarChart\r\n                innerRadius=\"70%\"\r\n                outerRadius=\"100%\"\r\n                data={[{ value: winRate }]}\r\n              >\r\n                <RadialBar\r\n                  dataKey=\"value\"\r\n                  fill={winRate >= 50 ? \"#34a853\" : \"#ea4335\"}\r\n                />\r\n                <Tooltip formatter={(value) => `${value.toFixed(2)}%`} />\r\n              </RadialBarChart>\r\n            </ResponsiveContainer>\r\n            <p className=\"metric-value\">{winRate.toFixed(2)}%</p>\r\n            <div className=\"win-loss-count\">\r\n              <span className=\"win-count\">{winningTrades}</span> /{\" \"}\r\n              <span className=\"loss-count\">{losingTrades}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Avg Win/Loss Trade Card */}\r\n        <div className=\"metric-card\">\r\n          <div className=\"metric-header\">\r\n            <span>\r\n              Avg win/loss trade <FaInfoCircle />\r\n            </span>\r\n          </div>\r\n          <div className=\"metric-content\">\r\n            <p className=\"metric-value\">{winLossRatio.toFixed(1)}</p>\r\n            <ProgressBar>\r\n              <ProgressBar\r\n                now={(averageWin / (averageWin + averageLoss)) * 100}\r\n                label={`$${formatValue(averageWin, true)}`}\r\n                variant=\"success\"\r\n                key={1}\r\n              />\r\n              <ProgressBar\r\n                now={(averageLoss / (averageWin + averageLoss)) * 100}\r\n                label={`$${formatValue(averageLoss, true)}`}\r\n                variant=\"danger\"\r\n                key={2}\r\n              />\r\n            </ProgressBar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisDisplay;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { performAnalysis } from \"./AnalysisGet\";\r\n// import {\r\n//   RadialBarChart,\r\n//   RadialBar,\r\n//   Tooltip,\r\n//   ResponsiveContainer,\r\n// } from \"recharts\";\r\n// import { ProgressBar } from \"react-bootstrap\";\r\n// import { FaInfoCircle } from \"react-icons/fa\"; // For information icons\r\n\r\n// const AnalysisDisplay = () => {\r\n//   const [analysisResults, setAnalysisResults] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const results = await performAnalysis();\r\n//         setAnalysisResults(results);\r\n//       } catch (err) {\r\n//         setError(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const formatValue = (value, isCurrency = false) => {\r\n//     if (isNaN(value) || value === undefined) {\r\n//       return isCurrency ? \"$0.00\" : \"N/A\";\r\n//     }\r\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n//   };\r\n\r\n//   if (error) {\r\n//     console.error(\"Error fetching analysis data:\", error);\r\n//   }\r\n\r\n//   if (!analysisResults && !error) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const {\r\n//     profitFactor = 0,\r\n//     winRate = 0,\r\n//     winningTrades = 0,\r\n//     losingTrades = 0,\r\n//     averageWin = 0,\r\n//     averageLoss = 0,\r\n//     winLossRatio = 0,\r\n//   } = analysisResults || {};\r\n\r\n//   return (\r\n//     <div className=\"analysis-container\">\r\n//       {/* Profit Factor Card */}\r\n//       <div className=\"metric-card\">\r\n//         <div className=\"metric-header\">\r\n//           <span>\r\n//             Profit Factor <FaInfoCircle />\r\n//           </span>\r\n//         </div>\r\n//         <div className=\"metric-content\">\r\n//           <ResponsiveContainer width=\"100%\" height={120}>\r\n//             <RadialBarChart\r\n//               innerRadius=\"80%\"\r\n//               outerRadius=\"100%\"\r\n//               data={[{ value: profitFactor }]}\r\n//               startAngle={180}\r\n//               endAngle={0}\r\n//             >\r\n//               <RadialBar\r\n//                 dataKey=\"value\"\r\n//                 fill={profitFactor >= 1 ? \"#34a853\" : \"#ea4335\"}\r\n//                 cornerRadius={10}\r\n//               />\r\n//               <Tooltip formatter={(value) => value.toFixed(2)} />\r\n//             </RadialBarChart>\r\n//           </ResponsiveContainer>\r\n//           <p className=\"metric-value\">{profitFactor.toFixed(2)}</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Win % Card */}\r\n//       <div className=\"metric-card\">\r\n//         <div className=\"metric-header\">\r\n//           <span>\r\n//             Win % <FaInfoCircle />\r\n//           </span>\r\n//         </div>\r\n//         <div className=\"metric-content\">\r\n//           <ResponsiveContainer width=\"100%\" height={120}>\r\n//             <RadialBarChart\r\n//               innerRadius=\"70%\"\r\n//               outerRadius=\"100%\"\r\n//               data={[{ value: winRate }]}\r\n//             >\r\n//               <RadialBar\r\n//                 dataKey=\"value\"\r\n//                 fill={winRate >= 50 ? \"#34a853\" : \"#ea4335\"}\r\n//               />\r\n//               <Tooltip formatter={(value) => `${value.toFixed(2)}%`} />\r\n//             </RadialBarChart>\r\n//           </ResponsiveContainer>\r\n//           <p className=\"metric-value\">{winRate.toFixed(2)}%</p>\r\n//           <div className=\"win-loss-count\">\r\n//             <span className=\"win-count\">{winningTrades}</span> /{\" \"}\r\n//             <span className=\"loss-count\">{losingTrades}</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Avg Win/Loss Trade Card */}\r\n//       <div className=\"metric-card\">\r\n//         <div className=\"metric-header\">\r\n//           <span>\r\n//             Avg win/loss trade <FaInfoCircle />\r\n//           </span>\r\n//         </div>\r\n//         <div className=\"metric-content\">\r\n//           <p className=\"metric-value\">{winLossRatio.toFixed(1)}</p>\r\n//           <ProgressBar>\r\n//             <ProgressBar\r\n//               now={(averageWin / (averageWin + averageLoss)) * 100}\r\n//               label={`$${formatValue(averageWin, true)}`}\r\n//               variant=\"success\"\r\n//               key={1}\r\n//             />\r\n//             <ProgressBar\r\n//               now={(averageLoss / (averageWin + averageLoss)) * 100}\r\n//               label={`$${formatValue(averageLoss, true)}`}\r\n//               variant=\"danger\"\r\n//               key={2}\r\n//             />\r\n//           </ProgressBar>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisDisplay;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { performAnalysis } from \"./AnalysisGet\";\r\n\r\n// const AnalysisDisplay = () => {\r\n//   const [analysisResults, setAnalysisResults] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const results = await performAnalysis();\r\n//         setAnalysisResults(results);\r\n//       } catch (err) {\r\n//         setError(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const formatValue = (value, isCurrency = false) => {\r\n//     if (isNaN(value) || value === undefined) {\r\n//       return isCurrency ? \"$0.00\" : \"N/A\";\r\n//     }\r\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n//   };\r\n\r\n//   if (error) {\r\n//     console.error(\"Error fetching analysis data:\", error);\r\n//   }\r\n\r\n//   if (!analysisResults && !error) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const {\r\n//     numberOfTrades = 0,\r\n//     winningTrades = 0,\r\n//     losingTrades = 0,\r\n//     winRate = 0,\r\n//     averageWin = 0,\r\n//     averageLoss = 0,\r\n//     riskRewardRatio = 0,\r\n//     absoluteReturn = 0,\r\n//     sharpeRatio = 0,\r\n//   } = analysisResults || {};\r\n\r\n//   return (\r\n// <div className=\"analysis-container\">\r\n//   <div className=\"analysis-metrics-row\">\r\n//     <div className=\"analysis-metric\">\r\n//       <h3>Absolute Return</h3>\r\n//       <p>{formatValue(absoluteReturn, true)}</p>\r\n//     </div>\r\n//     <div className=\"analysis-metric\">\r\n//       <h3>Sharpe Ratio</h3>\r\n//       <p>{formatValue(sharpeRatio)}</p>\r\n//     </div>\r\n//   </div>\r\n//   <div className=\"analysis-row\">\r\n//     <div className=\"analysis-circle\">\r\n//       <h3>Trades</h3>\r\n//       <p>{numberOfTrades}</p>\r\n//     </div>\r\n//     <div className=\"analysis-circle\">\r\n//       <h3>Wins</h3>\r\n//       <p>{winningTrades}</p>\r\n//     </div>\r\n//     <div className=\"analysis-circle\">\r\n//       <h3>Losses</h3>\r\n//       <p>{losingTrades}</p>\r\n//     </div>\r\n//   </div>\r\n\r\n//   <div className=\"analysis-metrics-row\">\r\n//     <div className=\"analysis-metric\">\r\n//       <h3>Win Rate</h3>\r\n//       <p>{formatValue(winRate)}%</p>\r\n//     </div>\r\n//     <div className=\"analysis-metric\">\r\n//       <h3>Avg. Win</h3>\r\n//       <p>{formatValue(averageWin, true)}</p>\r\n//     </div>\r\n//     <div className=\"analysis-metric\">\r\n//       <h3>Avg. Loss</h3>\r\n//       <p>{formatValue(averageLoss, true)}</p>\r\n//     </div>\r\n//     <div className=\"analysis-metric\">\r\n//       <h3>Risk Reward</h3>\r\n//       <p>{formatValue(riskRewardRatio)}</p>\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisDisplay;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module"}