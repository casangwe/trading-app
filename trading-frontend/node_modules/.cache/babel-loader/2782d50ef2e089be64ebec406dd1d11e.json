{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\analysis\\\\AnalysisDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { performAnalysis } from \"./AnalysisGet\";\nconst AnalysisDisplay = () => {\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const results = await performAnalysis();\n        setAnalysisResults(results);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  if (error) {\n    console.error(\"Error fetching analysis data:\", error);\n  }\n  if (!analysisResults && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  const {\n    averageWin = 0,\n    averageLoss = 0\n  } = analysisResults || {};\n  const total = averageWin + averageLoss;\n  const winPercent = total > 0 ? averageWin / total * 100 : 50;\n  const formatCash = value => `$${value.toFixed(2)}`;\n  const data = [{\n    name: \"Average Win\",\n    value: winPercent,\n    color: \"#4a90e2\",\n    amount: averageWin\n  }, {\n    name: \"Average Loss\",\n    value: 100 - winPercent,\n    color: \"#f44336\",\n    amount: averageLoss\n  }];\n  const {\n    absoluteReturn = 0,\n    sharpeRatio = 0,\n    winRate = 0,\n    numberOfTrades = 0,\n    winningTrades = 0,\n    losingTrades = 0,\n    riskRewardRatio = 0\n  } = analysisResults || {};\n  const absoluteReturnPercentage = absoluteReturn / 80 * 100;\n  const sharpeRatioPercentage = sharpeRatio / 3 * 100;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-display-container\",\n    style: {\n      width: \"150px\",\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    innerRadius: 50,\n    outerRadius: 70,\n    dataKey: \"value\",\n    startAngle: 90,\n    endAngle: -270,\n    stroke: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: entry.color,\n    style: {\n      transition: \"filter 0.3s\",\n      filter: \"none\",\n      cursor: \"pointer\",\n      width: \"max-content\",\n      padding: \"10px\",\n      borderRadius: \"50%\"\n    },\n    onMouseEnter: e => {\n      e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\n    },\n    onMouseLeave: e => {\n      e.currentTarget.style.filter = \"none\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          name,\n          amount\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }\n        }, name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"amount\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }\n        }, formatCash(amount)));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: winRateData,\n    innerRadius: 50,\n    outerRadius: 70,\n    startAngle: 90,\n    endAngle: -270,\n    stroke: \"none\",\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, winRateData.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `winrate-cell-${index}`,\n    fill: entry.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"text\", {\n    x: \"50%\",\n    y: \"50%\",\n    textAnchor: \"middle\",\n    dominantBaseline: \"middle\",\n    style: {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      fill: \"#4a90e2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, `${winRate.toFixed(2)}%`), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          name,\n          value\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 23\n          }\n        }, name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"amount\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 23\n          }\n        }, `${value.toFixed(2)}%`));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default AnalysisDisplay;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import { performAnalysis } from \"./AnalysisGet\";\n// // import { Line } from \"rc-progress\";\n\n// // const AnalysisDisplay = () => {\n// //   const [analysisResults, setAnalysisResults] = useState(null);\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       try {\n// //         const results = await performAnalysis();\n// //         setAnalysisResults(results);\n// //       } catch (err) {\n// //         setError(err);\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, []);\n\n// //   const formatValue = (value, isCurrency = false) => {\n// //     if (isNaN(value) || value === undefined) {\n// //       return isCurrency ? \"$0.00\" : \"N/A\";\n// //     }\n// //     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n// //   };\n\n// //   if (error) {\n// //     console.error(\"Error fetching analysis data:\", error);\n// //   }\n\n// //   if (!analysisResults && !error) {\n// //     return <div>Loading...</div>;\n// //   }\n\n// //   const {\n// //     absoluteReturn = 0,\n// //     sharpeRatio = 0,\n// //     winRate = 0,\n// //     numberOfTrades = 0,\n// //     winningTrades = 0,\n// //     losingTrades = 0,\n// //     averageWin = 0,\n// //     averageLoss = 0,\n// //     riskRewardRatio = 0,\n// //   } = analysisResults || {};\n\n// //   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\n// //   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\n\n// //   return (\n// //     <div className=\"analysis-container\">\n// //       <div className=\"analysis-metrics-row\">\n// //         {/* Absolute Return Metric */}\n// //         <div className=\"analysis-metric-top\">\n// //           <h3>Absolute Return</h3>\n// //           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\n// //           <Line\n// //             percent={absoluteReturnPercentage}\n// //             strokeWidth=\"2\"\n// //             trailWidth=\"2\"\n// //             strokeColor={\"#4a90e2\"}\n// //             trailColor=\"#d8e3ef\"\n// //           />\n// //         </div>\n\n// //         {/* Sharpe Ratio Metric */}\n// //         <div className=\"analysis-metric-top\">\n// //           <h3>Sharpe Ratio</h3>\n// //           <p>{formatValue(sharpeRatio)}</p>\n// //           <Line\n// //             percent={sharpeRatioPercentage}\n// //             strokeWidth=\"2\"\n// //             trailWidth=\"2\"\n// //             strokeColor={\"#4a90e2\"}\n// //             trailColor=\"#d8e3ef\"\n// //           />\n// //         </div>\n// //       </div>\n\n// //       {/* Trades, Wins, and Losses Row */}\n// //       <div className=\"analysis-row\">\n// //         <div className=\"analysis-circle\">\n// //           <h3>Trades</h3>\n// //           <p>{numberOfTrades}</p>\n// //         </div>\n// //         <div className=\"analysis-circle\">\n// //           <h3>Wins</h3>\n// //           <p>{winningTrades}</p>\n// //         </div>\n// //         <div className=\"analysis-circle\">\n// //           <h3>Losses</h3>\n// //           <p>{losingTrades}</p>\n// //         </div>\n// //       </div>\n\n// //       {/* Additional Metrics Row */}\n// //       <div className=\"analysis-metrics-row\">\n// //         <div className=\"analysis-metric\">\n// //           <h3>Win Rate</h3>\n// //           <p>{formatValue(winRate)}%</p>\n// //         </div>\n// //         <div className=\"analysis-metric\">\n// //           <h3>Avg. Win</h3>\n// //           <p>{formatValue(averageWin, true)}</p>\n// //         </div>\n// //         <div className=\"analysis-metric\">\n// //           <h3>Avg. Loss</h3>\n// //           <p>{formatValue(averageLoss, true)}</p>\n// //         </div>\n// //         <div className=\"analysis-metric\">\n// //           <h3>Risk Reward</h3>\n// //           <p>{formatValue(riskRewardRatio)}</p>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default AnalysisDisplay;","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Tooltip","ResponsiveContainer","performAnalysis","AnalysisDisplay","analysisResults","setAnalysisResults","error","setError","fetchData","results","err","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","averageWin","averageLoss","total","winPercent","formatCash","value","toFixed","data","name","color","amount","absoluteReturn","sharpeRatio","winRate","numberOfTrades","winningTrades","losingTrades","riskRewardRatio","absoluteReturnPercentage","sharpeRatioPercentage","className","style","width","margin","height","innerRadius","outerRadius","dataKey","startAngle","endAngle","stroke","map","entry","index","key","fill","transition","filter","cursor","padding","borderRadius","onMouseEnter","e","currentTarget","onMouseLeave","content","payload","length","winRateData","x","y","textAnchor","dominantBaseline","fontSize","fontWeight"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { performAnalysis } from \"./AnalysisGet\";\r\n\r\nconst AnalysisDisplay = () => {\r\n  const [analysisResults, setAnalysisResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const results = await performAnalysis();\r\n        setAnalysisResults(results);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    console.error(\"Error fetching analysis data:\", error);\r\n  }\r\n\r\n  if (!analysisResults && !error) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const { averageWin = 0, averageLoss = 0 } = analysisResults || {};\r\n  const total = averageWin + averageLoss;\r\n  const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\r\n  const formatCash = (value) => `$${value.toFixed(2)}`;\r\n\r\n  const data = [\r\n    {\r\n      name: \"Average Win\",\r\n      value: winPercent,\r\n      color: \"#4a90e2\",\r\n      amount: averageWin,\r\n    },\r\n    {\r\n      name: \"Average Loss\",\r\n      value: 100 - winPercent,\r\n      color: \"#f44336\",\r\n      amount: averageLoss,\r\n    },\r\n  ];\r\n  const {\r\n    absoluteReturn = 0,\r\n    sharpeRatio = 0,\r\n    winRate = 0,\r\n    numberOfTrades = 0,\r\n    winningTrades = 0,\r\n    losingTrades = 0,\r\n\r\n    riskRewardRatio = 0,\r\n  } = analysisResults || {};\r\n\r\n  const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\r\n  const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\r\n\r\n  return (\r\n    <div\r\n      className=\"analysis-display-container\"\r\n      style={{ width: \"150px\", margin: \"0 auto\" }}\r\n    >\r\n      <ResponsiveContainer width=\"100%\" height={250}>\r\n        <PieChart>\r\n          <Pie\r\n            data={data}\r\n            innerRadius={50}\r\n            outerRadius={70}\r\n            dataKey=\"value\"\r\n            startAngle={90}\r\n            endAngle={-270}\r\n            stroke=\"none\"\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={entry.color}\r\n                style={{\r\n                  transition: \"filter 0.3s\",\r\n                  filter: \"none\",\r\n                  cursor: \"pointer\",\r\n                  width: \"max-content\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  e.currentTarget.style.filter = \"none\";\r\n                }}\r\n              />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip\r\n            cursor={false}\r\n            content={({ payload }) => {\r\n              if (payload && payload.length) {\r\n                const { name, amount } = payload[0].payload;\r\n                return (\r\n                  <div className=\"tooltip-content\">\r\n                    <p>{name}</p>\r\n                    <p className=\"amount\">{formatCash(amount)}</p>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            }}\r\n          />\r\n        </PieChart>\r\n        <ResponsiveContainer width=\"100%\" height={150}>\r\n          <PieChart>\r\n            <Pie\r\n              data={winRateData}\r\n              innerRadius={50}\r\n              outerRadius={70}\r\n              startAngle={90}\r\n              endAngle={-270}\r\n              stroke=\"none\"\r\n              dataKey=\"value\"\r\n            >\r\n              {winRateData.map((entry, index) => (\r\n                <Cell key={`winrate-cell-${index}`} fill={entry.color} />\r\n              ))}\r\n            </Pie>\r\n            <text\r\n              x=\"50%\"\r\n              y=\"50%\"\r\n              textAnchor=\"middle\"\r\n              dominantBaseline=\"middle\"\r\n              style={{ fontSize: \"18px\", fontWeight: \"bold\", fill: \"#4a90e2\" }}\r\n            >\r\n              {`${winRate.toFixed(2)}%`}\r\n            </text>\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { name, value } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p>{name}</p>\r\n                      <p className=\"amount\">{`${value.toFixed(2)}%`}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisDisplay;\r\n\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import { performAnalysis } from \"./AnalysisGet\";\r\n// // import { Line } from \"rc-progress\";\r\n\r\n// // const AnalysisDisplay = () => {\r\n// //   const [analysisResults, setAnalysisResults] = useState(null);\r\n// //   const [error, setError] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchData = async () => {\r\n// //       try {\r\n// //         const results = await performAnalysis();\r\n// //         setAnalysisResults(results);\r\n// //       } catch (err) {\r\n// //         setError(err);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchData();\r\n// //   }, []);\r\n\r\n// //   const formatValue = (value, isCurrency = false) => {\r\n// //     if (isNaN(value) || value === undefined) {\r\n// //       return isCurrency ? \"$0.00\" : \"N/A\";\r\n// //     }\r\n// //     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n// //   };\r\n\r\n// //   if (error) {\r\n// //     console.error(\"Error fetching analysis data:\", error);\r\n// //   }\r\n\r\n// //   if (!analysisResults && !error) {\r\n// //     return <div>Loading...</div>;\r\n// //   }\r\n\r\n// //   const {\r\n// //     absoluteReturn = 0,\r\n// //     sharpeRatio = 0,\r\n// //     winRate = 0,\r\n// //     numberOfTrades = 0,\r\n// //     winningTrades = 0,\r\n// //     losingTrades = 0,\r\n// //     averageWin = 0,\r\n// //     averageLoss = 0,\r\n// //     riskRewardRatio = 0,\r\n// //   } = analysisResults || {};\r\n\r\n// //   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\r\n// //   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\r\n\r\n// //   return (\r\n// //     <div className=\"analysis-container\">\r\n// //       <div className=\"analysis-metrics-row\">\r\n// //         {/* Absolute Return Metric */}\r\n// //         <div className=\"analysis-metric-top\">\r\n// //           <h3>Absolute Return</h3>\r\n// //           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\r\n// //           <Line\r\n// //             percent={absoluteReturnPercentage}\r\n// //             strokeWidth=\"2\"\r\n// //             trailWidth=\"2\"\r\n// //             strokeColor={\"#4a90e2\"}\r\n// //             trailColor=\"#d8e3ef\"\r\n// //           />\r\n// //         </div>\r\n\r\n// //         {/* Sharpe Ratio Metric */}\r\n// //         <div className=\"analysis-metric-top\">\r\n// //           <h3>Sharpe Ratio</h3>\r\n// //           <p>{formatValue(sharpeRatio)}</p>\r\n// //           <Line\r\n// //             percent={sharpeRatioPercentage}\r\n// //             strokeWidth=\"2\"\r\n// //             trailWidth=\"2\"\r\n// //             strokeColor={\"#4a90e2\"}\r\n// //             trailColor=\"#d8e3ef\"\r\n// //           />\r\n// //         </div>\r\n// //       </div>\r\n\r\n// //       {/* Trades, Wins, and Losses Row */}\r\n// //       <div className=\"analysis-row\">\r\n// //         <div className=\"analysis-circle\">\r\n// //           <h3>Trades</h3>\r\n// //           <p>{numberOfTrades}</p>\r\n// //         </div>\r\n// //         <div className=\"analysis-circle\">\r\n// //           <h3>Wins</h3>\r\n// //           <p>{winningTrades}</p>\r\n// //         </div>\r\n// //         <div className=\"analysis-circle\">\r\n// //           <h3>Losses</h3>\r\n// //           <p>{losingTrades}</p>\r\n// //         </div>\r\n// //       </div>\r\n\r\n// //       {/* Additional Metrics Row */}\r\n// //       <div className=\"analysis-metrics-row\">\r\n// //         <div className=\"analysis-metric\">\r\n// //           <h3>Win Rate</h3>\r\n// //           <p>{formatValue(winRate)}%</p>\r\n// //         </div>\r\n// //         <div className=\"analysis-metric\">\r\n// //           <h3>Avg. Win</h3>\r\n// //           <p>{formatValue(averageWin, true)}</p>\r\n// //         </div>\r\n// //         <div className=\"analysis-metric\">\r\n// //           <h3>Avg. Loss</h3>\r\n// //           <p>{formatValue(averageLoss, true)}</p>\r\n// //         </div>\r\n// //         <div className=\"analysis-metric\">\r\n// //           <h3>Risk Reward</h3>\r\n// //           <p>{formatValue(riskRewardRatio)}</p>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default AnalysisDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}