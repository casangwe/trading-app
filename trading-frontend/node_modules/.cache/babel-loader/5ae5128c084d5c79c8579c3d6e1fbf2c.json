{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\BiggestWinsLosses.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/biggestWinsLosses.css\";\nconst BiggestWinsLosses = ({\n  recentTrades\n}) => {\n  const [showPositive, setShowPositive] = useState(true);\n  const [filteredTrades, setFilteredTrades] = useState([]);\n  useEffect(() => {\n    filterTrades();\n  }, [recentTrades, showPositive]);\n  const filterTrades = () => {\n    if (recentTrades && recentTrades.length > 0) {\n      const positiveTrades = recentTrades.filter(trade => trade.profit >= 0);\n      const negativeTrades = recentTrades.filter(trade => trade.profit < 0);\n      setFilteredTrades(showPositive ? positiveTrades : negativeTrades);\n    }\n  };\n  const toggleProfitDisplay = () => {\n    setShowPositive(!showPositive);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wins-lost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"P/L\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"menu\",\n    onClick: toggleProfitDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"::\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, filteredTrades.map((trade, index) => {\n    const cardItemClasses = `card-item ${trade.profit < 0 ? \"negative\" : \"\"}`;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: cardItemClasses,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, trade.option_symbol), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, \"$\", trade.profit.toFixed(2))));\n  }))));\n};\nexport default BiggestWinsLosses;\n\n// import React, { useState } from \"react\";\n// import \"./styles/biggestWinsLosses.css\";\n\n// const BiggestWinsLosses = ({ recentTrades }) => {\n//   const [showPositive, setShowPositive] = useState(true);\n\n//   const toggleProfitDisplay = () => {\n//     setShowPositive(!showPositive);\n//   };\n\n//   return (\n//     <div className=\"wins-lost\">\n//       <div className=\"card\">\n//         <p>P/L</p>\n//         <p className=\"menu\" onClick={toggleProfitDisplay}>\n//           ::\n//         </p>{\" \"}\n//         {/* Toggle display on click */}\n//       </div>\n//       <div className=\"card-list\">\n//         <ul className=\"cards\">\n//           {recentTrades &&\n//             recentTrades.map((trade, index) => {\n//               const isPositive = trade.profit >= 0;\n//               const shouldDisplay =\n//                 (isPositive && showPositive) || (!isPositive && !showPositive);\n//               const cardItemClasses = `card-item ${\n//                 isPositive ? \"positive\" : \"negative\"\n//               }`;\n\n//               return shouldDisplay ? (\n//                 <li className={cardItemClasses} key={index}>\n//                   <div className=\"card-content\">\n//                     <p>{trade.option_symbol}</p>\n//                     <p>\n//                       $\n//                       {!isNaN(trade.profit)\n//                         ? (trade.profit * 100).toFixed(2)\n//                         : \"N/A\"}\n//                     </p>\n//                   </div>\n//                 </li>\n//               ) : null;\n//             })}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BiggestWinsLosses;\n\n// import React, { useState } from \"react\";\n// import \"./styles/biggestWinsLosses.css\";\n\n// const BiggestWinsLosses = ({ topProfitableTrades }) => {\n//   const [showPositive, setShowPositive] = useState(true);\n\n//   const toggleProfitDisplay = () => {\n//     setShowPositive(!showPositive);\n//   };\n\n//   return (\n//     <div className=\"wins-lost\">\n//       <div className=\"card\">\n//         <p>P/L</p>\n//         <p className=\"menu\" onClick={toggleProfitDisplay}>\n//           ::\n//         </p>{\" \"}\n//         {/* Toggle display on click */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BiggestWinsLosses;\n\n// import React, { useState } from \"react\";\n// import \"./styles/biggestWinsLosses.css\";\n\n// const BiggestWinsLosses = ({ topProfitableTrades }) => {\n//   const [showPositive, setShowPositive] = useState(true);\n\n//   const toggleProfitDisplay = () => {\n//     setShowPositive(!showPositive);\n//   };\n\n//   return (\n//     <div className=\"wins-lost\">\n//       <div className=\"card\">\n//         <p>P/L</p>\n//         <p className=\"menu\" onClick={toggleProfitDisplay}>\n//           ::\n//         </p>{\" \"}\n//         {/* Toggle display on click */}\n//       </div>\n//       <div className=\"card-list\">\n//         <ul className=\"cards\">\n//           {topProfitableTrades &&\n//             topProfitableTrades.map((trade, index) => {\n//               const isPositive = trade.profit >= 0;\n//               const shouldDisplay =\n//                 (isPositive && showPositive) || (!isPositive && !showPositive);\n//               const cardItemClasses = `card-item ${\n//                 !isPositive && !showPositive ? \"negative\" : \"\"\n//               }`;\n\n//               return shouldDisplay ? (\n//                 <li className={cardItemClasses} key={index}>\n//                   <div className=\"card-content\">\n//                     <p>{trade.option_symbol}</p>\n//                     <p>${(trade.profit * 100).toFixed(2)}</p>\n//                   </div>\n//                 </li>\n//               ) : null;\n//             })}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BiggestWinsLosses;","map":{"version":3,"names":["React","useState","useEffect","BiggestWinsLosses","recentTrades","showPositive","setShowPositive","filteredTrades","setFilteredTrades","filterTrades","length","positiveTrades","filter","trade","profit","negativeTrades","toggleProfitDisplay","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","cardItemClasses","key","option_symbol","toFixed"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/BiggestWinsLosses.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/biggestWinsLosses.css\";\r\n\r\nconst BiggestWinsLosses = ({ recentTrades }) => {\r\n  const [showPositive, setShowPositive] = useState(true);\r\n  const [filteredTrades, setFilteredTrades] = useState([]);\r\n\r\n  useEffect(() => {\r\n    filterTrades();\r\n  }, [recentTrades, showPositive]);\r\n\r\n  const filterTrades = () => {\r\n    if (recentTrades && recentTrades.length > 0) {\r\n      const positiveTrades = recentTrades.filter((trade) => trade.profit >= 0);\r\n      const negativeTrades = recentTrades.filter((trade) => trade.profit < 0);\r\n      setFilteredTrades(showPositive ? positiveTrades : negativeTrades);\r\n    }\r\n  };\r\n\r\n  const toggleProfitDisplay = () => {\r\n    setShowPositive(!showPositive);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wins-lost\">\r\n      <div className=\"card\">\r\n        <p>P/L</p>\r\n        <p className=\"menu\" onClick={toggleProfitDisplay}>\r\n          ::\r\n        </p>{\" \"}\r\n        {/* Toggle display on click */}\r\n      </div>\r\n      <div className=\"card-list\">\r\n        <ul className=\"cards\">\r\n          {filteredTrades.map((trade, index) => {\r\n            const cardItemClasses = `card-item ${\r\n              trade.profit < 0 ? \"negative\" : \"\"\r\n            }`;\r\n\r\n            return (\r\n              <li className={cardItemClasses} key={index}>\r\n                <div className=\"card-content\">\r\n                  <p>{trade.option_symbol}</p>\r\n                  <p>${trade.profit.toFixed(2)}</p>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiggestWinsLosses;\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"./styles/biggestWinsLosses.css\";\r\n\r\n// const BiggestWinsLosses = ({ recentTrades }) => {\r\n//   const [showPositive, setShowPositive] = useState(true);\r\n\r\n//   const toggleProfitDisplay = () => {\r\n//     setShowPositive(!showPositive);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"wins-lost\">\r\n//       <div className=\"card\">\r\n//         <p>P/L</p>\r\n//         <p className=\"menu\" onClick={toggleProfitDisplay}>\r\n//           ::\r\n//         </p>{\" \"}\r\n//         {/* Toggle display on click */}\r\n//       </div>\r\n//       <div className=\"card-list\">\r\n//         <ul className=\"cards\">\r\n//           {recentTrades &&\r\n//             recentTrades.map((trade, index) => {\r\n//               const isPositive = trade.profit >= 0;\r\n//               const shouldDisplay =\r\n//                 (isPositive && showPositive) || (!isPositive && !showPositive);\r\n//               const cardItemClasses = `card-item ${\r\n//                 isPositive ? \"positive\" : \"negative\"\r\n//               }`;\r\n\r\n//               return shouldDisplay ? (\r\n//                 <li className={cardItemClasses} key={index}>\r\n//                   <div className=\"card-content\">\r\n//                     <p>{trade.option_symbol}</p>\r\n//                     <p>\r\n//                       $\r\n//                       {!isNaN(trade.profit)\r\n//                         ? (trade.profit * 100).toFixed(2)\r\n//                         : \"N/A\"}\r\n//                     </p>\r\n//                   </div>\r\n//                 </li>\r\n//               ) : null;\r\n//             })}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BiggestWinsLosses;\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"./styles/biggestWinsLosses.css\";\r\n\r\n// const BiggestWinsLosses = ({ topProfitableTrades }) => {\r\n//   const [showPositive, setShowPositive] = useState(true);\r\n\r\n//   const toggleProfitDisplay = () => {\r\n//     setShowPositive(!showPositive);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"wins-lost\">\r\n//       <div className=\"card\">\r\n//         <p>P/L</p>\r\n//         <p className=\"menu\" onClick={toggleProfitDisplay}>\r\n//           ::\r\n//         </p>{\" \"}\r\n//         {/* Toggle display on click */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BiggestWinsLosses;\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"./styles/biggestWinsLosses.css\";\r\n\r\n// const BiggestWinsLosses = ({ topProfitableTrades }) => {\r\n//   const [showPositive, setShowPositive] = useState(true);\r\n\r\n//   const toggleProfitDisplay = () => {\r\n//     setShowPositive(!showPositive);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"wins-lost\">\r\n//       <div className=\"card\">\r\n//         <p>P/L</p>\r\n//         <p className=\"menu\" onClick={toggleProfitDisplay}>\r\n//           ::\r\n//         </p>{\" \"}\r\n//         {/* Toggle display on click */}\r\n//       </div>\r\n//       <div className=\"card-list\">\r\n//         <ul className=\"cards\">\r\n//           {topProfitableTrades &&\r\n//             topProfitableTrades.map((trade, index) => {\r\n//               const isPositive = trade.profit >= 0;\r\n//               const shouldDisplay =\r\n//                 (isPositive && showPositive) || (!isPositive && !showPositive);\r\n//               const cardItemClasses = `card-item ${\r\n//                 !isPositive && !showPositive ? \"negative\" : \"\"\r\n//               }`;\r\n\r\n//               return shouldDisplay ? (\r\n//                 <li className={cardItemClasses} key={index}>\r\n//                   <div className=\"card-content\">\r\n//                     <p>{trade.option_symbol}</p>\r\n//                     <p>${(trade.profit * 100).toFixed(2)}</p>\r\n//                   </div>\r\n//                 </li>\r\n//               ) : null;\r\n//             })}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BiggestWinsLosses;\r\n"],"mappings":"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},"metadata":{},"sourceType":"module"}