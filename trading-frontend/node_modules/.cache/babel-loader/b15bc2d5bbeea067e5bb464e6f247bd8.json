{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\financial\\\\IncomeExpensesComparisonChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchFinancials } from \"../api/FinancialAPI\";\nimport { BarChart, Bar, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { formatDate, formatCash } from \"../func/functions\";\nconst IncomeExpensesComparisonChart = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState([]);\n  const [summary, setSummary] = useState({\n    income: null,\n    expenses: null,\n    date: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const financials = await fetchFinancials();\n        const sortedData = financials.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n        setChartData(formatChartData(sortedData));\n        setSummary(calculateSummary(sortedData));\n      } catch (error) {\n        setError(\"Error fetching financial data\");\n        console.error(\"Error fetching financial data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const calculateSummary = data => {\n    const latestEntry = data[data.length - 1];\n    return {\n      income: (latestEntry === null || latestEntry === void 0 ? void 0 : latestEntry.income) || 0,\n      expenses: (latestEntry === null || latestEntry === void 0 ? void 0 : latestEntry.expenses) || 0,\n      date: formatDate(latestEntry === null || latestEntry === void 0 ? void 0 : latestEntry.entry_date)\n    };\n  };\n  const formatChartData = data => {\n    return data.map(entry => ({\n      date: formatDate(entry.entry_date),\n      income: parseFloat(entry.income),\n      expenses: Math.abs(parseFloat(entry.expenses))\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"income-expenses-comparison-chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"income-summary\",\n    style: {\n      color: \"#4a90e2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, formatCash(summary.income || 0)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"expenses-summary\",\n    style: {\n      color: \"#f44336\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, formatCash(summary.expenses || 0)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"date-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, summary.date || \"Loading...\")), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: chartData,\n    style: {\n      background: \"transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    tick: false,\n    axisLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    formatter: value => formatCash(value),\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          date,\n          income,\n          expenses\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: \"#4a90e2\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }\n        }, \"Income: \", formatCash(income)), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: \"#f44336\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 23\n          }\n        }, \"Expenses: \", formatCash(expenses)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"chart-date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }\n        }, date));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"income\",\n    fill: \"#4a90e2\",\n    barSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"expenses\",\n    fill: \"#f44336\",\n    barSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default IncomeExpensesComparisonChart;\n\n// import React, { useState, useEffect } from \"react\";\n// import { fetchFinancials } from \"../api/FinancialAPI\";\n// import { LineChart, Line, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\n// import { formatDate, formatCash } from \"../func/functions\";\n\n// const IncomeExpensesComparisonChart = () => {\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [chartData, setChartData] = useState([]);\n//   const [summary, setSummary] = useState({\n//     income: null,\n//     expenses: null,\n//     date: null,\n//   });\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const financials = await fetchFinancials();\n//         const sortedData = financials.sort(\n//           (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\n//         );\n\n//         setChartData(formatChartData(sortedData));\n//         setSummary(calculateSummary(sortedData));\n//       } catch (error) {\n//         setError(\"Error fetching financial data\");\n//         console.error(\"Error fetching financial data:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const calculateSummary = (data) => {\n//     const latestEntry = data[data.length - 1];\n//     return {\n//       income: latestEntry?.income || 0,\n//       expenses: latestEntry?.expenses || 0,\n//       date: formatDate(latestEntry?.entry_date),\n//     };\n//   };\n\n//   const formatChartData = (data) => {\n//     return data.map((entry) => ({\n//       date: formatDate(entry.entry_date),\n//       income: parseFloat(entry.income),\n//       expenses: Math.abs(parseFloat(entry.expenses)),\n//     }));\n//   };\n\n//   return (\n//     <div className=\"income-expenses-comparison-chart-container\">\n//       <div className=\"summary-section\">\n//         <p className=\"income-summary\" style={{ color: \"#4a90e2\" }}>\n//           {formatCash(summary.income || 0)}\n//         </p>\n//         <p className=\"expenses-summary\" style={{ color: \"#f44336\" }}>\n//           {formatCash(summary.expenses || 0)}\n//         </p>\n//         <p className=\"date-summary\">{summary.date || \"Loading...\"}</p>\n//       </div>\n\n//       {loading ? (\n//         <div>Loading...</div>\n//       ) : error ? (\n//         <div>{error}</div>\n//       ) : (\n//         <ResponsiveContainer width=\"100%\" height={300}>\n//           <LineChart data={chartData} style={{ background: \"transparent\" }}>\n//             <XAxis dataKey=\"date\" tick={false} axisLine={false} />\n//             <Tooltip\n//               cursor={false}\n//               formatter={(value) => formatCash(value)}\n//               content={({ payload }) => {\n//                 if (payload && payload.length) {\n//                   const { date, income, expenses } = payload[0].payload;\n//                   return (\n//                     <div className=\"tooltip-content\">\n//                       <p style={{ color: \"#4a90e2\" }}>\n//                         Income: {formatCash(income)}\n//                       </p>\n//                       <p style={{ color: \"#f44336\" }}>\n//                         Expenses: {formatCash(expenses)}\n//                       </p>\n//                       <p className=\"chart-date\">{date}</p>\n//                     </div>\n//                   );\n//                 }\n//                 return null;\n//               }}\n//             />\n//             <Line\n//               type=\"monotone\"\n//               dataKey=\"income\"\n//               stroke=\"#4a90e2\"\n//               strokeWidth={2}\n//               dot={false}\n//             />\n//             <Line\n//               type=\"monotone\"\n//               dataKey=\"expenses\"\n//               stroke=\"#f44336\"\n//               strokeWidth={2}\n//               dot={false}\n//             />\n//           </LineChart>\n//         </ResponsiveContainer>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default IncomeExpensesComparisonChart;","map":{"version":3,"names":["React","useState","useEffect","fetchFinancials","BarChart","Bar","XAxis","Tooltip","ResponsiveContainer","formatDate","formatCash","IncomeExpensesComparisonChart","loading","setLoading","error","setError","chartData","setChartData","summary","setSummary","income","expenses","date","fetchData","financials","sortedData","sort","a","b","Date","entry_date","formatChartData","calculateSummary","console","data","latestEntry","length","map","entry","parseFloat","Math","abs","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","width","height","background","dataKey","tick","axisLine","formatter","value","content","payload","fill","barSize"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/financial/IncomeExpensesComparisonChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchFinancials } from \"../api/FinancialAPI\";\r\nimport { BarChart, Bar, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { formatDate, formatCash } from \"../func/functions\";\r\n\r\nconst IncomeExpensesComparisonChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [summary, setSummary] = useState({\r\n    income: null,\r\n    expenses: null,\r\n    date: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const financials = await fetchFinancials();\r\n        const sortedData = financials.sort(\r\n          (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n        );\r\n\r\n        setChartData(formatChartData(sortedData));\r\n        setSummary(calculateSummary(sortedData));\r\n      } catch (error) {\r\n        setError(\"Error fetching financial data\");\r\n        console.error(\"Error fetching financial data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const calculateSummary = (data) => {\r\n    const latestEntry = data[data.length - 1];\r\n    return {\r\n      income: latestEntry?.income || 0,\r\n      expenses: latestEntry?.expenses || 0,\r\n      date: formatDate(latestEntry?.entry_date),\r\n    };\r\n  };\r\n\r\n  const formatChartData = (data) => {\r\n    return data.map((entry) => ({\r\n      date: formatDate(entry.entry_date),\r\n      income: parseFloat(entry.income),\r\n      expenses: Math.abs(parseFloat(entry.expenses)),\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"income-expenses-comparison-chart-container\">\r\n      <div className=\"summary-section\">\r\n        <p className=\"income-summary\" style={{ color: \"#4a90e2\" }}>\r\n          {formatCash(summary.income || 0)}\r\n        </p>\r\n        <p className=\"expenses-summary\" style={{ color: \"#f44336\" }}>\r\n          {formatCash(summary.expenses || 0)}\r\n        </p>\r\n        <p className=\"date-summary\">{summary.date || \"Loading...\"}</p>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={chartData} style={{ background: \"transparent\" }}>\r\n            <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n            <Tooltip\r\n              formatter={(value) => formatCash(value)}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { date, income, expenses } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p style={{ color: \"#4a90e2\" }}>\r\n                        Income: {formatCash(income)}\r\n                      </p>\r\n                      <p style={{ color: \"#f44336\" }}>\r\n                        Expenses: {formatCash(expenses)}\r\n                      </p>\r\n                      <p className=\"chart-date\">{date}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n            <Bar dataKey=\"income\" fill=\"#4a90e2\" barSize={20} />\r\n            <Bar dataKey=\"expenses\" fill=\"#f44336\" barSize={20} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpensesComparisonChart;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { fetchFinancials } from \"../api/FinancialAPI\";\r\n// import { LineChart, Line, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\n// import { formatDate, formatCash } from \"../func/functions\";\r\n\r\n// const IncomeExpensesComparisonChart = () => {\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [chartData, setChartData] = useState([]);\r\n//   const [summary, setSummary] = useState({\r\n//     income: null,\r\n//     expenses: null,\r\n//     date: null,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const financials = await fetchFinancials();\r\n//         const sortedData = financials.sort(\r\n//           (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n//         );\r\n\r\n//         setChartData(formatChartData(sortedData));\r\n//         setSummary(calculateSummary(sortedData));\r\n//       } catch (error) {\r\n//         setError(\"Error fetching financial data\");\r\n//         console.error(\"Error fetching financial data:\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const calculateSummary = (data) => {\r\n//     const latestEntry = data[data.length - 1];\r\n//     return {\r\n//       income: latestEntry?.income || 0,\r\n//       expenses: latestEntry?.expenses || 0,\r\n//       date: formatDate(latestEntry?.entry_date),\r\n//     };\r\n//   };\r\n\r\n//   const formatChartData = (data) => {\r\n//     return data.map((entry) => ({\r\n//       date: formatDate(entry.entry_date),\r\n//       income: parseFloat(entry.income),\r\n//       expenses: Math.abs(parseFloat(entry.expenses)),\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"income-expenses-comparison-chart-container\">\r\n//       <div className=\"summary-section\">\r\n//         <p className=\"income-summary\" style={{ color: \"#4a90e2\" }}>\r\n//           {formatCash(summary.income || 0)}\r\n//         </p>\r\n//         <p className=\"expenses-summary\" style={{ color: \"#f44336\" }}>\r\n//           {formatCash(summary.expenses || 0)}\r\n//         </p>\r\n//         <p className=\"date-summary\">{summary.date || \"Loading...\"}</p>\r\n//       </div>\r\n\r\n//       {loading ? (\r\n//         <div>Loading...</div>\r\n//       ) : error ? (\r\n//         <div>{error}</div>\r\n//       ) : (\r\n//         <ResponsiveContainer width=\"100%\" height={300}>\r\n//           <LineChart data={chartData} style={{ background: \"transparent\" }}>\r\n//             <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n//             <Tooltip\r\n//               cursor={false}\r\n//               formatter={(value) => formatCash(value)}\r\n//               content={({ payload }) => {\r\n//                 if (payload && payload.length) {\r\n//                   const { date, income, expenses } = payload[0].payload;\r\n//                   return (\r\n//                     <div className=\"tooltip-content\">\r\n//                       <p style={{ color: \"#4a90e2\" }}>\r\n//                         Income: {formatCash(income)}\r\n//                       </p>\r\n//                       <p style={{ color: \"#f44336\" }}>\r\n//                         Expenses: {formatCash(expenses)}\r\n//                       </p>\r\n//                       <p className=\"chart-date\">{date}</p>\r\n//                     </div>\r\n//                   );\r\n//                 }\r\n//                 return null;\r\n//               }}\r\n//             />\r\n//             <Line\r\n//               type=\"monotone\"\r\n//               dataKey=\"income\"\r\n//               stroke=\"#4a90e2\"\r\n//               strokeWidth={2}\r\n//               dot={false}\r\n//             />\r\n//             <Line\r\n//               type=\"monotone\"\r\n//               dataKey=\"expenses\"\r\n//               stroke=\"#f44336\"\r\n//               strokeWidth={2}\r\n//               dot={false}\r\n//             />\r\n//           </LineChart>\r\n//         </ResponsiveContainer>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IncomeExpensesComparisonChart;\r\n"],"mappings":"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AA,CAAE,CAC7C,CACS,CAEpB,CAAC;AAEV,CAAC;AAED,eAAetC,6BAA6B;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}