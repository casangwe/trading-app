{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\analysis\\\\AnalysisDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { performAnalysis } from \"./AnalysisGet\";\nimport { RadialBarChart, RadialBar, Tooltip, ResponsiveContainer } from \"recharts\";\nconst AnalysisDisplay = () => {\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const results = await performAnalysis();\n        setAnalysisResults(results);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const formatValue = (value, isCurrency = false) => {\n    return isNaN(value) || value === undefined ? isCurrency ? \"$0.00\" : \"N/A\" : isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n  };\n  const {\n    absoluteReturn = 0,\n    sharpeRatio = 0,\n    winRate = 0,\n    numberOfTrades = 0,\n    winningTrades = 0,\n    losingTrades = 0,\n    averageWin = 0,\n    averageLoss = 0,\n    riskRewardRatio = 0\n  } = analysisResults || {};\n  const analysisData = [{\n    name: \"Absolute Return\",\n    value: absoluteReturn\n  }, {\n    name: \"Sharpe Ratio\",\n    value: sharpeRatio\n  }, {\n    name: \"Win Rate\",\n    value: winRate\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Error loading analysis data\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, analysisData.map(metric => /*#__PURE__*/React.createElement(\"div\", {\n    key: metric.name,\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"metric-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, metric.name), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RadialBarChart, {\n    innerRadius: \"20%\",\n    outerRadius: \"100%\",\n    barSize: 15,\n    data: [metric],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(RadialBar, {\n    minAngle: 15,\n    background: true,\n    clockWise: true,\n    dataKey: \"value\",\n    fill: metric.value >= 0 ? \"#4a90e2\" : \"#e74c3c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, formatValue(metric.value), \"%\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metrics-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Trades\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, numberOfTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Wins\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, winningTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Losses\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, losingTrades))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-metrics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Avg. Win\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, formatValue(averageWin, true))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Avg. Loss\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, formatValue(averageLoss, true))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Risk Reward\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, formatValue(riskRewardRatio))))));\n};\nexport default AnalysisDisplay;\n\n// import React, { useState, useEffect } from \"react\";\n// import { performAnalysis } from \"./AnalysisGet\";\n// import { Line } from \"rc-progress\";\n// // import { FaInfoCircle } from \"react-icons/fa\";\n\n// const AnalysisDisplay = () => {\n//   const [analysisResults, setAnalysisResults] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const results = await performAnalysis();\n//         setAnalysisResults(results);\n//       } catch (err) {\n//         setError(err);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const formatValue = (value, isCurrency = false) => {\n//     if (isNaN(value) || value === undefined) {\n//       return isCurrency ? \"$0.00\" : \"N/A\";\n//     }\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n//   };\n\n//   if (error) {\n//     console.error(\"Error fetching analysis data:\", error);\n//   }\n\n//   if (!analysisResults && !error) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const {\n//     absoluteReturn = 0,\n//     sharpeRatio = 0,\n//     winRate = 0,\n//     numberOfTrades = 0,\n//     winningTrades = 0,\n//     losingTrades = 0,\n//     averageWin = 0,\n//     averageLoss = 0,\n//     riskRewardRatio = 0,\n//   } = analysisResults || {};\n\n//   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\n//   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\n\n//   return (\n//     <div className=\"analysis-container\">\n//       <div className=\"analysis-metrics-row\">\n//         {/* Absolute Return Metric */}\n//         <div className=\"analysis-metric-top\">\n//           <h3>Absolute Return</h3>\n//           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\n//           <Line\n//             percent={absoluteReturnPercentage}\n//             strokeWidth=\"2\"\n//             trailWidth=\"2\"\n//             strokeColor={\"#4a90e2\"}\n//             trailColor=\"#d8e3ef\"\n//           />\n//         </div>\n\n//         {/* Sharpe Ratio Metric */}\n//         <div className=\"analysis-metric-top\">\n//           <h3>Sharpe Ratio</h3>\n//           <p>{formatValue(sharpeRatio)}</p>\n//           <Line\n//             percent={sharpeRatioPercentage}\n//             strokeWidth=\"2\"\n//             trailWidth=\"2\"\n//             strokeColor={\"#4a90e2\"}\n//             trailColor=\"#d8e3ef\"\n//           />\n//         </div>\n//       </div>\n\n//       {/* Trades, Wins, and Losses Row */}\n//       <div className=\"analysis-row\">\n//         <div className=\"analysis-circle\">\n//           <h3>Trades</h3>\n//           <p>{numberOfTrades}</p>\n//         </div>\n//         <div className=\"analysis-circle\">\n//           <h3>Wins</h3>\n//           <p>{winningTrades}</p>\n//         </div>\n//         <div className=\"analysis-circle\">\n//           <h3>Losses</h3>\n//           <p>{losingTrades}</p>\n//         </div>\n//       </div>\n\n//       {/* Additional Metrics Row */}\n//       <div className=\"analysis-metrics-row\">\n//         <div className=\"analysis-metric\">\n//           <h3>Win Rate</h3>\n//           <p>{formatValue(winRate)}%</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Avg. Win</h3>\n//           <p>{formatValue(averageWin, true)}</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Avg. Loss</h3>\n//           <p>{formatValue(averageLoss, true)}</p>\n//         </div>\n//         <div className=\"analysis-metric\">\n//           <h3>Risk Reward</h3>\n//           <p>{formatValue(riskRewardRatio)}</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AnalysisDisplay;","map":{"version":3,"names":["React","useState","useEffect","performAnalysis","RadialBarChart","RadialBar","Tooltip","ResponsiveContainer","AnalysisDisplay","analysisResults","setAnalysisResults","error","setError","fetchData","results","err","formatValue","value","isCurrency","isNaN","undefined","toFixed","absoluteReturn","sharpeRatio","winRate","numberOfTrades","winningTrades","losingTrades","averageWin","averageLoss","riskRewardRatio","analysisData","name","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","map","metric","key","width","height","innerRadius","outerRadius","barSize","data","minAngle","background","clockWise","dataKey","fill"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { performAnalysis } from \"./AnalysisGet\";\r\nimport {\r\n  RadialBarChart,\r\n  RadialBar,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst AnalysisDisplay = () => {\r\n  const [analysisResults, setAnalysisResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const results = await performAnalysis();\r\n        setAnalysisResults(results);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const formatValue = (value, isCurrency = false) => {\r\n    return isNaN(value) || value === undefined\r\n      ? isCurrency\r\n        ? \"$0.00\"\r\n        : \"N/A\"\r\n      : isCurrency\r\n      ? `$${value.toFixed(2)}`\r\n      : `${value.toFixed(2)}`;\r\n  };\r\n\r\n  const {\r\n    absoluteReturn = 0,\r\n    sharpeRatio = 0,\r\n    winRate = 0,\r\n    numberOfTrades = 0,\r\n    winningTrades = 0,\r\n    losingTrades = 0,\r\n    averageWin = 0,\r\n    averageLoss = 0,\r\n    riskRewardRatio = 0,\r\n  } = analysisResults || {};\r\n\r\n  const analysisData = [\r\n    { name: \"Absolute Return\", value: absoluteReturn },\r\n    { name: \"Sharpe Ratio\", value: sharpeRatio },\r\n    { name: \"Win Rate\", value: winRate },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"analysis-container\">\r\n      {error ? (\r\n        <div>Error loading analysis data</div>\r\n      ) : (\r\n        <>\r\n          <div className=\"metric-cards\">\r\n            {analysisData.map((metric) => (\r\n              <div key={metric.name} className=\"metric-card\">\r\n                <h3 className=\"metric-header\">{metric.name}</h3>\r\n                <ResponsiveContainer width=\"100%\" height={100}>\r\n                  <RadialBarChart\r\n                    innerRadius=\"20%\"\r\n                    outerRadius=\"100%\"\r\n                    barSize={15}\r\n                    data={[metric]}\r\n                  >\r\n                    <RadialBar\r\n                      minAngle={15}\r\n                      background\r\n                      clockWise\r\n                      dataKey=\"value\"\r\n                      fill={metric.value >= 0 ? \"#4a90e2\" : \"#e74c3c\"}\r\n                    />\r\n                    <Tooltip />\r\n                  </RadialBarChart>\r\n                </ResponsiveContainer>\r\n                <p className=\"metric-value\">{formatValue(metric.value)}%</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"analysis-metrics-row\">\r\n            <div className=\"analysis-circle\">\r\n              <h3>Trades</h3>\r\n              <p>{numberOfTrades}</p>\r\n            </div>\r\n            <div className=\"analysis-circle\">\r\n              <h3>Wins</h3>\r\n              <p>{winningTrades}</p>\r\n            </div>\r\n            <div className=\"analysis-circle\">\r\n              <h3>Losses</h3>\r\n              <p>{losingTrades}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"additional-metrics\">\r\n            <div className=\"analysis-metric\">\r\n              <h3>Avg. Win</h3>\r\n              <p>{formatValue(averageWin, true)}</p>\r\n            </div>\r\n            <div className=\"analysis-metric\">\r\n              <h3>Avg. Loss</h3>\r\n              <p>{formatValue(averageLoss, true)}</p>\r\n            </div>\r\n            <div className=\"analysis-metric\">\r\n              <h3>Risk Reward</h3>\r\n              <p>{formatValue(riskRewardRatio)}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisDisplay;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { performAnalysis } from \"./AnalysisGet\";\r\n// import { Line } from \"rc-progress\";\r\n// // import { FaInfoCircle } from \"react-icons/fa\";\r\n\r\n// const AnalysisDisplay = () => {\r\n//   const [analysisResults, setAnalysisResults] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const results = await performAnalysis();\r\n//         setAnalysisResults(results);\r\n//       } catch (err) {\r\n//         setError(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const formatValue = (value, isCurrency = false) => {\r\n//     if (isNaN(value) || value === undefined) {\r\n//       return isCurrency ? \"$0.00\" : \"N/A\";\r\n//     }\r\n//     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n//   };\r\n\r\n//   if (error) {\r\n//     console.error(\"Error fetching analysis data:\", error);\r\n//   }\r\n\r\n//   if (!analysisResults && !error) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const {\r\n//     absoluteReturn = 0,\r\n//     sharpeRatio = 0,\r\n//     winRate = 0,\r\n//     numberOfTrades = 0,\r\n//     winningTrades = 0,\r\n//     losingTrades = 0,\r\n//     averageWin = 0,\r\n//     averageLoss = 0,\r\n//     riskRewardRatio = 0,\r\n//   } = analysisResults || {};\r\n\r\n//   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\r\n//   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\r\n\r\n//   return (\r\n//     <div className=\"analysis-container\">\r\n//       <div className=\"analysis-metrics-row\">\r\n//         {/* Absolute Return Metric */}\r\n//         <div className=\"analysis-metric-top\">\r\n//           <h3>Absolute Return</h3>\r\n//           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\r\n//           <Line\r\n//             percent={absoluteReturnPercentage}\r\n//             strokeWidth=\"2\"\r\n//             trailWidth=\"2\"\r\n//             strokeColor={\"#4a90e2\"}\r\n//             trailColor=\"#d8e3ef\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Sharpe Ratio Metric */}\r\n//         <div className=\"analysis-metric-top\">\r\n//           <h3>Sharpe Ratio</h3>\r\n//           <p>{formatValue(sharpeRatio)}</p>\r\n//           <Line\r\n//             percent={sharpeRatioPercentage}\r\n//             strokeWidth=\"2\"\r\n//             trailWidth=\"2\"\r\n//             strokeColor={\"#4a90e2\"}\r\n//             trailColor=\"#d8e3ef\"\r\n//           />\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Trades, Wins, and Losses Row */}\r\n//       <div className=\"analysis-row\">\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Trades</h3>\r\n//           <p>{numberOfTrades}</p>\r\n//         </div>\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Wins</h3>\r\n//           <p>{winningTrades}</p>\r\n//         </div>\r\n//         <div className=\"analysis-circle\">\r\n//           <h3>Losses</h3>\r\n//           <p>{losingTrades}</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Additional Metrics Row */}\r\n//       <div className=\"analysis-metrics-row\">\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Win Rate</h3>\r\n//           <p>{formatValue(winRate)}%</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Avg. Win</h3>\r\n//           <p>{formatValue(averageWin, true)}</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Avg. Loss</h3>\r\n//           <p>{formatValue(averageLoss, true)}</p>\r\n//         </div>\r\n//         <div className=\"analysis-metric\">\r\n//           <h3>Risk Reward</h3>\r\n//           <p>{formatValue(riskRewardRatio)}</p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisDisplay;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,eAAe;AAC/C,SACEC,cAAc,EACdC,SAAS,EACTC,OAAO,EACPC,mBAAmB,QACd,UAAU;AAEjB,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMX,eAAe,CAAC,CAAC;QACvCO,kBAAkB,CAACI,OAAO,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAACG,GAAG,CAAC;MACf;IACF,CAAC;IACDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAGA,CAACC,KAAK,EAAEC,UAAU,GAAG,KAAK,KAAK;IACjD,OAAOC,KAAK,CAACF,KAAK,CAAC,IAAIA,KAAK,KAAKG,SAAS,GACtCF,UAAU,GACR,OAAO,GACP,KAAK,GACPA,UAAU,GACT,IAAGD,KAAK,CAACI,OAAO,CAAC,CAAC,CAAE,EAAC,GACrB,GAAEJ,KAAK,CAACI,OAAO,CAAC,CAAC,CAAE,EAAC;EAC3B,CAAC;EAED,MAAM;IACJC,cAAc,GAAG,CAAC;IAClBC,WAAW,GAAG,CAAC;IACfC,OAAO,GAAG,CAAC;IACXC,cAAc,GAAG,CAAC;IAClBC,aAAa,GAAG,CAAC;IACjBC,YAAY,GAAG,CAAC;IAChBC,UAAU,GAAG,CAAC;IACdC,WAAW,GAAG,CAAC;IACfC,eAAe,GAAG;EACpB,CAAC,GAAGrB,eAAe,IAAI,CAAC,CAAC;EAEzB,MAAMsB,YAAY,GAAG,CACnB;IAAEC,IAAI,EAAE,iBAAiB;IAAEf,KAAK,EAAEK;EAAe,CAAC,EAClD;IAAEU,IAAI,EAAE,cAAc;IAAEf,KAAK,EAAEM;EAAY,CAAC,EAC5C;IAAES,IAAI,EAAE,UAAU;IAAEf,KAAK,EAAEO;EAAQ,CAAC,CACrC;EAED,oBACExB,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChC7B,KAAK,gBACJX,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,6BAAgC,CAAC,gBAEtCxC,KAAA,CAAAiC,aAAA,CAAAjC,KAAA,CAAAyC,QAAA,qBACEzC,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1BT,YAAY,CAACW,GAAG,CAAEC,MAAM,iBACvB3C,KAAA,CAAAiC,aAAA;IAAKW,GAAG,EAAED,MAAM,CAACX,IAAK;IAACE,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CxC,KAAA,CAAAiC,aAAA;IAAIC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEG,MAAM,CAACX,IAAS,CAAC,eAChDhC,KAAA,CAAAiC,aAAA,CAAC1B,mBAAmB;IAACsC,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CxC,KAAA,CAAAiC,aAAA,CAAC7B,cAAc;IACb2C,WAAW,EAAC,KAAK;IACjBC,WAAW,EAAC,MAAM;IAClBC,OAAO,EAAE,EAAG;IACZC,IAAI,EAAE,CAACP,MAAM,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEfxC,KAAA,CAAAiC,aAAA,CAAC5B,SAAS;IACR8C,QAAQ,EAAE,EAAG;IACbC,UAAU;IACVC,SAAS;IACTC,OAAO,EAAC,OAAO;IACfC,IAAI,EAAEZ,MAAM,CAAC1B,KAAK,IAAI,CAAC,GAAG,SAAS,GAAG,SAAU;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjD,CAAC,eACFxC,KAAA,CAAAiC,aAAA,CAAC3B,OAAO;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACI,CACG,CAAC,eACtBxC,KAAA,CAAAiC,aAAA;IAAGC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAExB,WAAW,CAAC2B,MAAM,CAAC1B,KAAK,CAAC,EAAC,GAAI,CACxD,CACN,CACE,CAAC,eAENjB,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnCxC,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,QAAU,CAAC,eACfxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIf,cAAkB,CACnB,CAAC,eACNzB,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,MAAQ,CAAC,eACbxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAId,aAAiB,CAClB,CAAC,eACN1B,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,QAAU,CAAC,eACfxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIb,YAAgB,CACjB,CACF,CAAC,eAEN3B,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjCxC,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIxB,WAAW,CAACY,UAAU,EAAE,IAAI,CAAK,CAClC,CAAC,eACN5B,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,WAAa,CAAC,eAClBxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIxB,WAAW,CAACa,WAAW,EAAE,IAAI,CAAK,CACnC,CAAC,eACN7B,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,aAAe,CAAC,eACpBxC,KAAA,CAAAiC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIxB,WAAW,CAACc,eAAe,CAAK,CACjC,CACF,CACL,CAED,CAAC;AAEV,CAAC;AAED,eAAetB,eAAe;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}