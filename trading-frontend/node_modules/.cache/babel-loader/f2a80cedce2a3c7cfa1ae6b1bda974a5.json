{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\Bars.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst Bars = () => {\n  const [dailyPNLData, setDailyPNLData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [view, setView] = useState(\"daily\");\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        setDailyPNLData(data);\n      } catch (error) {\n        setError(\"Error fetching Daily PNL data\");\n        console.error(\"Error fetching Daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  useEffect(() => {\n    // Trigger animation after component mounts\n    animateBars();\n  }, [dailyPNLData, view]); // Trigger on data change or view change\n\n  const animateBars = () => {\n    const bars = document.querySelectorAll(\".bar\");\n    bars.forEach(bar => {\n      let width = 1;\n      const targetWidth = parseFloat(bar.style.width);\n      const id = setInterval(() => {\n        if (width >= targetWidth) {\n          clearInterval(id);\n        } else {\n          width++;\n          bar.style.width = width + \"%\";\n        }\n      }, 10);\n    });\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, error);\n  const formatMonthYear = dateStr => {\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\n    const dateParts = dateStr.split(\"-\");\n    const month = dateParts[1];\n    const year = dateParts[0];\n    return `${month}/${year}`;\n  };\n  const calculateBars = () => {\n    let balances = [];\n    let labels = [];\n    if (view === \"daily\") {\n      const currentWeek = getCurrentWeek(dailyPNLData);\n      balances = currentWeek.map(day => parseFloat(day.balance));\n      labels = currentWeek.map(day => formatDate(day.entry_date));\n    } else if (view === \"weekly\") {\n      const currentMonth = getCurrentMonth(dailyPNLData);\n      currentMonth.forEach(week => {\n        const weekSum = week.reduce((sum, day) => sum + parseFloat(day.balance), 0);\n        balances.push(weekSum);\n        labels.push(`${formatDate(week[0].entry_date)} - ${formatDate(week[week.length - 1].entry_date)}`);\n      });\n    } else if (view === \"monthly\") {\n      const months = getMonthsData(dailyPNLData);\n      months.forEach(month => {\n        const monthSum = month.reduce((sum, day) => sum + parseFloat(day.balance), 0);\n        balances.push(monthSum);\n        labels.push(formatMonthYear(month[0].entry_date));\n      });\n    }\n    return {\n      balances,\n      labels\n    };\n  };\n  const getCurrentWeek = data => {\n    const weekData = [];\n    const today = new Date();\n    const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));\n    const endOfWeek = new Date(today.setDate(today.getDate() + 6));\n    data.forEach(entry => {\n      const entryDate = new Date(entry.entry_date);\n      if (entryDate >= startOfWeek && entryDate <= endOfWeek) {\n        weekData.push(entry);\n      }\n    });\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n    return weekData;\n  };\n  const getCurrentMonth = data => {\n    const weeks = [];\n    let week = [];\n    const today = new Date();\n    const month = today.getMonth() + 1;\n    data.forEach((entry, index) => {\n      const entryDate = new Date(entry.entry_date);\n      if (entryDate.getMonth() + 1 === month) {\n        week.push(entry);\n        if ((index + 1) % 5 === 0) {\n          week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n          weeks.push(week);\n          week = [];\n        }\n      }\n    });\n    if (week.length) {\n      week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n      weeks.push(week);\n    }\n    return weeks;\n  };\n  const getMonthsData = data => {\n    const months = Array.from({\n      length: 12\n    }, () => []);\n    data.forEach(entry => {\n      const entryDate = new Date(entry.entry_date);\n      months[entryDate.getMonth()].push(entry);\n    });\n    return months.filter(month => month.length > 0);\n  };\n  const {\n    balances,\n    labels\n  } = calculateBars();\n  const maxBalance = Math.max(...balances);\n  const threshold = maxBalance * 2;\n  const headerDate = view === \"daily\" ? new Date(dailyPNLData[0].entry_date).toLocaleDateString() : view === \"weekly\" ? formatMonthYear(dailyPNLData[0].entry_date) : dailyPNLData[0].entry_date.split(\"-\")[0];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-bars-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"daily\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"daily\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Daily\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"weekly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"weekly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Weekly\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${view === \"monthly\" ? \"active\" : \"\"}`,\n    onClick: () => setView(\"monthly\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Monthly\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, headerDate)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bars-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, balances.map((balance, index) => {\n    const percentage = Math.abs(balance) / threshold * 100;\n    const isPositive = balance >= 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"bar-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bar-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, labels[index]), /*#__PURE__*/React.createElement(\"div\", {\n      className: `bar ${isPositive ? \"positive\" : \"negative\"}`,\n      style: {\n        width: \"1%\" // Start small and animate to target width\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bar-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, formatCash(balance))));\n  })));\n};\nexport default Bars;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","formatCash","formatDate","Bars","dailyPNLData","setDailyPNLData","loading","setLoading","error","setError","view","setView","fetchDailyPNLData","data","console","animateBars","bars","document","querySelectorAll","forEach","bar","width","targetWidth","parseFloat","style","id","setInterval","clearInterval","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formatMonthYear","dateStr","includes","dateParts","split","month","year","calculateBars","balances","labels","currentWeek","getCurrentWeek","map","day","balance","entry_date","currentMonth","getCurrentMonth","week","weekSum","reduce","sum","push","length","months","getMonthsData","monthSum","weekData","today","Date","startOfWeek","setDate","getDate","getDay","endOfWeek","entry","entryDate","sort","a","b","weeks","getMonth","index","Array","from","filter","maxBalance","Math","max","threshold","headerDate","toLocaleDateString","className","onClick","percentage","abs","isPositive","key"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/Bars.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst Bars = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [view, setView] = useState(\"daily\");\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n      } catch (error) {\r\n        setError(\"Error fetching Daily PNL data\");\r\n        console.error(\"Error fetching Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Trigger animation after component mounts\r\n    animateBars();\r\n  }, [dailyPNLData, view]); // Trigger on data change or view change\r\n\r\n  const animateBars = () => {\r\n    const bars = document.querySelectorAll(\".bar\");\r\n    bars.forEach((bar) => {\r\n      let width = 1;\r\n      const targetWidth = parseFloat(bar.style.width);\r\n      const id = setInterval(() => {\r\n        if (width >= targetWidth) {\r\n          clearInterval(id);\r\n        } else {\r\n          width++;\r\n          bar.style.width = width + \"%\";\r\n        }\r\n      }, 10);\r\n    });\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const formatMonthYear = (dateStr) => {\r\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\r\n    const dateParts = dateStr.split(\"-\");\r\n    const month = dateParts[1];\r\n    const year = dateParts[0];\r\n    return `${month}/${year}`;\r\n  };\r\n\r\n  const calculateBars = () => {\r\n    let balances = [];\r\n    let labels = [];\r\n\r\n    if (view === \"daily\") {\r\n      const currentWeek = getCurrentWeek(dailyPNLData);\r\n      balances = currentWeek.map((day) => parseFloat(day.balance));\r\n      labels = currentWeek.map((day) => formatDate(day.entry_date));\r\n    } else if (view === \"weekly\") {\r\n      const currentMonth = getCurrentMonth(dailyPNLData);\r\n      currentMonth.forEach((week) => {\r\n        const weekSum = week.reduce(\r\n          (sum, day) => sum + parseFloat(day.balance),\r\n          0\r\n        );\r\n        balances.push(weekSum);\r\n        labels.push(\r\n          `${formatDate(week[0].entry_date)} - ${formatDate(\r\n            week[week.length - 1].entry_date\r\n          )}`\r\n        );\r\n      });\r\n    } else if (view === \"monthly\") {\r\n      const months = getMonthsData(dailyPNLData);\r\n      months.forEach((month) => {\r\n        const monthSum = month.reduce(\r\n          (sum, day) => sum + parseFloat(day.balance),\r\n          0\r\n        );\r\n        balances.push(monthSum);\r\n        labels.push(formatMonthYear(month[0].entry_date));\r\n      });\r\n    }\r\n\r\n    return { balances, labels };\r\n  };\r\n\r\n  const getCurrentWeek = (data) => {\r\n    const weekData = [];\r\n    const today = new Date();\r\n    const startOfWeek = new Date(\r\n      today.setDate(today.getDate() - today.getDay())\r\n    );\r\n    const endOfWeek = new Date(today.setDate(today.getDate() + 6));\r\n\r\n    data.forEach((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      if (entryDate >= startOfWeek && entryDate <= endOfWeek) {\r\n        weekData.push(entry);\r\n      }\r\n    });\r\n\r\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n\r\n    return weekData;\r\n  };\r\n\r\n  const getCurrentMonth = (data) => {\r\n    const weeks = [];\r\n    let week = [];\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n\r\n    data.forEach((entry, index) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      if (entryDate.getMonth() + 1 === month) {\r\n        week.push(entry);\r\n        if ((index + 1) % 5 === 0) {\r\n          week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n          weeks.push(week);\r\n          week = [];\r\n        }\r\n      }\r\n    });\r\n\r\n    if (week.length) {\r\n      week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n      weeks.push(week);\r\n    }\r\n\r\n    return weeks;\r\n  };\r\n\r\n  const getMonthsData = (data) => {\r\n    const months = Array.from({ length: 12 }, () => []);\r\n    data.forEach((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      months[entryDate.getMonth()].push(entry);\r\n    });\r\n    return months.filter((month) => month.length > 0);\r\n  };\r\n\r\n  const { balances, labels } = calculateBars();\r\n  const maxBalance = Math.max(...balances);\r\n  const threshold = maxBalance * 2;\r\n\r\n  const headerDate =\r\n    view === \"daily\"\r\n      ? new Date(dailyPNLData[0].entry_date).toLocaleDateString()\r\n      : view === \"weekly\"\r\n      ? formatMonthYear(dailyPNLData[0].entry_date)\r\n      : dailyPNLData[0].entry_date.split(\"-\")[0];\r\n\r\n  return (\r\n    <div className=\"main-bars-container\">\r\n      <div className=\"header-card\">\r\n        <div className=\"tab-container\">\r\n          <button\r\n            className={`tab-button ${view === \"daily\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"daily\")}\r\n          >\r\n            Daily\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"weekly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"weekly\")}\r\n          >\r\n            Weekly\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"monthly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"monthly\")}\r\n          >\r\n            Monthly\r\n          </button>\r\n        </div>\r\n        <div className=\"header-date\">{headerDate}</div>\r\n      </div>\r\n\r\n      <hr />\r\n      <div className=\"bars-container\">\r\n        {balances.map((balance, index) => {\r\n          const percentage = (Math.abs(balance) / threshold) * 100;\r\n          const isPositive = balance >= 0;\r\n          return (\r\n            <div key={index} className=\"bar-wrapper\">\r\n              <span className=\"bar-label\">{labels[index]}</span>\r\n              <div\r\n                className={`bar ${isPositive ? \"positive\" : \"negative\"}`}\r\n                style={{\r\n                  width: \"1%\", // Start small and animate to target width\r\n                }}\r\n              >\r\n                <span className=\"bar-value\">{formatCash(balance)}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,UAAU,EAAEC,UAAU,QAAQ,mBAAmB;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMb,cAAc,CAAC,CAAC;QACnCK,eAAe,CAACQ,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdC,QAAQ,CAAC,+BAA+B,CAAC;QACzCK,OAAO,CAACN,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd;IACAgB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACX,YAAY,EAAEM,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE1B,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,MAAM,CAAC;IAC9CF,IAAI,CAACG,OAAO,CAAEC,GAAG,IAAK;MACpB,IAAIC,KAAK,GAAG,CAAC;MACb,MAAMC,WAAW,GAAGC,UAAU,CAACH,GAAG,CAACI,KAAK,CAACH,KAAK,CAAC;MAC/C,MAAMI,EAAE,GAAGC,WAAW,CAAC,MAAM;QAC3B,IAAIL,KAAK,IAAIC,WAAW,EAAE;UACxBK,aAAa,CAACF,EAAE,CAAC;QACnB,CAAC,MAAM;UACLJ,KAAK,EAAE;UACPD,GAAG,CAACI,KAAK,CAACH,KAAK,GAAGA,KAAK,GAAG,GAAG;QAC/B;MACF,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,CAAC;EACJ,CAAC;EAED,IAAIf,OAAO,EAAE,oBAAOT,KAAA,CAAA+B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,YAAe,CAAC;EACzC,IAAI1B,KAAK,EAAE,oBAAOX,KAAA,CAAA+B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM1B,KAAW,CAAC;EAEpC,MAAM2B,eAAe,GAAIC,OAAO,IAAK;IACnC,IAAI,CAACA,OAAO,IAAI,CAACA,OAAO,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE;IACjD,MAAMC,SAAS,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;IACpC,MAAMC,KAAK,GAAGF,SAAS,CAAC,CAAC,CAAC;IAC1B,MAAMG,IAAI,GAAGH,SAAS,CAAC,CAAC,CAAC;IACzB,OAAQ,GAAEE,KAAM,IAAGC,IAAK,EAAC;EAC3B,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,MAAM,GAAG,EAAE;IAEf,IAAIlC,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMmC,WAAW,GAAGC,cAAc,CAAC1C,YAAY,CAAC;MAChDuC,QAAQ,GAAGE,WAAW,CAACE,GAAG,CAAEC,GAAG,IAAKzB,UAAU,CAACyB,GAAG,CAACC,OAAO,CAAC,CAAC;MAC5DL,MAAM,GAAGC,WAAW,CAACE,GAAG,CAAEC,GAAG,IAAK9C,UAAU,CAAC8C,GAAG,CAACE,UAAU,CAAC,CAAC;IAC/D,CAAC,MAAM,IAAIxC,IAAI,KAAK,QAAQ,EAAE;MAC5B,MAAMyC,YAAY,GAAGC,eAAe,CAAChD,YAAY,CAAC;MAClD+C,YAAY,CAAChC,OAAO,CAAEkC,IAAI,IAAK;QAC7B,MAAMC,OAAO,GAAGD,IAAI,CAACE,MAAM,CACzB,CAACC,GAAG,EAAER,GAAG,KAAKQ,GAAG,GAAGjC,UAAU,CAACyB,GAAG,CAACC,OAAO,CAAC,EAC3C,CACF,CAAC;QACDN,QAAQ,CAACc,IAAI,CAACH,OAAO,CAAC;QACtBV,MAAM,CAACa,IAAI,CACR,GAAEvD,UAAU,CAACmD,IAAI,CAAC,CAAC,CAAC,CAACH,UAAU,CAAE,MAAKhD,UAAU,CAC/CmD,IAAI,CAACA,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC,CAACR,UACxB,CAAE,EACJ,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIxC,IAAI,KAAK,SAAS,EAAE;MAC7B,MAAMiD,MAAM,GAAGC,aAAa,CAACxD,YAAY,CAAC;MAC1CuD,MAAM,CAACxC,OAAO,CAAEqB,KAAK,IAAK;QACxB,MAAMqB,QAAQ,GAAGrB,KAAK,CAACe,MAAM,CAC3B,CAACC,GAAG,EAAER,GAAG,KAAKQ,GAAG,GAAGjC,UAAU,CAACyB,GAAG,CAACC,OAAO,CAAC,EAC3C,CACF,CAAC;QACDN,QAAQ,CAACc,IAAI,CAACI,QAAQ,CAAC;QACvBjB,MAAM,CAACa,IAAI,CAACtB,eAAe,CAACK,KAAK,CAAC,CAAC,CAAC,CAACU,UAAU,CAAC,CAAC;MACnD,CAAC,CAAC;IACJ;IAEA,OAAO;MAAEP,QAAQ;MAAEC;IAAO,CAAC;EAC7B,CAAC;EAED,MAAME,cAAc,GAAIjC,IAAI,IAAK;IAC/B,MAAMiD,QAAQ,GAAG,EAAE;IACnB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAG,IAAID,IAAI,CAC1BD,KAAK,CAACG,OAAO,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAAC,CAChD,CAAC;IACD,MAAMC,SAAS,GAAG,IAAIL,IAAI,CAACD,KAAK,CAACG,OAAO,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAE9DtD,IAAI,CAACM,OAAO,CAAEmD,KAAK,IAAK;MACtB,MAAMC,SAAS,GAAG,IAAIP,IAAI,CAACM,KAAK,CAACpB,UAAU,CAAC;MAC5C,IAAIqB,SAAS,IAAIN,WAAW,IAAIM,SAAS,IAAIF,SAAS,EAAE;QACtDP,QAAQ,CAACL,IAAI,CAACa,KAAK,CAAC;MACtB;IACF,CAAC,CAAC;IAEFR,QAAQ,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIV,IAAI,CAACS,CAAC,CAACvB,UAAU,CAAC,GAAG,IAAIc,IAAI,CAACU,CAAC,CAACxB,UAAU,CAAC,CAAC;IAExE,OAAOY,QAAQ;EACjB,CAAC;EAED,MAAMV,eAAe,GAAIvC,IAAI,IAAK;IAChC,MAAM8D,KAAK,GAAG,EAAE;IAChB,IAAItB,IAAI,GAAG,EAAE;IACb,MAAMU,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMxB,KAAK,GAAGuB,KAAK,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC;IAElC/D,IAAI,CAACM,OAAO,CAAC,CAACmD,KAAK,EAAEO,KAAK,KAAK;MAC7B,MAAMN,SAAS,GAAG,IAAIP,IAAI,CAACM,KAAK,CAACpB,UAAU,CAAC;MAC5C,IAAIqB,SAAS,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAKpC,KAAK,EAAE;QACtCa,IAAI,CAACI,IAAI,CAACa,KAAK,CAAC;QAChB,IAAI,CAACO,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;UACzBxB,IAAI,CAACmB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIV,IAAI,CAACS,CAAC,CAACvB,UAAU,CAAC,GAAG,IAAIc,IAAI,CAACU,CAAC,CAACxB,UAAU,CAAC,CAAC;UACpEyB,KAAK,CAAClB,IAAI,CAACJ,IAAI,CAAC;UAChBA,IAAI,GAAG,EAAE;QACX;MACF;IACF,CAAC,CAAC;IAEF,IAAIA,IAAI,CAACK,MAAM,EAAE;MACfL,IAAI,CAACmB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIV,IAAI,CAACS,CAAC,CAACvB,UAAU,CAAC,GAAG,IAAIc,IAAI,CAACU,CAAC,CAACxB,UAAU,CAAC,CAAC;MACpEyB,KAAK,CAAClB,IAAI,CAACJ,IAAI,CAAC;IAClB;IAEA,OAAOsB,KAAK;EACd,CAAC;EAED,MAAMf,aAAa,GAAI/C,IAAI,IAAK;IAC9B,MAAM8C,MAAM,GAAGmB,KAAK,CAACC,IAAI,CAAC;MAAErB,MAAM,EAAE;IAAG,CAAC,EAAE,MAAM,EAAE,CAAC;IACnD7C,IAAI,CAACM,OAAO,CAAEmD,KAAK,IAAK;MACtB,MAAMC,SAAS,GAAG,IAAIP,IAAI,CAACM,KAAK,CAACpB,UAAU,CAAC;MAC5CS,MAAM,CAACY,SAAS,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACnB,IAAI,CAACa,KAAK,CAAC;IAC1C,CAAC,CAAC;IACF,OAAOX,MAAM,CAACqB,MAAM,CAAExC,KAAK,IAAKA,KAAK,CAACkB,MAAM,GAAG,CAAC,CAAC;EACnD,CAAC;EAED,MAAM;IAAEf,QAAQ;IAAEC;EAAO,CAAC,GAAGF,aAAa,CAAC,CAAC;EAC5C,MAAMuC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGxC,QAAQ,CAAC;EACxC,MAAMyC,SAAS,GAAGH,UAAU,GAAG,CAAC;EAEhC,MAAMI,UAAU,GACd3E,IAAI,KAAK,OAAO,GACZ,IAAIsD,IAAI,CAAC5D,YAAY,CAAC,CAAC,CAAC,CAAC8C,UAAU,CAAC,CAACoC,kBAAkB,CAAC,CAAC,GACzD5E,IAAI,KAAK,QAAQ,GACjByB,eAAe,CAAC/B,YAAY,CAAC,CAAC,CAAC,CAAC8C,UAAU,CAAC,GAC3C9C,YAAY,CAAC,CAAC,CAAC,CAAC8C,UAAU,CAACX,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE9C,oBACE1C,KAAA,CAAA+B,aAAA;IAAK2D,SAAS,EAAC,qBAAqB;IAAA1D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCrC,KAAA,CAAA+B,aAAA;IAAK2D,SAAS,EAAC,aAAa;IAAA1D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BrC,KAAA,CAAA+B,aAAA;IAAK2D,SAAS,EAAC,eAAe;IAAA1D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BrC,KAAA,CAAA+B,aAAA;IACE2D,SAAS,EAAG,cAAa7E,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAG,EAAE;IAC5D8E,OAAO,EAAEA,CAAA,KAAM7E,OAAO,CAAC,OAAO,CAAE;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjC,OAEO,CAAC,eACTrC,KAAA,CAAA+B,aAAA;IACE2D,SAAS,EAAG,cAAa7E,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAG,EAAE;IAC7D8E,OAAO,EAAEA,CAAA,KAAM7E,OAAO,CAAC,QAAQ,CAAE;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClC,QAEO,CAAC,eACTrC,KAAA,CAAA+B,aAAA;IACE2D,SAAS,EAAG,cAAa7E,IAAI,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG,EAAE;IAC9D8E,OAAO,EAAEA,CAAA,KAAM7E,OAAO,CAAC,SAAS,CAAE;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnC,SAEO,CACL,CAAC,eACNrC,KAAA,CAAA+B,aAAA;IAAK2D,SAAS,EAAC,aAAa;IAAA1D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEmD,UAAgB,CAC3C,CAAC,eAENxF,KAAA,CAAA+B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eACNrC,KAAA,CAAA+B,aAAA;IAAK2D,SAAS,EAAC,gBAAgB;IAAA1D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5BS,QAAQ,CAACI,GAAG,CAAC,CAACE,OAAO,EAAE4B,KAAK,KAAK;IAChC,MAAMY,UAAU,GAAIP,IAAI,CAACQ,GAAG,CAACzC,OAAO,CAAC,GAAGmC,SAAS,GAAI,GAAG;IACxD,MAAMO,UAAU,GAAG1C,OAAO,IAAI,CAAC;IAC/B,oBACEpD,KAAA,CAAA+B,aAAA;MAAKgE,GAAG,EAAEf,KAAM;MAACU,SAAS,EAAC,aAAa;MAAA1D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACtCrC,KAAA,CAAA+B,aAAA;MAAM2D,SAAS,EAAC,WAAW;MAAA1D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEU,MAAM,CAACiC,KAAK,CAAQ,CAAC,eAClDhF,KAAA,CAAA+B,aAAA;MACE2D,SAAS,EAAG,OAAMI,UAAU,GAAG,UAAU,GAAG,UAAW,EAAE;MACzDnE,KAAK,EAAE;QACLH,KAAK,EAAE,IAAI,CAAE;MACf,CAAE;MAAAQ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAEFrC,KAAA,CAAA+B,aAAA;MAAM2D,SAAS,EAAC,WAAW;MAAA1D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEjC,UAAU,CAACgD,OAAO,CAAQ,CACpD,CACF,CAAC;EAEV,CAAC,CACE,CACF,CAAC;AAEV,CAAC;AAED,eAAe9C,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}