{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\analysis\\\\AnalysisDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\nimport { performAnalysis } from \"./AnalysisGet\";\nimport { Line } from \"rc-progress\";\nconst AnalysisDisplay = () => {\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const results = await performAnalysis();\n        setAnalysisResults(results);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  if (error) {\n    console.error(\"Error fetching analysis data:\", error);\n  }\n  if (!analysisResults && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  const {\n    absoluteReturn = 0,\n    sharpeRatio = 0,\n    winRate = 0,\n    numberOfTrades = 0,\n    winningTrades = 0,\n    losingTrades = 0,\n    averageWin = 0,\n    averageLoss = 0,\n    riskRewardRatio = 0\n  } = analysisResults || {};\n  const total = averageWin + averageLoss;\n  const winPercent = total > 0 ? averageWin / total * 100 : 50;\n  const formatCash = value => `$${value.toFixed(2)}`;\n  const absoluteReturnPercentage = absoluteReturn * 100;\n  const sharpeRatioPercentage = sharpeRatio / 3 * 100;\n  const data = [{\n    name: \"Average Win\",\n    value: winPercent,\n    color: \"#4a90e2\",\n    amount: averageWin\n  }, {\n    name: \"Average Loss\",\n    value: 100 - winPercent,\n    color: \"#f44336\",\n    amount: averageLoss\n  }];\n  const winRateData = [{\n    name: \"Win Rate\",\n    value: winRate,\n    color: \"#4a90e2\"\n  }, {\n    name: \"Remaining\",\n    value: 100 - winRate,\n    color: \"#d8e3ef\"\n  }];\n  const formatValue = (value, isCurrency = false) => {\n    if (isNaN(value) || value === undefined) {\n      return isCurrency ? \"$0.00\" : \"N/A\";\n    }\n    return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Trades\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, numberOfTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Wins\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, winningTrades)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Losses\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, losingTrades))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Absolute Return\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, `${absoluteReturn.toFixed(2) * 100}%`), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: [{\n      name: \"Abs. Return\",\n      value: absoluteReturnPercentage.toFixed(2)\n    }],\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    type: \"number\",\n    domain: [0, 100],\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    type: \"category\",\n    dataKey: \"name\",\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"value\",\n    fill: absoluteReturnPercentage >= 50 ? \"#4a90e2\" : \"#e74c3c\",\n    background: {\n      fill: \"#d8e3ef\",\n      radius: [5, 5, 5, 5]\n    },\n    isAnimationActive: true,\n    radius: [5, 5, 5, 5],\n    barSize: 55,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Sharpe Ratio\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, sharpeRatio.toFixed(2)), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: [{\n      name: \"Sharpe Ratio\",\n      value: sharpeRatioPercentage\n    }],\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    type: \"number\",\n    domain: [0, 100],\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    type: \"category\",\n    dataKey: \"name\",\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"value\",\n    fill: sharpeRatio >= 3 ? \"#4a90e2\" : \"#f44336\",\n    background: {\n      fill: \"#d8e3ef\"\n    },\n    isAnimationActive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-circle-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: winRateData,\n    innerRadius: 50,\n    outerRadius: 70,\n    startAngle: 90,\n    endAngle: -270,\n    stroke: \"none\",\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, winRateData.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `winrate-cell-${index}`,\n    fill: entry.color,\n    style: {\n      transition: \"filter 0.3s\",\n      cursor: entry.name === \"Win Rate\" ? \"pointer\" : \"default\"\n    },\n    onMouseEnter: e => {\n      if (entry.name === \"Win Rate\") {\n        e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\n      }\n    },\n    onMouseLeave: e => {\n      e.currentTarget.style.filter = \"none\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length && payload[0].payload.name === \"Win Rate\") {\n        const {\n          name,\n          value\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 23\n          }\n        }, name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"amount\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 23\n          }\n        }, `${value.toFixed(2)}%`));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    innerRadius: 50,\n    outerRadius: 70,\n    dataKey: \"value\",\n    startAngle: 90,\n    endAngle: -270,\n    stroke: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: entry.color,\n    style: {\n      transition: \"filter 0.3s\",\n      cursor: \"pointer\"\n    },\n    onMouseEnter: e => {\n      e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\n    },\n    onMouseLeave: e => {\n      e.currentTarget.style.filter = \"none\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: false,\n    content: ({\n      payload\n    }) => {\n      if (payload && payload.length) {\n        const {\n          name,\n          amount\n        } = payload[0].payload;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tooltip-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 23\n          }\n        }, name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"amount\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 23\n          }\n        }, formatCash(amount)));\n      }\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default AnalysisDisplay;\n\n// import React, { useState, useEffect } from \"react\";\n// import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\n// import { performAnalysis } from \"./AnalysisGet\";\n\n// const AnalysisDisplay = () => {\n//   const [analysisResults, setAnalysisResults] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const results = await performAnalysis();\n//         setAnalysisResults(results);\n//       } catch (err) {\n//         setError(err);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (error) {\n//     console.error(\"Error fetching analysis data:\", error);\n//   }\n\n//   if (!analysisResults && !error) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const {\n//     averageWin = 0,\n//     averageLoss = 0,\n//     winRate = 0,\n//   } = analysisResults || {};\n//   const total = averageWin + averageLoss;\n//   const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\n//   const formatCash = (value) => `$${value.toFixed(2)}`;\n\n//   const data = [\n//     {\n//       name: \"Average Win\",\n//       value: winPercent,\n//       color: \"#4a90e2\",\n//       amount: averageWin,\n//     },\n//     {\n//       name: \"Average Loss\",\n//       value: 100 - winPercent,\n//       color: \"#f44336\",\n//       amount: averageLoss,\n//     },\n//   ];\n\n//   const winRateData = [\n//     { name: \"Win Rate\", value: winRate, color: \"#4a90e2\" },\n//     { name: \"Remaining\", value: 100 - winRate, color: \"#d8e3ef\" },\n//   ];\n\n//   return (\n//     <div\n//       className=\"analysis-display-container\"\n//       style={{ width: \"150px\", margin: \"0 auto\" }}\n//     >\n//       {/* Main Chart for Average Win and Loss */}\n//       <ResponsiveContainer width=\"100%\" height={250}>\n//         <PieChart>\n//           <Pie\n//             data={data}\n//             innerRadius={50}\n//             outerRadius={70}\n//             dataKey=\"value\"\n//             startAngle={90}\n//             endAngle={-270}\n//             stroke=\"none\"\n//           >\n//             {data.map((entry, index) => (\n//               <Cell\n//                 key={`cell-${index}`}\n//                 fill={entry.color}\n//                 style={{\n//                   transition: \"filter 0.3s\",\n//                   cursor: \"pointer\",\n//                 }}\n//                 onMouseEnter={(e) => {\n//                   e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\n//                 }}\n//                 onMouseLeave={(e) => {\n//                   e.currentTarget.style.filter = \"none\";\n//                 }}\n//               />\n//             ))}\n//           </Pie>\n//           <Tooltip\n//             cursor={false}\n//             content={({ payload }) => {\n//               if (payload && payload.length) {\n//                 const { name, amount } = payload[0].payload;\n//                 return (\n//                   <div className=\"tooltip-content\">\n//                     <p>{name}</p>\n//                     <p className=\"amount\">{formatCash(amount)}</p>\n//                   </div>\n//                 );\n//               }\n//               return null;\n//             }}\n//           />\n//         </PieChart>\n//       </ResponsiveContainer>\n\n//       <div style={{ marginTop: \"20px\" }}>\n//         <ResponsiveContainer width=\"100%\" height={150}>\n//           <PieChart>\n//             <Pie\n//               data={winRateData}\n//               innerRadius={50}\n//               outerRadius={70}\n//               startAngle={90}\n//               endAngle={-270}\n//               stroke=\"none\"\n//               dataKey=\"value\"\n//             >\n//               {winRateData.map((entry, index) => (\n//                 <Cell key={`winrate-cell-${index}`} fill={entry.color} />\n//               ))}\n//             </Pie>\n\n//             <Tooltip\n//               cursor={false}\n//               content={({ payload }) => {\n//                 if (payload && payload.length) {\n//                   const { name, value } = payload[0].payload;\n//                   return (\n//                     <div className=\"tooltip-content\">\n//                       <p>{name}</p>\n//                       <p className=\"amount\">{`${value.toFixed(2)}%`}</p>\n//                     </div>\n//                   );\n//                 }\n//                 return null;\n//               }}\n//             />\n//           </PieChart>\n//         </ResponsiveContainer>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AnalysisDisplay;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\n// // import { performAnalysis } from \"./AnalysisGet\";\n\n// // const AnalysisDisplay = () => {\n// //   const [analysisResults, setAnalysisResults] = useState(null);\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       try {\n// //         const results = await performAnalysis();\n// //         setAnalysisResults(results);\n// //       } catch (err) {\n// //         setError(err);\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, []);\n\n// //   if (error) {\n// //     console.error(\"Error fetching analysis data:\", error);\n// //   }\n\n// //   if (!analysisResults && !error) {\n// //     return <div>Loading...</div>;\n// //   }\n\n// //   const { averageWin = 0, averageLoss = 0 } = analysisResults || {};\n// //   const total = averageWin + averageLoss;\n// //   const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\n// //   const formatCash = (value) => `$${value.toFixed(2)}`;\n\n// //   const data = [\n// //     {\n// //       name: \"Average Win\",\n// //       value: winPercent,\n// //       color: \"#4a90e2\",\n// //       amount: averageWin,\n// //     },\n// //     {\n// //       name: \"Average Loss\",\n// //       value: 100 - winPercent,\n// //       color: \"#f44336\",\n// //       amount: averageLoss,\n// //     },\n// //   ];\n\n// //   return (\n// //     <div\n// //       className=\"analysis-display-container\"\n// //       style={{ width: \"150px\", margin: \"0 auto\" }}\n// //     >\n// //       <ResponsiveContainer width=\"100%\" height={250}>\n// //         <PieChart>\n// //           <Pie\n// //             data={data}\n// //             innerRadius={50}\n// //             outerRadius={70}\n// //             dataKey=\"value\"\n// //             startAngle={90}\n// //             endAngle={-270}\n// //             stroke=\"none\"\n// //           >\n// //             {data.map((entry, index) => (\n// //               <Cell\n// //                 key={`cell-${index}`}\n// //                 fill={entry.color}\n// //                 style={{\n// //                   transition: \"filter 0.3s\",\n// //                   filter: \"none\",\n// //                   cursor: \"pointer\",\n// //                   width: \"max-content\",\n// //                   padding: \"10px\",\n// //                   borderRadius: \"50%\",\n// //                 }}\n// //                 onMouseEnter={(e) => {\n// //                   e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\n// //                 }}\n// //                 onMouseLeave={(e) => {\n// //                   e.currentTarget.style.filter = \"none\";\n// //                 }}\n// //               />\n// //             ))}\n// //           </Pie>\n// //           <Tooltip\n// //             cursor={false}\n// //             content={({ payload }) => {\n// //               if (payload && payload.length) {\n// //                 const { name, amount } = payload[0].payload;\n// //                 return (\n// //                   <div className=\"tooltip-content\">\n// //                     <p>{name}</p>\n// //                     <p className=\"amount\">{formatCash(amount)}</p>\n// //                   </div>\n// //                 );\n// //               }\n// //               return null;\n// //             }}\n// //           />\n// //         </PieChart>\n// //       </ResponsiveContainer>\n// //     </div>\n// //   );\n// // };\n\n// // export default AnalysisDisplay;\n\n// // // import React, { useState, useEffect } from \"react\";\n// // // import { performAnalysis } from \"./AnalysisGet\";\n// // // import { Line } from \"rc-progress\";\n\n// // // const AnalysisDisplay = () => {\n// // //   const [analysisResults, setAnalysisResults] = useState(null);\n// // //   const [error, setError] = useState(null);\n\n// // //   useEffect(() => {\n// // //     const fetchData = async () => {\n// // //       try {\n// // //         const results = await performAnalysis();\n// // //         setAnalysisResults(results);\n// // //       } catch (err) {\n// // //         setError(err);\n// // //       }\n// // //     };\n\n// // //     fetchData();\n// // //   }, []);\n\n// // //   const formatValue = (value, isCurrency = false) => {\n// // //     if (isNaN(value) || value === undefined) {\n// // //       return isCurrency ? \"$0.00\" : \"N/A\";\n// // //     }\n// // //     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\n// // //   };\n\n// // //   if (error) {\n// // //     console.error(\"Error fetching analysis data:\", error);\n// // //   }\n\n// // //   if (!analysisResults && !error) {\n// // //     return <div>Loading...</div>;\n// // //   }\n\n// // //   const {\n// // //     absoluteReturn = 0,\n// // //     sharpeRatio = 0,\n// // //     winRate = 0,\n// // //     numberOfTrades = 0,\n// // //     winningTrades = 0,\n// // //     losingTrades = 0,\n// // //     averageWin = 0,\n// // //     averageLoss = 0,\n// // //     riskRewardRatio = 0,\n// // //   } = analysisResults || {};\n\n// // //   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\n// // //   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\n\n// // //   return (\n// // //     <div className=\"analysis-container\">\n// // //       <div className=\"analysis-metrics-row\">\n// // //         {/* Absolute Return Metric */}\n// // //         <div className=\"analysis-metric-top\">\n// // //           <h3>Absolute Return</h3>\n// // //           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\n// // //           <Line\n// // //             percent={absoluteReturnPercentage}\n// // //             strokeWidth=\"2\"\n// // //             trailWidth=\"2\"\n// // //             strokeColor={\"#4a90e2\"}\n// // //             trailColor=\"#d8e3ef\"\n// // //           />\n// // //         </div>\n\n// // //         {/* Sharpe Ratio Metric */}\n// // //         <div className=\"analysis-metric-top\">\n// // //           <h3>Sharpe Ratio</h3>\n// // //           <p>{formatValue(sharpeRatio)}</p>\n// // //           <Line\n// // //             percent={sharpeRatioPercentage}\n// // //             strokeWidth=\"2\"\n// // //             trailWidth=\"2\"\n// // //             strokeColor={\"#4a90e2\"}\n// // //             trailColor=\"#d8e3ef\"\n// // //           />\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Trades, Wins, and Losses Row */}\n// // //       <div className=\"analysis-row\">\n// // //         <div className=\"analysis-circle\">\n// // //           <h3>Trades</h3>\n// // //           <p>{numberOfTrades}</p>\n// // //         </div>\n// // //         <div className=\"analysis-circle\">\n// // //           <h3>Wins</h3>\n// // //           <p>{winningTrades}</p>\n// // //         </div>\n// // //         <div className=\"analysis-circle\">\n// // //           <h3>Losses</h3>\n// // //           <p>{losingTrades}</p>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Additional Metrics Row */}\n// // //       <div className=\"analysis-metrics-row\">\n// // //         <div className=\"analysis-metric\">\n// // //           <h3>Win Rate</h3>\n// // //           <p>{formatValue(winRate)}%</p>\n// // //         </div>\n// // //         <div className=\"analysis-metric\">\n// // //           <h3>Avg. Win</h3>\n// // //           <p>{formatValue(averageWin, true)}</p>\n// // //         </div>\n// // //         <div className=\"analysis-metric\">\n// // //           <h3>Avg. Loss</h3>\n// // //           <p>{formatValue(averageLoss, true)}</p>\n// // //         </div>\n// // //         <div className=\"analysis-metric\">\n// // //           <h3>Risk Reward</h3>\n// // //           <p>{formatValue(riskRewardRatio)}</p>\n// // //         </div>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default AnalysisDisplay;","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","PieChart","Pie","Cell","ResponsiveContainer","performAnalysis","Line","AnalysisDisplay","analysisResults","setAnalysisResults","error","setError","fetchData","results","err","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","absoluteReturn","sharpeRatio","winRate","numberOfTrades","winningTrades","losingTrades","averageWin","averageLoss","riskRewardRatio","total","winPercent","formatCash","value","toFixed","absoluteReturnPercentage","sharpeRatioPercentage","data","name","color","amount","winRateData","formatValue","isCurrency","isNaN","undefined","className","width","height","layout","type","domain","hide","dataKey","fill","background","radius","isAnimationActive","barSize","innerRadius","outerRadius","startAngle","endAngle","stroke","map","entry","index","key","style","transition","cursor","onMouseEnter","e","currentTarget","filter","onMouseLeave","content","payload","length"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { performAnalysis } from \"./AnalysisGet\";\r\nimport { Line } from \"rc-progress\";\r\n\r\nconst AnalysisDisplay = () => {\r\n  const [analysisResults, setAnalysisResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const results = await performAnalysis();\r\n        setAnalysisResults(results);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    console.error(\"Error fetching analysis data:\", error);\r\n  }\r\n\r\n  if (!analysisResults && !error) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const {\r\n    absoluteReturn = 0,\r\n    sharpeRatio = 0,\r\n    winRate = 0,\r\n    numberOfTrades = 0,\r\n    winningTrades = 0,\r\n    losingTrades = 0,\r\n    averageWin = 0,\r\n    averageLoss = 0,\r\n    riskRewardRatio = 0,\r\n  } = analysisResults || {};\r\n  const total = averageWin + averageLoss;\r\n  const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\r\n  const formatCash = (value) => `$${value.toFixed(2)}`;\r\n  const absoluteReturnPercentage = absoluteReturn * 100;\r\n  const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\r\n\r\n  const data = [\r\n    {\r\n      name: \"Average Win\",\r\n      value: winPercent,\r\n      color: \"#4a90e2\",\r\n      amount: averageWin,\r\n    },\r\n    {\r\n      name: \"Average Loss\",\r\n      value: 100 - winPercent,\r\n      color: \"#f44336\",\r\n      amount: averageLoss,\r\n    },\r\n  ];\r\n\r\n  const winRateData = [\r\n    { name: \"Win Rate\", value: winRate, color: \"#4a90e2\" },\r\n    { name: \"Remaining\", value: 100 - winRate, color: \"#d8e3ef\" },\r\n  ];\r\n  const formatValue = (value, isCurrency = false) => {\r\n    if (isNaN(value) || value === undefined) {\r\n      return isCurrency ? \"$0.00\" : \"N/A\";\r\n    }\r\n    return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n  };\r\n  return (\r\n    <div className=\"analysis-container\">\r\n      <div className=\"analysis-row\">\r\n        <div className=\"analysis-circle\">\r\n          <h3>Trades</h3>\r\n          <p>{numberOfTrades}</p>\r\n        </div>\r\n        <div className=\"analysis-circle\">\r\n          <h3>Wins</h3>\r\n          <p>{winningTrades}</p>\r\n        </div>\r\n        <div className=\"analysis-circle\">\r\n          <h3>Losses</h3>\r\n          <p>{losingTrades}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"analysis-metric-row\">\r\n        {/* Absolute Return Metric */}\r\n        <div className=\"analysis-metric\">\r\n          <h3>Absolute Return</h3>\r\n          <p>{`${absoluteReturn.toFixed(2) * 100}%`}</p>\r\n          <ResponsiveContainer width=\"100%\" height={40}>\r\n            <BarChart\r\n              data={[\r\n                {\r\n                  name: \"Abs. Return\",\r\n                  value: absoluteReturnPercentage.toFixed(2),\r\n                },\r\n              ]}\r\n              layout=\"vertical\"\r\n            >\r\n              <XAxis type=\"number\" domain={[0, 100]} hide />\r\n              <YAxis type=\"category\" dataKey=\"name\" hide />\r\n              <Bar\r\n                dataKey=\"value\"\r\n                fill={absoluteReturnPercentage >= 50 ? \"#4a90e2\" : \"#e74c3c\"}\r\n                background={{\r\n                  fill: \"#d8e3ef\",\r\n                  radius: [5, 5, 5, 5],\r\n                }}\r\n                isAnimationActive={true}\r\n                radius={[5, 5, 5, 5]}\r\n                barSize={55}\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Sharpe Ratio Metric */}\r\n        <div className=\"analysis-metric\">\r\n          <h3>Sharpe Ratio</h3>\r\n          <p>{sharpeRatio.toFixed(2)}</p>\r\n          <ResponsiveContainer width=\"100%\" height={40}>\r\n            <BarChart\r\n              data={[{ name: \"Sharpe Ratio\", value: sharpeRatioPercentage }]}\r\n              layout=\"vertical\"\r\n            >\r\n              <XAxis type=\"number\" domain={[0, 100]} hide />\r\n              <YAxis type=\"category\" dataKey=\"name\" hide />\r\n              <Bar\r\n                dataKey=\"value\"\r\n                fill={sharpeRatio >= 3 ? \"#4a90e2\" : \"#f44336\"}\r\n                background={{ fill: \"#d8e3ef\" }}\r\n                isAnimationActive={true}\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"analysis-metric-row\">\r\n        <div className=\"analysis-metric\">\r\n          <h3>Absolute Return</h3>\r\n          <p>{`${absoluteReturn.toFixed(2)}%`}</p>\r\n          <ResponsiveContainer width=\"100%\" height={40}>\r\n            <BarChart\r\n              data={[\r\n                { name: \"Absolute Return\", value: absoluteReturnPercentage },\r\n              ]}\r\n              layout=\"vertical\"\r\n            >\r\n              <XAxis type=\"number\" domain={[0, 100]} hide />\r\n              <YAxis type=\"category\" dataKey=\"name\" hide />\r\n              <Tooltip cursor={false} />\r\n              <Bar\r\n                dataKey=\"value\"\r\n                fill=\"#4a90e2\"\r\n                background={{ fill: \"#d8e3ef\" }}\r\n                isAnimationActive={true} \r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"analysis-metric\">\r\n          <h3>Sharpe Ratio</h3>\r\n          <p>{sharpeRatio.toFixed(2)}</p>\r\n          <ResponsiveContainer width=\"100%\" height={40}>\r\n            <BarChart\r\n              data={[{ name: \"Sharpe Ratio\", value: sharpeRatioPercentage }]}\r\n              layout=\"vertical\"\r\n            >\r\n              <XAxis type=\"number\" domain={[0, 100]} hide />\r\n              <YAxis type=\"category\" dataKey=\"name\" hide />\r\n              <Tooltip cursor={false} />\r\n              <Bar\r\n                dataKey=\"value\"\r\n                fill=\"#4a90e2\"\r\n                background={{ fill: \"#d8e3ef\" }}\r\n                isAnimationActive={true}\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"analysis-circle-row\">\r\n        <ResponsiveContainer width=\"100%\" height={150}>\r\n          <PieChart>\r\n            <Pie\r\n              data={winRateData}\r\n              innerRadius={50}\r\n              outerRadius={70}\r\n              startAngle={90}\r\n              endAngle={-270}\r\n              stroke=\"none\"\r\n              dataKey=\"value\"\r\n            >\r\n              {winRateData.map((entry, index) => (\r\n                <Cell\r\n                  key={`winrate-cell-${index}`}\r\n                  fill={entry.color}\r\n                  style={{\r\n                    transition: \"filter 0.3s\",\r\n                    cursor: entry.name === \"Win Rate\" ? \"pointer\" : \"default\",\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    if (entry.name === \"Win Rate\") {\r\n                      e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\r\n                    }\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.filter = \"none\";\r\n                  }}\r\n                />\r\n              ))}\r\n            </Pie>\r\n\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (\r\n                  payload &&\r\n                  payload.length &&\r\n                  payload[0].payload.name === \"Win Rate\"\r\n                ) {\r\n                  const { name, value } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p>{name}</p>\r\n                      <p className=\"amount\">{`${value.toFixed(2)}%`}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n\r\n        {/* Average Win and Loss */}\r\n        <ResponsiveContainer width=\"100%\" height={150}>\r\n          <PieChart>\r\n            <Pie\r\n              data={data}\r\n              innerRadius={50}\r\n              outerRadius={70}\r\n              dataKey=\"value\"\r\n              startAngle={90}\r\n              endAngle={-270}\r\n              stroke=\"none\"\r\n            >\r\n              {data.map((entry, index) => (\r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={entry.color}\r\n                  style={{\r\n                    transition: \"filter 0.3s\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.filter = \"none\";\r\n                  }}\r\n                />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { name, amount } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p>{name}</p>\r\n                      <p className=\"amount\">{formatCash(amount)}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisDisplay;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\n// import { performAnalysis } from \"./AnalysisGet\";\r\n\r\n// const AnalysisDisplay = () => {\r\n//   const [analysisResults, setAnalysisResults] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const results = await performAnalysis();\r\n//         setAnalysisResults(results);\r\n//       } catch (err) {\r\n//         setError(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   if (error) {\r\n//     console.error(\"Error fetching analysis data:\", error);\r\n//   }\r\n\r\n//   if (!analysisResults && !error) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const {\r\n//     averageWin = 0,\r\n//     averageLoss = 0,\r\n//     winRate = 0,\r\n//   } = analysisResults || {};\r\n//   const total = averageWin + averageLoss;\r\n//   const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\r\n//   const formatCash = (value) => `$${value.toFixed(2)}`;\r\n\r\n//   const data = [\r\n//     {\r\n//       name: \"Average Win\",\r\n//       value: winPercent,\r\n//       color: \"#4a90e2\",\r\n//       amount: averageWin,\r\n//     },\r\n//     {\r\n//       name: \"Average Loss\",\r\n//       value: 100 - winPercent,\r\n//       color: \"#f44336\",\r\n//       amount: averageLoss,\r\n//     },\r\n//   ];\r\n\r\n//   const winRateData = [\r\n//     { name: \"Win Rate\", value: winRate, color: \"#4a90e2\" },\r\n//     { name: \"Remaining\", value: 100 - winRate, color: \"#d8e3ef\" },\r\n//   ];\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"analysis-display-container\"\r\n//       style={{ width: \"150px\", margin: \"0 auto\" }}\r\n//     >\r\n//       {/* Main Chart for Average Win and Loss */}\r\n//       <ResponsiveContainer width=\"100%\" height={250}>\r\n//         <PieChart>\r\n//           <Pie\r\n//             data={data}\r\n//             innerRadius={50}\r\n//             outerRadius={70}\r\n//             dataKey=\"value\"\r\n//             startAngle={90}\r\n//             endAngle={-270}\r\n//             stroke=\"none\"\r\n//           >\r\n//             {data.map((entry, index) => (\r\n//               <Cell\r\n//                 key={`cell-${index}`}\r\n//                 fill={entry.color}\r\n//                 style={{\r\n//                   transition: \"filter 0.3s\",\r\n//                   cursor: \"pointer\",\r\n//                 }}\r\n//                 onMouseEnter={(e) => {\r\n//                   e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\r\n//                 }}\r\n//                 onMouseLeave={(e) => {\r\n//                   e.currentTarget.style.filter = \"none\";\r\n//                 }}\r\n//               />\r\n//             ))}\r\n//           </Pie>\r\n//           <Tooltip\r\n//             cursor={false}\r\n//             content={({ payload }) => {\r\n//               if (payload && payload.length) {\r\n//                 const { name, amount } = payload[0].payload;\r\n//                 return (\r\n//                   <div className=\"tooltip-content\">\r\n//                     <p>{name}</p>\r\n//                     <p className=\"amount\">{formatCash(amount)}</p>\r\n//                   </div>\r\n//                 );\r\n//               }\r\n//               return null;\r\n//             }}\r\n//           />\r\n//         </PieChart>\r\n//       </ResponsiveContainer>\r\n\r\n//       <div style={{ marginTop: \"20px\" }}>\r\n//         <ResponsiveContainer width=\"100%\" height={150}>\r\n//           <PieChart>\r\n//             <Pie\r\n//               data={winRateData}\r\n//               innerRadius={50}\r\n//               outerRadius={70}\r\n//               startAngle={90}\r\n//               endAngle={-270}\r\n//               stroke=\"none\"\r\n//               dataKey=\"value\"\r\n//             >\r\n//               {winRateData.map((entry, index) => (\r\n//                 <Cell key={`winrate-cell-${index}`} fill={entry.color} />\r\n//               ))}\r\n//             </Pie>\r\n\r\n//             <Tooltip\r\n//               cursor={false}\r\n//               content={({ payload }) => {\r\n//                 if (payload && payload.length) {\r\n//                   const { name, value } = payload[0].payload;\r\n//                   return (\r\n//                     <div className=\"tooltip-content\">\r\n//                       <p>{name}</p>\r\n//                       <p className=\"amount\">{`${value.toFixed(2)}%`}</p>\r\n//                     </div>\r\n//                   );\r\n//                 }\r\n//                 return null;\r\n//               }}\r\n//             />\r\n//           </PieChart>\r\n//         </ResponsiveContainer>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisDisplay;\r\n\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\n// // import { performAnalysis } from \"./AnalysisGet\";\r\n\r\n// // const AnalysisDisplay = () => {\r\n// //   const [analysisResults, setAnalysisResults] = useState(null);\r\n// //   const [error, setError] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchData = async () => {\r\n// //       try {\r\n// //         const results = await performAnalysis();\r\n// //         setAnalysisResults(results);\r\n// //       } catch (err) {\r\n// //         setError(err);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchData();\r\n// //   }, []);\r\n\r\n// //   if (error) {\r\n// //     console.error(\"Error fetching analysis data:\", error);\r\n// //   }\r\n\r\n// //   if (!analysisResults && !error) {\r\n// //     return <div>Loading...</div>;\r\n// //   }\r\n\r\n// //   const { averageWin = 0, averageLoss = 0 } = analysisResults || {};\r\n// //   const total = averageWin + averageLoss;\r\n// //   const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\r\n// //   const formatCash = (value) => `$${value.toFixed(2)}`;\r\n\r\n// //   const data = [\r\n// //     {\r\n// //       name: \"Average Win\",\r\n// //       value: winPercent,\r\n// //       color: \"#4a90e2\",\r\n// //       amount: averageWin,\r\n// //     },\r\n// //     {\r\n// //       name: \"Average Loss\",\r\n// //       value: 100 - winPercent,\r\n// //       color: \"#f44336\",\r\n// //       amount: averageLoss,\r\n// //     },\r\n// //   ];\r\n\r\n// //   return (\r\n// //     <div\r\n// //       className=\"analysis-display-container\"\r\n// //       style={{ width: \"150px\", margin: \"0 auto\" }}\r\n// //     >\r\n// //       <ResponsiveContainer width=\"100%\" height={250}>\r\n// //         <PieChart>\r\n// //           <Pie\r\n// //             data={data}\r\n// //             innerRadius={50}\r\n// //             outerRadius={70}\r\n// //             dataKey=\"value\"\r\n// //             startAngle={90}\r\n// //             endAngle={-270}\r\n// //             stroke=\"none\"\r\n// //           >\r\n// //             {data.map((entry, index) => (\r\n// //               <Cell\r\n// //                 key={`cell-${index}`}\r\n// //                 fill={entry.color}\r\n// //                 style={{\r\n// //                   transition: \"filter 0.3s\",\r\n// //                   filter: \"none\",\r\n// //                   cursor: \"pointer\",\r\n// //                   width: \"max-content\",\r\n// //                   padding: \"10px\",\r\n// //                   borderRadius: \"50%\",\r\n// //                 }}\r\n// //                 onMouseEnter={(e) => {\r\n// //                   e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\r\n// //                 }}\r\n// //                 onMouseLeave={(e) => {\r\n// //                   e.currentTarget.style.filter = \"none\";\r\n// //                 }}\r\n// //               />\r\n// //             ))}\r\n// //           </Pie>\r\n// //           <Tooltip\r\n// //             cursor={false}\r\n// //             content={({ payload }) => {\r\n// //               if (payload && payload.length) {\r\n// //                 const { name, amount } = payload[0].payload;\r\n// //                 return (\r\n// //                   <div className=\"tooltip-content\">\r\n// //                     <p>{name}</p>\r\n// //                     <p className=\"amount\">{formatCash(amount)}</p>\r\n// //                   </div>\r\n// //                 );\r\n// //               }\r\n// //               return null;\r\n// //             }}\r\n// //           />\r\n// //         </PieChart>\r\n// //       </ResponsiveContainer>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default AnalysisDisplay;\r\n\r\n// // // import React, { useState, useEffect } from \"react\";\r\n// // // import { performAnalysis } from \"./AnalysisGet\";\r\n// // // import { Line } from \"rc-progress\";\r\n\r\n// // // const AnalysisDisplay = () => {\r\n// // //   const [analysisResults, setAnalysisResults] = useState(null);\r\n// // //   const [error, setError] = useState(null);\r\n\r\n// // //   useEffect(() => {\r\n// // //     const fetchData = async () => {\r\n// // //       try {\r\n// // //         const results = await performAnalysis();\r\n// // //         setAnalysisResults(results);\r\n// // //       } catch (err) {\r\n// // //         setError(err);\r\n// // //       }\r\n// // //     };\r\n\r\n// // //     fetchData();\r\n// // //   }, []);\r\n\r\n// // //   const formatValue = (value, isCurrency = false) => {\r\n// // //     if (isNaN(value) || value === undefined) {\r\n// // //       return isCurrency ? \"$0.00\" : \"N/A\";\r\n// // //     }\r\n// // //     return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n// // //   };\r\n\r\n// // //   if (error) {\r\n// // //     console.error(\"Error fetching analysis data:\", error);\r\n// // //   }\r\n\r\n// // //   if (!analysisResults && !error) {\r\n// // //     return <div>Loading...</div>;\r\n// // //   }\r\n\r\n// // //   const {\r\n// // //     absoluteReturn = 0,\r\n// // //     sharpeRatio = 0,\r\n// // //     winRate = 0,\r\n// // //     numberOfTrades = 0,\r\n// // //     winningTrades = 0,\r\n// // //     losingTrades = 0,\r\n// // //     averageWin = 0,\r\n// // //     averageLoss = 0,\r\n// // //     riskRewardRatio = 0,\r\n// // //   } = analysisResults || {};\r\n\r\n// // //   const absoluteReturnPercentage = (absoluteReturn / 80) * 100;\r\n// // //   const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\r\n\r\n// // //   return (\r\n// // //     <div className=\"analysis-container\">\r\n// // //       <div className=\"analysis-metrics-row\">\r\n// // //         {/* Absolute Return Metric */}\r\n// // //         <div className=\"analysis-metric-top\">\r\n// // //           <h3>Absolute Return</h3>\r\n// // //           <p>{`${absoluteReturn.toFixed(2)}%`}</p>\r\n// // //           <Line\r\n// // //             percent={absoluteReturnPercentage}\r\n// // //             strokeWidth=\"2\"\r\n// // //             trailWidth=\"2\"\r\n// // //             strokeColor={\"#4a90e2\"}\r\n// // //             trailColor=\"#d8e3ef\"\r\n// // //           />\r\n// // //         </div>\r\n\r\n// // //         {/* Sharpe Ratio Metric */}\r\n// // //         <div className=\"analysis-metric-top\">\r\n// // //           <h3>Sharpe Ratio</h3>\r\n// // //           <p>{formatValue(sharpeRatio)}</p>\r\n// // //           <Line\r\n// // //             percent={sharpeRatioPercentage}\r\n// // //             strokeWidth=\"2\"\r\n// // //             trailWidth=\"2\"\r\n// // //             strokeColor={\"#4a90e2\"}\r\n// // //             trailColor=\"#d8e3ef\"\r\n// // //           />\r\n// // //         </div>\r\n// // //       </div>\r\n\r\n// // //       {/* Trades, Wins, and Losses Row */}\r\n// // //       <div className=\"analysis-row\">\r\n// // //         <div className=\"analysis-circle\">\r\n// // //           <h3>Trades</h3>\r\n// // //           <p>{numberOfTrades}</p>\r\n// // //         </div>\r\n// // //         <div className=\"analysis-circle\">\r\n// // //           <h3>Wins</h3>\r\n// // //           <p>{winningTrades}</p>\r\n// // //         </div>\r\n// // //         <div className=\"analysis-circle\">\r\n// // //           <h3>Losses</h3>\r\n// // //           <p>{losingTrades}</p>\r\n// // //         </div>\r\n// // //       </div>\r\n\r\n// // //       {/* Additional Metrics Row */}\r\n// // //       <div className=\"analysis-metrics-row\">\r\n// // //         <div className=\"analysis-metric\">\r\n// // //           <h3>Win Rate</h3>\r\n// // //           <p>{formatValue(winRate)}%</p>\r\n// // //         </div>\r\n// // //         <div className=\"analysis-metric\">\r\n// // //           <h3>Avg. Win</h3>\r\n// // //           <p>{formatValue(averageWin, true)}</p>\r\n// // //         </div>\r\n// // //         <div className=\"analysis-metric\">\r\n// // //           <h3>Avg. Loss</h3>\r\n// // //           <p>{formatValue(averageLoss, true)}</p>\r\n// // //         </div>\r\n// // //         <div className=\"analysis-metric\">\r\n// // //           <h3>Risk Reward</h3>\r\n// // //           <p>{formatValue(riskRewardRatio)}</p>\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default AnalysisDisplay;\r\n"],"mappings":"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ACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}