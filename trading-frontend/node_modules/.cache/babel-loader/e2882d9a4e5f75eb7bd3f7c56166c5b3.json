{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\BiggestWinsLosses.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/biggestWinsLosses.css\";\nconst BiggestWinsLosses = ({\n  recentTrades\n}) => {\n  const [profitTrades, setProfitTrades] = useState([]);\n\n  // Function to calculate profit for each trade\n  const calculateProfit = trade => {\n    if (trade.entryPrice && trade.exitPrice) {\n      const entryPrice = parseFloat(trade.entryPrice);\n      const exitPrice = parseFloat(trade.exitPrice);\n      const profit = exitPrice - entryPrice;\n      const profitPercent = (profit / entryPrice * 100).toFixed(2);\n      return {\n        profit: profit.toFixed(2),\n        profitPercent\n      };\n    }\n    return {\n      profit: \"N/A\",\n      profitPercent: \"N/A\"\n    };\n  };\n  useEffect(() => {\n    if (recentTrades && recentTrades.length > 0) {\n      const updatedTrades = recentTrades.map(trade => ({\n        ...trade,\n        profitData: calculateProfit(trade)\n      }));\n      setProfitTrades(updatedTrades);\n    }\n  }, [recentTrades]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wins-lost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"P/L\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"::\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, profitTrades.map((trade, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"card-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, trade.symbol), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, `$${trade.profitData.profit}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, `${trade.profitData.profitPercent}%`)))))));\n};\nexport default BiggestWinsLosses;\n\n// import React from \"react\";\n// import \"./styles/biggestWinsLosses.css\";\n\n// const BiggestWinsLosses = ({ trades }) => {\n//   return (\n//     <div className=\"wins-lost\">\n//       <div className=\"card\">\n//         <p>P/L</p>\n//         <p className=\"menu\">::</p>\n//       </div>\n//       <div className=\"card-list\">\n//         <ul className=\"cards\"></ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BiggestWinsLosses;","map":{"version":3,"names":["React","useEffect","useState","BiggestWinsLosses","recentTrades","profitTrades","setProfitTrades","calculateProfit","trade","entryPrice","exitPrice","parseFloat","profit","profitPercent","toFixed","length","updatedTrades","map","profitData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","index","key","symbol"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/BiggestWinsLosses.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/biggestWinsLosses.css\";\r\n\r\nconst BiggestWinsLosses = ({ recentTrades }) => {\r\n  const [profitTrades, setProfitTrades] = useState([]);\r\n\r\n  // Function to calculate profit for each trade\r\n  const calculateProfit = (trade) => {\r\n    if (trade.entryPrice && trade.exitPrice) {\r\n      const entryPrice = parseFloat(trade.entryPrice);\r\n      const exitPrice = parseFloat(trade.exitPrice);\r\n      const profit = exitPrice - entryPrice;\r\n      const profitPercent = ((profit / entryPrice) * 100).toFixed(2);\r\n      return { profit: profit.toFixed(2), profitPercent };\r\n    }\r\n    return { profit: \"N/A\", profitPercent: \"N/A\" };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (recentTrades && recentTrades.length > 0) {\r\n      const updatedTrades = recentTrades.map((trade) => ({\r\n        ...trade,\r\n        profitData: calculateProfit(trade),\r\n      }));\r\n      setProfitTrades(updatedTrades);\r\n    }\r\n  }, [recentTrades]);\r\n\r\n  return (\r\n    <div className=\"wins-lost\">\r\n      <div className=\"card\">\r\n        <p>P/L</p>\r\n        <p className=\"menu\">::</p>\r\n      </div>\r\n      <div className=\"card-list\">\r\n        <ul className=\"cards\">\r\n          {profitTrades.map((trade, index) => (\r\n            <li key={index} className=\"card-item\">\r\n              <div className=\"card-content\">\r\n                <p>{trade.symbol}</p>\r\n                <p>{`$${trade.profitData.profit}`}</p>\r\n                <p>{`${trade.profitData.profitPercent}%`}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiggestWinsLosses;\r\n\r\n// import React from \"react\";\r\n// import \"./styles/biggestWinsLosses.css\";\r\n\r\n// const BiggestWinsLosses = ({ trades }) => {\r\n//   return (\r\n//     <div className=\"wins-lost\">\r\n//       <div className=\"card\">\r\n//         <p>P/L</p>\r\n//         <p className=\"menu\">::</p>\r\n//       </div>\r\n//       <div className=\"card-list\">\r\n//         <ul className=\"cards\"></ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BiggestWinsLosses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}