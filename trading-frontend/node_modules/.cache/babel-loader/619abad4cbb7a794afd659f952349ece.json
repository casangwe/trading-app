{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\RecentTrades.js\";\nimport React, { useState } from \"react\";\nimport \"./styles/recentTrades.css\";\nconst RecentTrades = ({\n  recentTrades,\n  formatDate\n}) => {\n  const [selectedTrade, setSelectedTrade] = useState(null);\n  const [editedTrade, setEditedTrade] = useState(null);\n  const roundStrikePrice = strikePrice => {\n    return Math.round(parseFloat(strikePrice) * 10) / 10;\n  };\n  const handleRowClick = trade => {\n    setSelectedTrade(trade);\n    setEditedTrade({\n      ...trade\n    }); // Initialize edited trade with the selected trade\n  };\n  const handleCloseModal = () => {\n    setSelectedTrade(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedTrade(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    // Implement form submission logic to update the selected trade\n    console.log(\"Edited trade:\", editedTrade);\n    // Close the modal after submitting the form\n    handleCloseModal();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recent-trades\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"recent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Recent Trades\")), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Stock Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Strike Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Entry Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Exit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Contracts\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Expiration Date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, recentTrades.map(trade => /*#__PURE__*/React.createElement(\"tr\", {\n    key: trade.trade_id,\n    onClick: () => handleRowClick(trade),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, trade.trade_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, formatDate(trade.trade_date)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, trade.option_symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"$\", trade.underlying_stock_price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, trade.option_type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"$\", roundStrikePrice(trade.strike_price)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"$\", trade.entry_price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, trade.exit_price ? `$${trade.exit_price}` : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, trade.contracts), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, formatDate(trade.expiration_date)))))), selectedTrade && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Edit Trade: \", selectedTrade.trade_id), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"option_symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Option Symbol:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"option_symbol\",\n    value: editedTrade.option_symbol,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"option_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Option Type:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"option_type\",\n    value: editedTrade.option_type,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"strike_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Strike Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"strike_price\",\n    value: editedTrade.strike_price,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"strike_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Entry Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"entry_price\",\n    value: editedTrade.entry_price,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exit_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Exit Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"exit_price\",\n    value: editedTrade.exit_price,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Contracts:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"contracts\",\n    value: editedTrade.contracts,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Save Changes\")))));\n};\nexport default RecentTrades;\n\n// import React from \"react\";\n// import \"./styles/recentTrades.css\";\n\n// const RecentTrades = ({ recentTrades, formatDate }) => {\n//   const roundStrikePrice = (strikePrice) => {\n//     return Math.round(parseFloat(strikePrice) * 10) / 10;\n//   };\n\n//   const handleRowClick = (tradeId) => {\n//     // Programmatically navigate to the edit page\n//     window.location.href = `/edit/${tradeId}`;\n//   };\n\n//   return (\n//     <div className=\"recent-trades\">\n//       <div className=\"card\">\n//         <p className=\"recent\">Recent Trades</p>\n//       </div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Date</th>\n//             <th>Symbol</th>\n//             <th>Stock Price</th>\n//             <th>Type</th>\n//             <th>Strike Price</th>\n//             <th>Entry Price</th>\n//             <th>Exit Price</th>\n//             <th>Contracts</th>\n//             <th>Expiration Date</th>\n//           </tr>\n//         </thead>\n\n//         <tbody>\n//           {recentTrades.map((trade) => (\n//             <tr\n//               key={trade.trade_id}\n//               onClick={() => handleRowClick(trade.trade_id)}\n//             >\n//               <td>{trade.trade_id}</td>\n//               <td>{formatDate(trade.trade_date)}</td>\n//               <td>{trade.option_symbol}</td>\n//               <td>${trade.underlying_stock_price}</td>\n//               <td>{trade.option_type}</td>\n//               <td>${roundStrikePrice(trade.strike_price)}</td>\n//               <td>${trade.entry_price}</td>\n//               <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\n//               <td>{trade.contracts}</td>\n//               <td>{formatDate(trade.expiration_date)}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default RecentTrades;\n\n/*\r\nimport React from \"react\";\r\nimport \"./styles/recentTrades.css\";\r\n\r\nconst RecentTrades = ({ recentTrades, formatDate, onRefresh }) => {\r\n  const handleRefresh = () => {\r\n    onRefresh();\r\n  };\r\n  const roundStrikePrice = (strikePrice) => {\r\n    return Math.round(parseFloat(strikePrice) * 10) / 10;\r\n  };\r\n\r\n  return (\r\n    <div className=\"recent-trades\">\r\n      <div className=\"card\">\r\n        <p className=\"recent\">Recent Trades</p>\r\n        <i\r\n          className=\"fa-solid fa-arrows-rotate\"\r\n          id=\"refresh-btn\"\r\n          onClick={handleRefresh}\r\n        ></i>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Date</th>\r\n            <th>Symbol</th>\r\n            <th>Stock Price</th>\r\n            <th>Type</th>\r\n            <th>Strike Price</th>\r\n            <th>Entry Price</th>\r\n            <th>Exit Price</th>\r\n            <th>Contracts</th>\r\n            <th>Expiration Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {recentTrades.map((trade) => (\r\n            <tr key={trade.trade_id}>\r\n              <td>{trade.trade_id}</td>\r\n              <td>{formatDate(trade.trade_date)}</td>\r\n              <td>{trade.option_symbol}</td>\r\n              <td>${trade.underlying_stock_price}</td>\r\n              <td>{trade.option_type}</td>\r\n              <td>${roundStrikePrice(trade.strike_price)}</td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>{formatDate(trade.expiration_date)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentTrades;\r\n*/\n\n/* \r\nAdditional:\r\n\r\nTotal entry cost ($)\r\nfirst trim (50%)\r\nsecond trim (100%)\r\ntotal profit (%)\r\ntotal profit ($)\r\n*/\n\n/* \r\nstrategy: AGGRESSIVE\r\n\r\nstarting $500.00\r\n\r\ntrim:\r\nfirst trim (50%)\r\nsecond trim (100%)\r\n\r\nfull position: \r\n10 contracts if under $1.50\r\n5 contracts if over $1.50\r\n\r\nEnter:\r\nmake analysis and alway enter 1/2 positions first. \r\n\r\nstop loss:\r\nNONE (aggressive trading)\r\n\r\nalways letting 1 or 2 contracts exp. depending on initial cost and success of trade.\r\n\r\n\r\n*/","map":{"version":3,"names":["React","useState","RecentTrades","recentTrades","formatDate","selectedTrade","setSelectedTrade","editedTrade","setEditedTrade","roundStrikePrice","strikePrice","Math","round","parseFloat","handleRowClick","trade","handleCloseModal","handleInputChange","e","name","value","target","prevState","handleFormSubmit","preventDefault","console","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","trade_id","onClick","trade_date","option_symbol","underlying_stock_price","option_type","strike_price","entry_price","exit_price","contracts","expiration_date","onSubmit","htmlFor","type","onChange"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/RecentTrades.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles/recentTrades.css\";\r\n\r\nconst RecentTrades = ({ recentTrades, formatDate }) => {\r\n  const [selectedTrade, setSelectedTrade] = useState(null);\r\n  const [editedTrade, setEditedTrade] = useState(null);\r\n\r\n  const roundStrikePrice = (strikePrice) => {\r\n    return Math.round(parseFloat(strikePrice) * 10) / 10;\r\n  };\r\n\r\n  const handleRowClick = (trade) => {\r\n    setSelectedTrade(trade);\r\n    setEditedTrade({ ...trade }); // Initialize edited trade with the selected trade\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedTrade(null);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedTrade((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Implement form submission logic to update the selected trade\r\n    console.log(\"Edited trade:\", editedTrade);\r\n    // Close the modal after submitting the form\r\n    handleCloseModal();\r\n  };\r\n  return (\r\n    <div className=\"recent-trades\">\r\n      <div className=\"card\">\r\n        <p className=\"recent\">Recent Trades</p>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Date</th>\r\n            <th>Symbol</th>\r\n            <th>Stock Price</th>\r\n            <th>Type</th>\r\n            <th>Strike Price</th>\r\n            <th>Entry Price</th>\r\n            <th>Exit Price</th>\r\n            <th>Contracts</th>\r\n            <th>Expiration Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {recentTrades.map((trade) => (\r\n            <tr key={trade.trade_id} onClick={() => handleRowClick(trade)}>\r\n              <td>{trade.trade_id}</td>\r\n              <td>{formatDate(trade.trade_date)}</td>\r\n              <td>{trade.option_symbol}</td>\r\n              <td>${trade.underlying_stock_price}</td>\r\n              <td>{trade.option_type}</td>\r\n              <td>${roundStrikePrice(trade.strike_price)}</td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>{formatDate(trade.expiration_date)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {selectedTrade && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={handleCloseModal}>\r\n              &times;\r\n            </span>\r\n            <p>Edit Trade: {selectedTrade.trade_id}</p>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"option_symbol\">Option Symbol:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"option_symbol\"\r\n                  value={editedTrade.option_symbol}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"option_type\">Option Type:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"option_type\"\r\n                  value={editedTrade.option_type}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"strike_price\">Strike Price:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"strike_price\"\r\n                  value={editedTrade.strike_price}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"strike_price\">Entry Price:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"entry_price\"\r\n                  value={editedTrade.entry_price}\r\n                  onChange={handleInputChange}\r\n                />{\" \"}\r\n                <label htmlFor=\"exit_price\">Exit Price:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"exit_price\"\r\n                  value={editedTrade.exit_price}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <label htmlFor=\"contacts\">Contracts:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"contracts\"\r\n                  value={editedTrade.contracts}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn\">\r\n                Save Changes\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentTrades;\r\n\r\n// import React from \"react\";\r\n// import \"./styles/recentTrades.css\";\r\n\r\n// const RecentTrades = ({ recentTrades, formatDate }) => {\r\n//   const roundStrikePrice = (strikePrice) => {\r\n//     return Math.round(parseFloat(strikePrice) * 10) / 10;\r\n//   };\r\n\r\n//   const handleRowClick = (tradeId) => {\r\n//     // Programmatically navigate to the edit page\r\n//     window.location.href = `/edit/${tradeId}`;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"recent-trades\">\r\n//       <div className=\"card\">\r\n//         <p className=\"recent\">Recent Trades</p>\r\n//       </div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Date</th>\r\n//             <th>Symbol</th>\r\n//             <th>Stock Price</th>\r\n//             <th>Type</th>\r\n//             <th>Strike Price</th>\r\n//             <th>Entry Price</th>\r\n//             <th>Exit Price</th>\r\n//             <th>Contracts</th>\r\n//             <th>Expiration Date</th>\r\n//           </tr>\r\n//         </thead>\r\n\r\n//         <tbody>\r\n//           {recentTrades.map((trade) => (\r\n//             <tr\r\n//               key={trade.trade_id}\r\n//               onClick={() => handleRowClick(trade.trade_id)}\r\n//             >\r\n//               <td>{trade.trade_id}</td>\r\n//               <td>{formatDate(trade.trade_date)}</td>\r\n//               <td>{trade.option_symbol}</td>\r\n//               <td>${trade.underlying_stock_price}</td>\r\n//               <td>{trade.option_type}</td>\r\n//               <td>${roundStrikePrice(trade.strike_price)}</td>\r\n//               <td>${trade.entry_price}</td>\r\n//               <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\r\n//               <td>{trade.contracts}</td>\r\n//               <td>{formatDate(trade.expiration_date)}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RecentTrades;\r\n\r\n/*\r\nimport React from \"react\";\r\nimport \"./styles/recentTrades.css\";\r\n\r\nconst RecentTrades = ({ recentTrades, formatDate, onRefresh }) => {\r\n  const handleRefresh = () => {\r\n    onRefresh();\r\n  };\r\n  const roundStrikePrice = (strikePrice) => {\r\n    return Math.round(parseFloat(strikePrice) * 10) / 10;\r\n  };\r\n\r\n  return (\r\n    <div className=\"recent-trades\">\r\n      <div className=\"card\">\r\n        <p className=\"recent\">Recent Trades</p>\r\n        <i\r\n          className=\"fa-solid fa-arrows-rotate\"\r\n          id=\"refresh-btn\"\r\n          onClick={handleRefresh}\r\n        ></i>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Date</th>\r\n            <th>Symbol</th>\r\n            <th>Stock Price</th>\r\n            <th>Type</th>\r\n            <th>Strike Price</th>\r\n            <th>Entry Price</th>\r\n            <th>Exit Price</th>\r\n            <th>Contracts</th>\r\n            <th>Expiration Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {recentTrades.map((trade) => (\r\n            <tr key={trade.trade_id}>\r\n              <td>{trade.trade_id}</td>\r\n              <td>{formatDate(trade.trade_date)}</td>\r\n              <td>{trade.option_symbol}</td>\r\n              <td>${trade.underlying_stock_price}</td>\r\n              <td>{trade.option_type}</td>\r\n              <td>${roundStrikePrice(trade.strike_price)}</td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>{trade.exit_price ? `$${trade.exit_price}` : \"\"}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>{formatDate(trade.expiration_date)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentTrades;\r\n*/\r\n\r\n/* \r\nAdditional:\r\n\r\nTotal entry cost ($)\r\nfirst trim (50%)\r\nsecond trim (100%)\r\ntotal profit (%)\r\ntotal profit ($)\r\n*/\r\n\r\n/* \r\nstrategy: AGGRESSIVE\r\n\r\nstarting $500.00\r\n\r\ntrim:\r\nfirst trim (50%)\r\nsecond trim (100%)\r\n\r\nfull position: \r\n10 contracts if under $1.50\r\n5 contracts if over $1.50\r\n\r\nEnter:\r\nmake analysis and alway enter 1/2 positions first. \r\n\r\nstop loss:\r\nNONE (aggressive trading)\r\n\r\nalways letting 1 or 2 contracts exp. depending on initial cost and success of trade.\r\n\r\n\r\n*/\r\n"],"mappings":"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FlC,KAAA,CAAA2B,aAAA;IAAOsB,OAAO,EAAC,UAAU;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAiB,CAAC,eAC5ClC,KAAA,CAAA2B,aAAA;IACEuB,IAAI,EAAC,MAAM;IACX/B,IAAI,EAAC,WAAW;IAChBC,KAAK,EAAEb,WAAW,CAACuC,SAAU;IAC7BK,QAAQ,EAAElC,iBAAkB;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CACE,CAAC,eACNlC,KAAA,CAAA2B,aAAA;IAAQuB,IAAI,EAAC,QAAQ;IAACtB,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAE9B,CACJ,CACH,CACF,CAEJ,CAAC;AAEV,CAAC;AAED,eAAehC,YAAY;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}