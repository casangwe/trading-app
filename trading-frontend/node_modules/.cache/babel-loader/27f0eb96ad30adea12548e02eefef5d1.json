{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\ProgressInvestmentChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nimport { formatCash, formatDate } from \"../func/functions\";\nconst ProgressInvestmentChart = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        if (data && data.length > 0) {\n          const sortedData = data.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\n          setChartData(formatChartData(sortedData));\n        } else {\n          setError(\"No data available\");\n        }\n      } catch (error) {\n        setError(\"Error fetching data\");\n        console.error(\"Error fetching daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  const formatChartData = data => {\n    return data.map(entry => ({\n      date: formatDate(entry.entry_date),\n      pnl: parseFloat(entry.close_cash || 0) - parseFloat(entry.open_cash || 0)\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-investment-chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, chartData.map((day, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"progress-bar-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, day.date), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar-day\",\n    style: {\n      backgroundColor: day.pnl >= 0 ? \"#4CAF50\" : \"#F44336\",\n      width: `${Math.abs(day.pnl) * 100}%`,\n      marginLeft: day.pnl >= 0 ? \"50%\" : \"50%\",\n      transform: day.pnl < 0 ? \"translateX(-100%)\" : \"none\"\n    },\n    title: `${day.date}: ${formatCash(day.pnl)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default ProgressInvestmentChart;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","formatCash","formatDate","ProgressInvestmentChart","loading","setLoading","error","setError","chartData","setChartData","fetchDailyPNLData","data","length","sortedData","sort","a","b","Date","entry_date","formatChartData","console","map","entry","date","pnl","parseFloat","close_cash","open_cash","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","day","index","key","style","backgroundColor","width","Math","abs","marginLeft","transform","title"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/ProgressInvestmentChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst ProgressInvestmentChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        if (data && data.length > 0) {\r\n          const sortedData = data.sort(\r\n            (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n          );\r\n          setChartData(formatChartData(sortedData));\r\n        } else {\r\n          setError(\"No data available\");\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching data\");\r\n        console.error(\"Error fetching daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  const formatChartData = (data) => {\r\n    return data.map((entry) => ({\r\n      date: formatDate(entry.entry_date),\r\n      pnl: parseFloat(entry.close_cash || 0) - parseFloat(entry.open_cash || 0),\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"progress-investment-chart-container\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <div className=\"progress-bar-container\">\r\n          {chartData.map((day, index) => (\r\n            <div key={index} className=\"progress-bar-row\">\r\n              <span className=\"date-label\">{day.date}</span>\r\n              <div\r\n                className=\"progress-bar-day\"\r\n                style={{\r\n                  backgroundColor: day.pnl >= 0 ? \"#4CAF50\" : \"#F44336\",\r\n                  width: `${Math.abs(day.pnl) * 100}%`,\r\n                  marginLeft: day.pnl >= 0 ? \"50%\" : \"50%\",\r\n                  transform: day.pnl < 0 ? \"translateX(-100%)\" : \"none\",\r\n                }}\r\n                title={`${day.date}: ${formatCash(day.pnl)}`}\r\n              ></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressInvestmentChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,UAAU,EAAEC,UAAU,QAAQ,mBAAmB;AAE1D,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMX,cAAc,CAAC,CAAC;QACnC,IAAIW,IAAI,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UAC3B,MAAMC,UAAU,GAAGF,IAAI,CAACG,IAAI,CAC1B,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,UAAU,CAC1D,CAAC;UACDT,YAAY,CAACU,eAAe,CAACN,UAAU,CAAC,CAAC;QAC3C,CAAC,MAAM;UACLN,QAAQ,CAAC,mBAAmB,CAAC;QAC/B;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdC,QAAQ,CAAC,qBAAqB,CAAC;QAC/Ba,OAAO,CAACd,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDK,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,eAAe,GAAIR,IAAI,IAAK;IAChC,OAAOA,IAAI,CAACU,GAAG,CAAEC,KAAK,KAAM;MAC1BC,IAAI,EAAErB,UAAU,CAACoB,KAAK,CAACJ,UAAU,CAAC;MAClCM,GAAG,EAAEC,UAAU,CAACH,KAAK,CAACI,UAAU,IAAI,CAAC,CAAC,GAAGD,UAAU,CAACH,KAAK,CAACK,SAAS,IAAI,CAAC;IAC1E,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACE9B,KAAA,CAAA+B,aAAA;IAAKC,SAAS,EAAC,qCAAqC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjD/B,OAAO,gBACNP,KAAA,CAAA+B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,YAAe,CAAC,GACnB7B,KAAK,gBACPT,KAAA,CAAA+B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM7B,KAAW,CAAC,gBAElBT,KAAA,CAAA+B,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpC3B,SAAS,CAACa,GAAG,CAAC,CAACe,GAAG,EAAEC,KAAK,kBACxBxC,KAAA,CAAA+B,aAAA;IAAKU,GAAG,EAAED,KAAM;IAACR,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CtC,KAAA,CAAA+B,aAAA;IAAMC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEC,GAAG,CAACb,IAAW,CAAC,eAC9C1B,KAAA,CAAA+B,aAAA;IACEC,SAAS,EAAC,kBAAkB;IAC5BU,KAAK,EAAE;MACLC,eAAe,EAAEJ,GAAG,CAACZ,GAAG,IAAI,CAAC,GAAG,SAAS,GAAG,SAAS;MACrDiB,KAAK,EAAG,GAAEC,IAAI,CAACC,GAAG,CAACP,GAAG,CAACZ,GAAG,CAAC,GAAG,GAAI,GAAE;MACpCoB,UAAU,EAAER,GAAG,CAACZ,GAAG,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK;MACxCqB,SAAS,EAAET,GAAG,CAACZ,GAAG,GAAG,CAAC,GAAG,mBAAmB,GAAG;IACjD,CAAE;IACFsB,KAAK,EAAG,GAAEV,GAAG,CAACb,IAAK,KAAItB,UAAU,CAACmC,GAAG,CAACZ,GAAG,CAAE,EAAE;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzC,CACH,CACN,CACE,CAEJ,CAAC;AAEV,CAAC;AAED,eAAehC,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module"}