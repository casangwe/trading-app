{"ast":null,"code":"// Calculate Number of Trades\nexport const calculateNumberOfTrades = trades => {\n  return trades.length;\n};\n\n// Calculate Winning Trades\nexport const calculateWinningTrades = trades => {\n  return trades.filter(trade => trade.exit_price - trade.entry_price > 0).length;\n};\n\n// Calculate Losing Trades\nexport const calculateLosingTrades = trades => {\n  return trades.filter(trade => trade.exit_price - trade.entry_price < 0).length;\n};\n\n// Calculate Win Rate\nexport const calculateWinRate = trades => {\n  const winningTrades = calculateWinningTrades(trades);\n  const totalTrades = calculateNumberOfTrades(trades);\n  return totalTrades === 0 ? 0 : winningTrades / totalTrades * 100;\n};\n\n// Calculate Average Win\nexport const calculateAverageWin = trades => {\n  const winningTrades = trades.filter(trade => trade.exit_price - trade.entry_price > 0);\n  const totalWin = winningTrades.reduce((acc, trade) => acc + (trade.exit_price - trade.entry_price), 0);\n  return winningTrades.length === 0 ? 0 : totalWin / winningTrades.length;\n};\n\n// Calculate Average Loss\nexport const calculateAverageLoss = trades => {\n  const losingTrades = trades.filter(trade => trade.exit_price - trade.entry_price < 0);\n  const totalLoss = losingTrades.reduce((acc, trade) => acc + (trade.exit_price - trade.entry_price), 0);\n  return losingTrades.length === 0 ? 0 : totalLoss / losingTrades.length;\n};\n\n// Calculate Risk-Reward Ratio\nexport const calculateRiskRewardRatio = trades => {\n  const averageWin = calculateAverageWin(trades);\n  const averageLoss = Math.abs(calculateAverageLoss(trades));\n  return averageLoss === 0 ? 0 : averageWin / averageLoss;\n};\n\n// Calculate Cash Balance\nexport const calculateCashBalance = (initialCash, netPL) => {\n  const initialCashNumber = Number(initialCash);\n  const netPLNumber = Number(netPL);\n  if (isNaN(initialCashNumber) || isNaN(netPLNumber)) {\n    console.error(\"Invalid input to calculateCashBalance:\", {\n      initialCash,\n      netPL\n    });\n    return 0;\n  }\n  return initialCashNumber + netPLNumber; // Return as a number\n};","map":{"version":3,"names":["calculateNumberOfTrades","trades","length","calculateWinningTrades","filter","trade","exit_price","entry_price","calculateLosingTrades","calculateWinRate","winningTrades","totalTrades","calculateAverageWin","totalWin","reduce","acc","calculateAverageLoss","losingTrades","totalLoss","calculateRiskRewardRatio","averageWin","averageLoss","Math","abs","calculateCashBalance","initialCash","netPL","initialCashNumber","Number","netPLNumber","isNaN","console","error"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisCalc.js"],"sourcesContent":["// Calculate Number of Trades\r\nexport const calculateNumberOfTrades = (trades) => {\r\n  return trades.length;\r\n};\r\n\r\n// Calculate Winning Trades\r\nexport const calculateWinningTrades = (trades) => {\r\n  return trades.filter((trade) => trade.exit_price - trade.entry_price > 0)\r\n    .length;\r\n};\r\n\r\n// Calculate Losing Trades\r\nexport const calculateLosingTrades = (trades) => {\r\n  return trades.filter((trade) => trade.exit_price - trade.entry_price < 0)\r\n    .length;\r\n};\r\n\r\n// Calculate Win Rate\r\nexport const calculateWinRate = (trades) => {\r\n  const winningTrades = calculateWinningTrades(trades);\r\n  const totalTrades = calculateNumberOfTrades(trades);\r\n  return totalTrades === 0 ? 0 : (winningTrades / totalTrades) * 100;\r\n};\r\n\r\n// Calculate Average Win\r\nexport const calculateAverageWin = (trades) => {\r\n  const winningTrades = trades.filter(\r\n    (trade) => trade.exit_price - trade.entry_price > 0\r\n  );\r\n  const totalWin = winningTrades.reduce(\r\n    (acc, trade) => acc + (trade.exit_price - trade.entry_price),\r\n    0\r\n  );\r\n  return winningTrades.length === 0 ? 0 : totalWin / winningTrades.length;\r\n};\r\n\r\n// Calculate Average Loss\r\nexport const calculateAverageLoss = (trades) => {\r\n  const losingTrades = trades.filter(\r\n    (trade) => trade.exit_price - trade.entry_price < 0\r\n  );\r\n  const totalLoss = losingTrades.reduce(\r\n    (acc, trade) => acc + (trade.exit_price - trade.entry_price),\r\n    0\r\n  );\r\n  return losingTrades.length === 0 ? 0 : totalLoss / losingTrades.length;\r\n};\r\n\r\n// Calculate Risk-Reward Ratio\r\nexport const calculateRiskRewardRatio = (trades) => {\r\n  const averageWin = calculateAverageWin(trades);\r\n  const averageLoss = Math.abs(calculateAverageLoss(trades));\r\n  return averageLoss === 0 ? 0 : averageWin / averageLoss;\r\n};\r\n\r\n// Calculate Cash Balance\r\nexport const calculateCashBalance = (initialCash, netPL) => {\r\n  const initialCashNumber = Number(initialCash);\r\n  const netPLNumber = Number(netPL);\r\n\r\n  if (isNaN(initialCashNumber) || isNaN(netPLNumber)) {\r\n    console.error(\"Invalid input to calculateCashBalance:\", {\r\n      initialCash,\r\n      netPL,\r\n    });\r\n    return 0;\r\n  }\r\n\r\n  return initialCashNumber + netPLNumber; // Return as a number\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}