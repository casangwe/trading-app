{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\Rules.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/styles.css\";\nimport { fetchRules } from \"./ApiCalls\";\nconst Rules = () => {\n  const [rules, setRules] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch rules from the API\n  const fetchRulesData = async () => {\n    try {\n      const rulesData = await fetchRules();\n      setRules(rulesData);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  // UseEffect hook to fetch rules data when component mounts\n  useEffect(() => {\n    fetchRulesData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rules\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Rules\"), rules.map((rule, index) => {\n    var _rule$dates;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, index + 1, \": \", rule.rule), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, (_rule$dates = rule.dates) === null || _rule$dates === void 0 ? void 0 : _rule$dates.split(\"-\").slice(1).join(\"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"20%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    })));\n  }));\n};\nexport default Rules;","map":{"version":3,"names":["React","useState","useEffect","fetchRules","Rules","rules","setRules","loading","setLoading","error","setError","fetchRulesData","rulesData","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","rule","index","_rule$dates","key","dates","split","slice","join","style","width"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/Rules.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/styles.css\";\r\nimport { fetchRules } from \"./ApiCalls\";\r\n\r\nconst Rules = () => {\r\n  const [rules, setRules] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch rules from the API\r\n  const fetchRulesData = async () => {\r\n    try {\r\n      const rulesData = await fetchRules();\r\n      setRules(rulesData);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // UseEffect hook to fetch rules data when component mounts\r\n  useEffect(() => {\r\n    fetchRulesData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"rules\">\r\n      <div className=\"header\">Rules</div>\r\n      {rules.map((rule, index) => (\r\n        <div className=\"details\" key={index}>\r\n          <p className=\"\">\r\n            {index + 1}: {rule.rule}\r\n          </p>\r\n          <p className=\"dates\">{rule.dates?.split(\"-\").slice(1).join(\"/\")}</p>\r\n          <div style={{ width: \"20%\" }}>\r\n            <hr></hr>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rules;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAC5B,SAASC,UAAU,QAAQ,YAAY;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMT,UAAU,CAAC,CAAC;MACpCG,QAAQ,CAACM,SAAS,CAAC;MACnBJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACI,OAAO,CAAC;MACvBL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACdS,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpBrB,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAU,CAAC,EAClChB,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;IAAA,IAAAC,WAAA;IAAA,oBACrBzB,KAAA,CAAAc,aAAA;MAAKC,SAAS,EAAC,SAAS;MAACW,GAAG,EAAEF,KAAM;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClCrB,KAAA,CAAAc,aAAA;MAAGC,SAAS,EAAC,EAAE;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACZG,KAAK,GAAG,CAAC,EAAC,IAAE,EAACD,IAAI,CAACA,IAClB,CAAC,eACJvB,KAAA,CAAAc,aAAA;MAAGC,SAAS,EAAC,OAAO;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IAAAI,WAAA,GAAEF,IAAI,CAACI,KAAK,cAAAF,WAAA,uBAAVA,WAAA,CAAYG,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAK,CAAC,eACpE9B,KAAA,CAAAc,aAAA;MAAKiB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAhB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC3BrB,KAAA,CAAAc,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAQ,CACL,CACF,CAAC;EAAA,CACP,CACE,CAAC;AAEV,CAAC;AAED,eAAejB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}