{"ast":null,"code":"// Updated AnalysisGet.js\nimport { getCash } from \"../api/CashApi\";\nimport { fetchTrades } from \"../api/TradesAPI\";\n// Import additional APIs if needed\n\nimport { calculateCashBalance, calculateWinningTrades, calculateLosingTrades, calculateWinRate, calculateAverageWin, calculateAverageLoss, calculateRiskRewardRatio } from \"./AnalysisCalc\";\nexport const performAnalysis = async () => {\n  try {\n    const cashData = await getCash();\n    const trades = await fetchTrades();\n    console.log(cashData);\n    console.log(trades);\n\n    // Calculate metrics\n\n    const winningTrades = calculateWinningTrades(trades);\n    const losingTrades = calculateLosingTrades(trades);\n    const winRate = calculateWinRate(trades);\n    const averageWin = calculateAverageWin(trades);\n    const averageLoss = calculateAverageLoss(trades);\n    const riskRewardRatio = calculateRiskRewardRatio(trades);\n    console.log(winningTrades);\n    console.log(losingTrades);\n    console.log(winRate);\n    console.log(averageWin);\n    console.log(averageLoss);\n    console.log(riskRewardRatio);\n\n    // Prepare the results object\n    const analysisResults = {\n      numberOfTrades: calculateNumberOfTrades(trades),\n      winningTrades,\n      losingTrades,\n      winRate,\n      averageWin,\n      averageLoss,\n      riskRewardRatio\n    };\n    console.log(analysisResults);\n    return analysisResults;\n  } catch (error) {\n    console.error(\"Analysis Error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getCash","fetchTrades","calculateCashBalance","calculateWinningTrades","calculateLosingTrades","calculateWinRate","calculateAverageWin","calculateAverageLoss","calculateRiskRewardRatio","performAnalysis","cashData","trades","console","log","winningTrades","losingTrades","winRate","averageWin","averageLoss","riskRewardRatio","analysisResults","numberOfTrades","calculateNumberOfTrades","error"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/analysis/AnalysisGet.js"],"sourcesContent":["// Updated AnalysisGet.js\r\nimport { getCash } from \"../api/CashApi\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\n// Import additional APIs if needed\r\n\r\nimport {\r\n  calculateCashBalance,\r\n  calculateWinningTrades,\r\n  calculateLosingTrades,\r\n  calculateWinRate,\r\n  calculateAverageWin,\r\n  calculateAverageLoss,\r\n  calculateRiskRewardRatio,\r\n} from \"./AnalysisCalc\";\r\n\r\nexport const performAnalysis = async () => {\r\n  try {\r\n    const cashData = await getCash();\r\n    const trades = await fetchTrades();\r\n\r\n    console.log(cashData);\r\n    console.log(trades);\r\n\r\n    // Calculate metrics\r\n\r\n    const winningTrades = calculateWinningTrades(trades);\r\n    const losingTrades = calculateLosingTrades(trades);\r\n    const winRate = calculateWinRate(trades);\r\n    const averageWin = calculateAverageWin(trades);\r\n    const averageLoss = calculateAverageLoss(trades);\r\n    const riskRewardRatio = calculateRiskRewardRatio(trades);\r\n\r\n    console.log(winningTrades);\r\n    console.log(losingTrades);\r\n    console.log(winRate);\r\n    console.log(averageWin);\r\n    console.log(averageLoss);\r\n    console.log(riskRewardRatio);\r\n\r\n    // Prepare the results object\r\n    const analysisResults = {\r\n      numberOfTrades: calculateNumberOfTrades(trades),\r\n      winningTrades,\r\n      losingTrades,\r\n      winRate,\r\n      averageWin,\r\n      averageLoss,\r\n      riskRewardRatio,\r\n    };\r\n    console.log(analysisResults);\r\n\r\n    return analysisResults;\r\n  } catch (error) {\r\n    console.error(\"Analysis Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,gBAAgB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;;AAEA,SACEC,oBAAoB,EACpBC,sBAAsB,EACtBC,qBAAqB,EACrBC,gBAAgB,EAChBC,mBAAmB,EACnBC,oBAAoB,EACpBC,wBAAwB,QACnB,gBAAgB;AAEvB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,OAAO,CAAC,CAAC;IAChC,MAAMW,MAAM,GAAG,MAAMV,WAAW,CAAC,CAAC;IAElCW,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBE,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;;IAEnB;;IAEA,MAAMG,aAAa,GAAGX,sBAAsB,CAACQ,MAAM,CAAC;IACpD,MAAMI,YAAY,GAAGX,qBAAqB,CAACO,MAAM,CAAC;IAClD,MAAMK,OAAO,GAAGX,gBAAgB,CAACM,MAAM,CAAC;IACxC,MAAMM,UAAU,GAAGX,mBAAmB,CAACK,MAAM,CAAC;IAC9C,MAAMO,WAAW,GAAGX,oBAAoB,CAACI,MAAM,CAAC;IAChD,MAAMQ,eAAe,GAAGX,wBAAwB,CAACG,MAAM,CAAC;IAExDC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;IAC1BF,OAAO,CAACC,GAAG,CAACE,YAAY,CAAC;IACzBH,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;IACpBJ,OAAO,CAACC,GAAG,CAACI,UAAU,CAAC;IACvBL,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;IACxBN,OAAO,CAACC,GAAG,CAACM,eAAe,CAAC;;IAE5B;IACA,MAAMC,eAAe,GAAG;MACtBC,cAAc,EAAEC,uBAAuB,CAACX,MAAM,CAAC;MAC/CG,aAAa;MACbC,YAAY;MACZC,OAAO;MACPC,UAAU;MACVC,WAAW;MACXC;IACF,CAAC;IACDP,OAAO,CAACC,GAAG,CAACO,eAAe,CAAC;IAE5B,OAAOA,eAAe;EACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdX,OAAO,CAACW,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}