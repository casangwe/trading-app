{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\Calender.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\"; // Import the styles\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\nconst Calender = () => {\n  const [dailyPNLData, setDailyPNLData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    const fetchDailyPNLData = async () => {\n      try {\n        const data = await fetchDailyPnls();\n        setDailyPNLData(data);\n      } catch (error) {\n        setError(\"Error fetching Daily PNL data\");\n        console.error(\"Error fetching Daily PNL data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPNLData();\n  }, []);\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view === \"month\") {\n      const pnlEntry = dailyPNLData.find(pnl => {\n        const entryDate = new Date(pnl.entry_date);\n        return date.getFullYear() === entryDate.getFullYear() && date.getMonth() === entryDate.getMonth() && date.getDate() === entryDate.getDate();\n      });\n      return pnlEntry ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pnl-tile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Close Cash: $\", pnlEntry.close_cash), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \"Balance: $\", pnlEntry.balance), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"RoI: \", pnlEntry.roi, \"%\")) : null;\n    }\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    onChange: setSelectedDate,\n    value: selectedDate,\n    tileContent: tileContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), dailyPNLData.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  }, \"No PNL data available\"));\n};\nexport default Calender;","map":{"version":3,"names":["React","useEffect","useState","Calendar","fetchDailyPnls","Calender","dailyPNLData","setDailyPNLData","loading","setLoading","error","setError","selectedDate","setSelectedDate","Date","fetchDailyPNLData","data","console","tileContent","date","view","pnlEntry","find","pnl","entryDate","entry_date","getFullYear","getMonth","getDate","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","close_cash","balance","roi","onChange","value","length"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/Calender.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\"; // Import the styles\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\n\r\nconst Calender = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n      } catch (error) {\r\n        setError(\"Error fetching Daily PNL data\");\r\n        console.error(\"Error fetching Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === \"month\") {\r\n      const pnlEntry = dailyPNLData.find((pnl) => {\r\n        const entryDate = new Date(pnl.entry_date);\r\n        return (\r\n          date.getFullYear() === entryDate.getFullYear() &&\r\n          date.getMonth() === entryDate.getMonth() &&\r\n          date.getDate() === entryDate.getDate()\r\n        );\r\n      });\r\n\r\n      return pnlEntry ? (\r\n        <div className=\"pnl-tile\">\r\n          <div>Close Cash: ${pnlEntry.close_cash}</div>\r\n          <div>Balance: ${pnlEntry.balance}</div>\r\n          <div>RoI: {pnlEntry.roi}%</div>\r\n        </div>\r\n      ) : null;\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <Calendar\r\n        onChange={setSelectedDate}\r\n        value={selectedDate}\r\n        tileContent={tileContent}\r\n      />\r\n      {dailyPNLData.length === 0 && <p>No PNL data available</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}