{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casan\\\\trading-app\\\\trading-frontend\\\\src\\\\components\\\\controllers\\\\pnl\\\\InvestmentChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\"; // Assume this API fetches data for different time frames\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { formatCash } from \"../utils/format\"; // Function to format cash amounts\n\nconst timeFrames = [\"1D\", \"1W\", \"1M\", \"3M\", \"YTD\", \"1Y\", \"ALL\"];\nconst InvestmentChart = () => {\n  const [selectedTimeFrame, setSelectedTimeFrame] = useState(\"ALL\");\n  const [chartData, setChartData] = useState([]);\n  const [investmentSummary, setInvestmentSummary] = useState(null); // Balance and percentage\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchDailyPnls(selectedTimeFrame); // Fetches data based on time frame\n      const formattedData = formatChartData(data);\n      setChartData(formattedData.chart);\n      setInvestmentSummary(formattedData.summary);\n    };\n    fetchData();\n  }, [selectedTimeFrame]);\n  const formatChartData = data => {\n    // Convert raw data into a format suitable for the chart\n    let cumulativeBalance = 0;\n    const chart = data.map(entry => {\n      cumulativeBalance += parseFloat(entry.balance);\n      return {\n        date: new Date(entry.date).toLocaleDateString(),\n        balance: cumulativeBalance\n      };\n    });\n    const summary = {\n      balance: cumulativeBalance,\n      percentageChange: (cumulativeBalance - data[0].balance) / data[0].balance * 100\n    };\n    return {\n      chart,\n      summary\n    };\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"investment-chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"investment-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Investing\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, formatCash((investmentSummary === null || investmentSummary === void 0 ? void 0 : investmentSummary.balance) || 0)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, investmentSummary ? `${investmentSummary.percentageChange.toFixed(2)}% All time` : \"Loading...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-frame-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, timeFrames.map(frame => /*#__PURE__*/React.createElement(\"button\", {\n    key: frame,\n    onClick: () => setSelectedTimeFrame(frame),\n    className: selectedTimeFrame === frame ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, frame))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    formatter: value => formatCash(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"balance\",\n    stroke: \"#4a90e2\",\n    strokeWidth: 2,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default InvestmentChart;","map":{"version":3,"names":["React","useState","useEffect","fetchDailyPnls","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","formatCash","timeFrames","InvestmentChart","selectedTimeFrame","setSelectedTimeFrame","chartData","setChartData","investmentSummary","setInvestmentSummary","fetchData","data","formattedData","formatChartData","chart","summary","cumulativeBalance","map","entry","parseFloat","balance","date","Date","toLocaleDateString","percentageChange","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","frame","key","onClick","width","height","dataKey","hide","formatter","value","type","stroke","strokeWidth","dot"],"sources":["C:/Users/casan/trading-app/trading-frontend/src/components/controllers/pnl/InvestmentChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\"; // Assume this API fetches data for different time frames\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { formatCash } from \"../utils/format\"; // Function to format cash amounts\r\n\r\nconst timeFrames = [\"1D\", \"1W\", \"1M\", \"3M\", \"YTD\", \"1Y\", \"ALL\"];\r\n\r\nconst InvestmentChart = () => {\r\n  const [selectedTimeFrame, setSelectedTimeFrame] = useState(\"ALL\");\r\n  const [chartData, setChartData] = useState([]);\r\n  const [investmentSummary, setInvestmentSummary] = useState(null); // Balance and percentage\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await fetchDailyPnls(selectedTimeFrame); // Fetches data based on time frame\r\n      const formattedData = formatChartData(data);\r\n      setChartData(formattedData.chart);\r\n      setInvestmentSummary(formattedData.summary);\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedTimeFrame]);\r\n\r\n  const formatChartData = (data) => {\r\n    // Convert raw data into a format suitable for the chart\r\n    let cumulativeBalance = 0;\r\n    const chart = data.map((entry) => {\r\n      cumulativeBalance += parseFloat(entry.balance);\r\n      return {\r\n        date: new Date(entry.date).toLocaleDateString(),\r\n        balance: cumulativeBalance,\r\n      };\r\n    });\r\n    const summary = {\r\n      balance: cumulativeBalance,\r\n      percentageChange:\r\n        ((cumulativeBalance - data[0].balance) / data[0].balance) * 100,\r\n    };\r\n    return { chart, summary };\r\n  };\r\n\r\n  return (\r\n    <div className=\"investment-chart-container\">\r\n      <div className=\"investment-summary\">\r\n        <h2>Investing</h2>\r\n        <p>{formatCash(investmentSummary?.balance || 0)}</p>\r\n        <p>\r\n          {investmentSummary\r\n            ? `${investmentSummary.percentageChange.toFixed(2)}% All time`\r\n            : \"Loading...\"}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"time-frame-selector\">\r\n        {timeFrames.map((frame) => (\r\n          <button\r\n            key={frame}\r\n            onClick={() => setSelectedTimeFrame(frame)}\r\n            className={selectedTimeFrame === frame ? \"active\" : \"\"}\r\n          >\r\n            {frame}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={chartData}>\r\n          <XAxis dataKey=\"date\" hide />\r\n          <YAxis hide />\r\n          <Tooltip formatter={(value) => formatCash(value)} />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"balance\"\r\n            stroke=\"#4a90e2\"\r\n            strokeWidth={2}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvestmentChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}