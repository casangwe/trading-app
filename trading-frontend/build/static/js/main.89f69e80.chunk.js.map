{"version":3,"sources":["components/controllers/api/DailyPNLApi.js","components/controllers/func/functions.js","components/controllers/pnl/DailyPNL.js","components/controllers/pnl/NewDailyPNL.js","components/controllers/pnl/Calender.js","components/controllers/api/TradesAPI.js","components/controllers/trades/MiniTradeTable.js","components/controllers/pnl/Bars.js","components/controllers/api/CashApi.js","components/controllers/analysis/AnalysisCalc.js","components/controllers/analysis/AnalysisGet.js","components/controllers/analysis/AnalysisDisplay.js","components/controllers/api/TransactionsAPI.js","components/controllers/cash/CashCalc.js","components/controllers/pnl/InvestmentChart.js","components/controllers/trades/EQTcurve.js","components/pages/Home.js","components/controllers/trades/NewTrade.js","components/controllers/trades/TradeTable.js","components/controllers/api/WatchlistApi.js","components/controllers/watchlist/NewWatchlist.js","components/controllers/watchlist/UpdateWatchlist.js","components/controllers/watchlist/Watchlist.js","components/controllers/api/MiscAPI.js","components/controllers/misc/NewMisc.js","components/controllers/misc/UpdateMisc.js","components/controllers/misc/Misc.js","components/pages/Trades.js","components/controllers/trades/TradeSum.js","components/pages/Analysis.js","components/controllers/cash/Cash.js","components/controllers/cash/NewCash.js","components/controllers/transactions/NewTransaction.js","components/controllers/transactions/TransactionTable.js","components/controllers/api/RulesAPI.js","components/controllers/rules/NewRule.js","components/controllers/rules/UpdateRule.js","components/controllers/rules/Rules.js","components/pages/Accounts.js","components/controllers/api/UserAPI.js","components/controllers/users/Login.js","components/controllers/users/Register.js","components/pages/Landing.js","components/controllers/api/FinancialAPI.js","components/controllers/financial/NewFinancial.js","components/controllers/financial/Financial.js","components/controllers/financial/NetWorthChart.js","components/controllers/financial/AccountDistributionChart.js","components/controllers/financial/IncomeExpensesComparisonChart.js","components/controllers/financial/SavingsGrowthChart.js","components/pages/Networth.js","components/nav/Navigation.js","components/nav/LandingNavigation.js","App.js","index.js"],"names":["API_BASE_URL","userId","getUserId","userDataString","localStorage","getItem","console","error","JSON","parse","sub","fetchDailyPnls","async","response","fetch","concat","ok","Error","json","formatDate","dateStr","includes","dateParts","split","month","day","ProtectedRoute","_ref","children","React","createElement","Navigate","to","replace","decodeJWT","token","base64","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","formatCash","amount","parseFloat","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","splitText","text","part","index","key","marginTop","marginBottom","trim","DailyPNL","dailyPNLData","setDailyPNLData","useState","loading","setLoading","setError","useEffect","data","log","length","sortedData","sort","a","b","Date","entry_date","fetchDailyPNLData","openCash","open_cash","closeCash","close_cash","balance","roi","className","FaMoneyBillWave","FaUpload","FaChartLine","FaPercentage","NewDailyPNL","onClose","onNewDailyPNL","existingData","navigate","useNavigate","formData","setFormData","handleChange","e","name","value","target","prevData","onClick","onSubmit","preventDefault","pnlId","dailyPnlData","method","headers","body","stringify","updateDailyPnl","id","user_id","errorData","detail","createDailyPnl","window","location","reload","alert","type","placeholder","onChange","required","Calender","selectedDate","setSelectedDate","modalDetails","setModalDetails","aggregateByMonth","monthlyData","forEach","entry","date","monthKey","getFullYear","getMonth","final_close_cash","initial_open_cash","entries","push","Object","keys","monthData","toFixed","aggregateByYear","yearlyData","yearKey","yearData","handleTileClick","view","formattedDate","toISOString","pnlEntry","find","pnl","getDate","monthlyEntry","yearlyEntry","Calendar","tileContent","icon","FaArrowUp","color","FaArrowDown","onClickDay","onActiveStartDateChange","_ref2","activeStartDate","handleCloseModal","fetchTrades","MiniTradeTable","trades","setTrades","showModal","setShowModal","message","getTrades","trade","symbol","strike_price","option_type","entry_price","exit_price","profit_loss","Bars","setView","formatMonthYear","year","barsData","calculateBars","today","startOfWeek","setDate","getDay","setHours","endOfWeek","weekData","filter","entryDate","getCurrentWeek","weeks","week","currentMonth","getCurrentMonth","weekBalance","reduce","sum","months","Array","from","getMonthsData","monthBalance","ResponsiveContainer","width","height","BarChart","layout","background","margin","top","right","left","bottom","XAxis","tick","axisLine","YAxis","dataKey","Tooltip","cursor","formatter","content","payload","Bar","fill","isAnimationActive","radius","barSize","getCash","calculateNumberOfTrades","calculateWinningTrades","calculateAverageWin","winningTrades","totalWin","acc","calculateAverageLoss","losingTrades","totalLoss","Math","abs","calculateAbsoluteReturn","calculateStandardDeviation","returns","mean","variance","pow","sqrt","performAnalysis","cashData","numberOfTrades","calculateLosingTrades","winRate","totalTrades","calculateWinRate","averageWin","averageLoss","riskRewardRatio","calculateRiskRewardRatio","absoluteReturn","sharpeRatio","standardDeviation","calculateSharpeRatio","analysisResults","avgDaysInTrade","totalDays","exitDate","exit_date","diffTime","ceil","calculateAverageDaysInTrade","AnalysisDisplay","setAnalysisResults","results","err","fetchData","total","winPercent","absoluteReturnPercentage","sharpeRatioPercentage","winRateData","domain","hide","PieChart","Pie","innerRadius","outerRadius","startAngle","endAngle","stroke","Cell","transition","onMouseEnter","currentTarget","onMouseLeave","paddingAngle","fetchTransactions","calculateInitialCash","initial_cash","Number","calculateTotalDeposits","transactions","isArray","transaction","transaction_type","calculateTotalWithdrawals","calculateNetPL","dailyPnls","totalPL","calculateCashBalance","initialCash","netPL","calculateAvailableCash","calculateROI","InvestmentChart","chartData","setChartData","investmentSummary","setInvestmentSummary","setTransactions","transactionsResponse","Promise","all","formatChartData","calculateInvestmentSummary","fetchInvestmentData","_dailyPnls","latestDate","closingBalance","LineChart","Line","strokeWidth","dot","EQTCurve","tradeSummary","setTradeSummary","startingEquity","formattedData","finalEquity","equity","fetchAndAnalyzeData","cumulativeEquity","idealIncrement","sortedTrades","close_date","idealEquity","ComposedChart","Home","userData","setUserData","storedUserData","parsedUserData","handleOpenModal","newDailyPNL","NewTrade","exp_date","contracts","tradeData","createTrade","parseInt","TradeTable","principal","NewWatchlist","price","target_price","target_hit","plan","checked","watchlistData","createWatchlist","UpdateWatchlist","watchlist","onSave","handleDelete","showUpdateButton","setShowUpdateButton","isEditable","setIsEditable","rows","float","handleToggle","prevFormData","stopPropagation","Watchlist","watchlists","setWatchlists","selectedWatchlist","setSelectedWatchlist","isEditing","setIsEditing","fetchWatchlists","getWatchlists","arguments","undefined","handleSaveChanges","watchlistId","updateWatchlist","updatedData","prevWatchlists","wl","borderLeft","createMiscEntry","miscData","NewMisc","category","description","UpdateMisc","misc","charAt","toUpperCase","onInput","scrollHeight","overflow","Misc","miscEntries","setMiscEntries","selectedMisc","setSelectedMisc","activeTab","setActiveTab","fetchMiscEntries","getMiscEntries","filteredEntries","toLowerCase","miscId","updateMiscEntry","prevEntries","newEntry","deleteMiscEntry","Trades","TradeSum","weeklyDate","toLocaleDateString","monthlyDate","filterTrades","period","tradeDate","startOfMonth","endOfMonth","renderTradeRows","tradeList","Analysis","Cash","setCashData","setDailyPnls","cashResponse","pnlResponse","totalDeposits","totalWithdrawals","cash","cashBalance","FaCashRegister","FaChartPie","NewCash","onNewCash","newCash","cashAmount","createCash","NewTransaction","transaction_date","transaction_summary","transactionData","createTransaction","TransactionTable","transactionsData","tradesData","initialCashEntry","isInitialCash","formattedTrades","profitLossAmount","profitOrLoss","allData","dateComparison","getTransactionsTradesAndCash","class","fetchRules","createRule","ruleData","NewRule","rule","UpdateRule","Rules","rules","setRules","selectedRule","setSelectedRule","getRules","ruleId","updateRule","refreshedRules","ruleText","Accounts","loginUser","credentials","Login","username","setUsername","password","setPassword","URLSearchParams","append","decodedToken","access_token","setItem","href","disabled","Register","onRegisterSuccess","fname","lname","email","phoneNumber","accountType","handleInputChange","prev","errorDetails","statusText","registerUser","phone_number","account_type","loginResponse","Landing","isLogin","setIsLogin","toggleAuthMode","Fragment","handleRegisterSuccess","fetchFinancials","NewFinancial","onSuccess","income","NEC","FFA","PLAY","LTSS","GIVE","comments","financialData","createFinancial","Financial","financials","setFinancials","getFinancials","expenses","networth","prevFinancials","NetWorthChart","summary","setSummary","previousNetworth","difference","latest","previous","AccountDistributionChart","accountData","setAccountData","latestEntry","current","nameKey","cx","cy","IncomeExpensesComparisonChart","calculateSummary","SavingsGrowthChart","savingsData","setSavingsData","Networth","Navigation","useLocation","Link","pathname","title","handleLogout","removeItem","FaSignOutAlt","LandingNavigation","AppContent","isLandingPage","Routes","Route","path","element","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89f69e80.chunk.js","sourcesContent":["const API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Fetch all daily PNLs for a specific user\r\nexport const fetchDailyPnls = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/dailypnls?user_id=${userId}`);\r\n    if (!response.ok) throw new Error(\"Error fetching daily PNLs\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Daily PNLs Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new daily PNL for a specific user\r\nexport const createDailyPnl = async (dailyPnlData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/dailypnls?user_id=${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...dailyPnlData, user_id: userId }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || \"Error creating daily PNL\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Create Daily PNL Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an existing daily PNL for a specific user\r\nexport const updateDailyPnl = async (pnlId, dailyPnlData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/dailypnls/${pnlId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dailyPnlData),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) throw new Error(\"Error updating daily PNL\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Daily PNL Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a daily PNL for a specific user\r\nexport const deleteDailyPnl = async (pnlId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/dailypnls/${pnlId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n\r\n    if (!response.ok) throw new Error(\"Error deleting daily PNL\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Daily PNL Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single daily PNL by ID for a specific user\r\nexport const fetchDailyPnlById = async (pnlId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/dailypnls/${pnlId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Daily PNL not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Daily PNL Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","//components/controllers/func/functions.js\r\n\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const formatDate = (dateStr) => {\r\n  if (!dateStr || !dateStr.includes(\"-\")) return \"\";\r\n  const dateParts = dateStr.split(\"-\");\r\n  const month = dateParts[1];\r\n  const day = dateParts[2];\r\n  return `${month}/${day}`;\r\n};\r\n// export const formatDate = (date) => {\r\n//   if (typeof date === \"string\" && date.includes(\"-\")) {\r\n//     const [year, month, day] = date.split(\"-\");\r\n//     return `${month}/${day}`;\r\n//   }\r\n\r\n//   if (date instanceof Date && !isNaN(date)) {\r\n//     const options = { month: \"2-digit\", day: \"2-digit\" };\r\n//     return date.toLocaleDateString(undefined, options);\r\n//   }\r\n\r\n//   return \"\";\r\n// };\r\n\r\n// export const ProtectedRoute = ({ children }) => {\r\n//   const token = localStorage.getItem(\"access_token\");\r\n\r\n//   if (!token) {\r\n//     return <Navigate to=\"/start\" replace />;\r\n//   }\r\n\r\n//   return children;\r\n// };\r\n\r\nexport const ProtectedRoute = ({ children }) => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  return token ? children : <Navigate to=\"/start\" replace />;\r\n};\r\n\r\nexport const decodeJWT = (token) => {\r\n  const base64Url = token.split(\".\")[1];\r\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  const jsonPayload = decodeURIComponent(\r\n    atob(base64)\r\n      .split(\"\")\r\n      .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\r\n      .join(\"\")\r\n  );\r\n\r\n  return JSON.parse(jsonPayload);\r\n};\r\n\r\nexport const getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const formatCash = (amount) => {\r\n  if (typeof amount === \"string\") {\r\n    amount = parseFloat(amount);\r\n  }\r\n  if (typeof amount !== \"number\") return \"\";\r\n\r\n  return amount.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n};\r\nexport const splitText = (text) => {\r\n  return text.split(\"|\").map((part, index) => (\r\n    <p key={index} style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n      {part.trim()}\r\n    </p>\r\n  ));\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FaChartLine,\r\n  FaPercentage,\r\n  FaUpload,\r\n  FaMoneyBillWave,\r\n} from \"react-icons/fa\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { formatCash } from \"../func/functions\";\r\n\r\nconst DailyPNL = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        console.log(data);\r\n        if (data.length > 0) {\r\n          const sortedData = data.sort(\r\n            (a, b) => new Date(b.entry_date) - new Date(a.entry_date)\r\n          );\r\n          setDailyPNLData(sortedData[0]);\r\n        } else {\r\n          setDailyPNLData(null);\r\n        }\r\n      } catch (error) {\r\n        setError(\"No Daily PNL data\");\r\n        console.error(\"No Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  const openCash = dailyPNLData\r\n    ? formatCash(dailyPNLData.open_cash)\r\n    : formatCash(0);\r\n  const closeCash = dailyPNLData\r\n    ? formatCash(dailyPNLData.close_cash)\r\n    : formatCash(0);\r\n  const balance = dailyPNLData\r\n    ? formatCash(dailyPNLData.balance)\r\n    : formatCash(0);\r\n  const roi = dailyPNLData ? `${dailyPNLData.roi}%` : \"0%\";\r\n  return (\r\n    <div className=\"daily-pnl-section\">\r\n      <div className=\"daily-pnl-card-container\">\r\n        {/* Open Cash Card */}\r\n        <div className=\"daily-pnl-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaMoneyBillWave className=\"card-icon\" />\r\n              <span className=\"label\">Open Cash:</span>\r\n            </div>\r\n            <span className=\"value\">{openCash}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Close Cash Card */}\r\n        <div className=\"daily-pnl-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaUpload className=\"card-icon\" />\r\n              <span className=\"label\">Close Cash:</span>\r\n            </div>\r\n            <span className=\"value\">{closeCash}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"divider\" />\r\n\r\n      <div className=\"daily-pnl-card-container\">\r\n        {/* Balance Card */}\r\n        <div className=\"daily-pnl-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaChartLine className=\"card-icon\" />\r\n              <span className=\"label\">P/L:</span>\r\n            </div>\r\n            <span className=\"value\">{balance}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* ROI Card */}\r\n        <div className=\"daily-pnl-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaPercentage className=\"card-icon\" />\r\n              <span className=\"label\">RoI:</span>\r\n            </div>\r\n            <span className=\"value\">{roi}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyPNL;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createDailyPnl, updateDailyPnl } from \"../api/DailyPNLApi\";\r\n\r\nconst NewDailyPNL = ({ onClose, onNewDailyPNL, existingData }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    entry_date: existingData?.entry_date || \"\",\r\n    open_cash: existingData?.open_cash || \"\",\r\n    close_cash: existingData?.close_cash || \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (existingData) {\r\n      setFormData({\r\n        entry_date: existingData.entry_date,\r\n        open_cash: existingData.open_cash,\r\n        close_cash: existingData.close_cash,\r\n      });\r\n    }\r\n  }, [existingData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let response;\r\n      if (existingData) {\r\n        response = await updateDailyPnl(existingData.id, {\r\n          entry_date: formData.entry_date,\r\n          open_cash: parseFloat(formData.open_cash),\r\n          close_cash: parseFloat(formData.close_cash),\r\n        });\r\n      } else {\r\n        response = await createDailyPnl({\r\n          entry_date: formData.entry_date,\r\n          open_cash: parseFloat(formData.open_cash),\r\n          close_cash: parseFloat(formData.close_cash),\r\n        });\r\n      }\r\n      onNewDailyPNL(response);\r\n      onClose();\r\n      navigate(\"/\", { replace: true });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error submitting Daily PNL entry:\", error);\r\n      alert(\"Error submitting Daily PNL entry\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"new-daily-pnl-container\">\r\n        <div className=\"header-card\">\r\n          <p className=\"title\">{existingData ? \"Update P/L\" : \"P/L\"}</p>\r\n          <p className=\"close-btn\" onClick={onClose}>\r\n            &times;\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Opening Cash\"\r\n              name=\"open_cash\"\r\n              value={formData.open_cash}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Closing Cash\"\r\n              name=\"close_cash\"\r\n              value={formData.close_cash}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Entry Date\"\r\n              name=\"entry_date\"\r\n              value={formData.entry_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">{existingData ? \"Update\" : \"Add\"}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDailyPNL;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { formatCash } from \"../func/functions\";\r\n\r\nconst Calender = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [modalDetails, setModalDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n      } catch (error) {\r\n        setError(\"Error fetching Daily PNL data\");\r\n        console.error(\"Error fetching Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  const aggregateByMonth = () => {\r\n    const monthlyData = {};\r\n\r\n    dailyPNLData.sort(\r\n      (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n    );\r\n\r\n    dailyPNLData.forEach((entry) => {\r\n      const date = new Date(entry.entry_date);\r\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\r\n      if (!monthlyData[monthKey]) {\r\n        monthlyData[monthKey] = {\r\n          initial_open_cash: entry.open_cash,\r\n          final_close_cash: entry.close_cash,\r\n          balance: parseFloat(entry.balance),\r\n          roi: 0,\r\n          entries: [],\r\n        };\r\n      } else {\r\n        monthlyData[monthKey].balance += parseFloat(entry.balance);\r\n        monthlyData[monthKey].final_close_cash = entry.close_cash;\r\n      }\r\n      monthlyData[monthKey].entries.push(entry);\r\n    });\r\n    Object.keys(monthlyData).forEach((monthKey) => {\r\n      const monthData = monthlyData[monthKey];\r\n      const { entries } = monthData;\r\n      if (entries.length > 0) {\r\n        monthData.initial_open_cash = entries[0].open_cash;\r\n        monthData.final_close_cash = entries[entries.length - 1].close_cash;\r\n      } else {\r\n        console.log(\"No data\");\r\n      }\r\n      monthData.roi = (\r\n        ((parseFloat(monthData.final_close_cash) -\r\n          parseFloat(monthData.initial_open_cash)) /\r\n          parseFloat(monthData.initial_open_cash)) *\r\n        100\r\n      ).toFixed(2);\r\n    });\r\n    console.log(monthlyData);\r\n    return monthlyData;\r\n  };\r\n\r\n  const aggregateByYear = () => {\r\n    const yearlyData = {};\r\n\r\n    dailyPNLData.forEach((entry) => {\r\n      const date = new Date(entry.entry_date);\r\n      const yearKey = date.getFullYear();\r\n\r\n      if (!yearlyData[yearKey]) {\r\n        yearlyData[yearKey] = {\r\n          initial_open_cash: entry.open_cash,\r\n          final_close_cash: entry.close_cash,\r\n          balance: parseFloat(entry.balance),\r\n          roi: 0,\r\n          entries: [],\r\n        };\r\n      } else {\r\n        yearlyData[yearKey].balance += parseFloat(entry.balance);\r\n        yearlyData[yearKey].final_close_cash = entry.close_cash;\r\n      }\r\n      yearlyData[yearKey].entries.push(entry);\r\n    });\r\n\r\n    Object.keys(yearlyData).forEach((yearKey) => {\r\n      const yearData = yearlyData[yearKey];\r\n      const { entries } = yearData;\r\n\r\n      if (entries.length > 0) {\r\n        yearData.initial_open_cash = entries[0].open_cash;\r\n        yearData.final_close_cash = entries[entries.length - 1].close_cash;\r\n      }\r\n      yearData.roi = (\r\n        ((parseFloat(yearData.final_close_cash) -\r\n          parseFloat(yearData.initial_open_cash)) /\r\n          parseFloat(yearData.initial_open_cash)) *\r\n        100\r\n      ).toFixed(2);\r\n    });\r\n    return yearlyData;\r\n  };\r\n\r\n  const tileContent = ({ date, view }) => {\r\n    const formattedDate = date.toISOString().split(\"T\")[0];\r\n\r\n    if (view === \"month\") {\r\n      const pnlEntry = dailyPNLData.find(\r\n        (pnl) => pnl.entry_date === formattedDate\r\n      );\r\n\r\n      if (pnlEntry) {\r\n        const icon =\r\n          parseFloat(pnlEntry.open_cash) <= parseFloat(pnlEntry.close_cash) ? (\r\n            <FaArrowUp style={{ color: \"#4a90e2\" }} />\r\n          ) : (\r\n            <FaArrowDown style={{ color: \"red\" }} />\r\n          );\r\n\r\n        return (\r\n          <div className=\"pnl-tile\">\r\n            <div>{icon}</div>\r\n            <div>{formatCash(pnlEntry.balance)}</div>\r\n            <div>{pnlEntry.roi}%</div>\r\n          </div>\r\n        );\r\n      }\r\n    } else if (view === \"year\") {\r\n      const monthlyData = aggregateByMonth();\r\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\r\n      const monthlyEntry = monthlyData[monthKey];\r\n\r\n      if (monthlyEntry) {\r\n        const icon =\r\n          parseFloat(monthlyEntry.final_close_cash) >\r\n          parseFloat(monthlyEntry.initial_open_cash) ? (\r\n            <FaArrowUp style={{ color: \"#4a90e2\" }} />\r\n          ) : (\r\n            <FaArrowDown style={{ color: \"red\" }} />\r\n          );\r\n\r\n        return (\r\n          <div className=\"pnl-tile\">\r\n            <div>{icon}</div>\r\n            <div>{formatCash(monthlyEntry.balance)}</div>\r\n            <div>{monthlyEntry.roi}%</div>\r\n          </div>\r\n        );\r\n      }\r\n    } else if (view === \"decade\") {\r\n      const yearlyData = aggregateByYear();\r\n      const yearKey = date.getFullYear();\r\n      const yearlyEntry = yearlyData[yearKey];\r\n\r\n      if (yearlyEntry) {\r\n        const icon =\r\n          parseFloat(yearlyEntry.final_close_cash) >\r\n          parseFloat(yearlyEntry.initial_open_cash) ? (\r\n            <FaArrowUp style={{ color: \"#4caf50\" }} />\r\n          ) : (\r\n            <FaArrowDown style={{ color: \"red\" }} />\r\n          );\r\n\r\n        return (\r\n          <div className=\"pnl-tile\">\r\n            <div>{icon}</div>\r\n            <div>{formatCash(yearlyEntry.balance)}</div>\r\n            <div>{yearlyEntry.roi}%</div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n  const handleTileClick = (date, view) => {\r\n    let modalDetails = null;\r\n\r\n    if (view === \"month\") {\r\n      const formattedDate = date.toISOString().split(\"T\")[0];\r\n      const pnlEntry = dailyPNLData.find(\r\n        (pnl) => pnl.entry_date === formattedDate\r\n      );\r\n\r\n      if (pnlEntry) {\r\n        const formattedDateForDisplay = `${\r\n          date.getMonth() + 1\r\n        }/${date.getDate()}`;\r\n        modalDetails = { date: formattedDateForDisplay, ...pnlEntry };\r\n      }\r\n    } else if (view === \"year\") {\r\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\r\n      const monthlyData = aggregateByMonth();\r\n      const monthlyEntry = monthlyData[monthKey];\r\n\r\n      if (monthlyEntry) {\r\n        modalDetails = { date: monthKey, ...monthlyEntry };\r\n      }\r\n    } else if (view === \"decade\") {\r\n      const yearKey = date.getFullYear();\r\n      const yearlyData = aggregateByYear();\r\n      const yearlyEntry = yearlyData[yearKey];\r\n\r\n      if (yearlyEntry) {\r\n        modalDetails = { date: yearKey, ...yearlyEntry };\r\n      }\r\n    }\r\n\r\n    if (modalDetails) {\r\n      setModalDetails(modalDetails);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalDetails(null);\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <Calendar\r\n        onChange={setSelectedDate}\r\n        value={selectedDate}\r\n        tileContent={tileContent}\r\n        onClickDay={(date) => handleTileClick(date, \"month\")}\r\n        onActiveStartDateChange={({ activeStartDate, view }) =>\r\n          handleTileClick(activeStartDate, view)\r\n        }\r\n      />\r\n      {modalDetails && (\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h2>{modalDetails.date}</h2>\r\n              <button className=\"close-button\" onClick={handleCloseModal}>\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p className=\"no-id\">\r\n                N<sup>o</sup>: {`000${modalDetails.id}`.slice(-5)}\r\n              </p>\r\n              <hr />\r\n              <div className=\"modal-row\">\r\n                <span className=\"label\">Open:</span>\r\n                <span className=\"separator\"></span>\r\n                <span className=\"value\">\r\n                  {formatCash(modalDetails.open_cash)}\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-row\">\r\n                <span className=\"label\">Close:</span>\r\n                <span className=\"separator\"></span>\r\n                <span className=\"value\">\r\n                  {formatCash(modalDetails.close_cash)}\r\n                </span>\r\n              </div>\r\n              <span className=\"hrs\">\r\n                <hr />\r\n              </span>\r\n\r\n              <div className=\"modal-row\">\r\n                <span className=\"label\">Balance:</span>\r\n                <span className=\"separator\"></span>\r\n                <span className=\"value\">\r\n                  {formatCash(modalDetails.balance)}\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-row\">\r\n                <span className=\"label\">RoI:</span>\r\n                <span className=\"separator\"></span>\r\n                <span className=\"value\">{modalDetails.roi}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calender;\r\n","const API_BASE_URL = \"http://localhost:8000\"; // Ensure this is the correct URL for your API\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Fetch all trades for a specific user\r\nexport const fetchTrades = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/trades?user_id=${userId}`);\r\n    if (!response.ok) throw new Error(\"Error fetching trades\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Trades Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new trade for a specific user\r\nexport const createTrade = async (tradeData) => {\r\n  const response = await fetch(`${API_BASE_URL}/trades?user_id=${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ ...tradeData, user_id: userId }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error creating trade\");\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\n// Update an existing trade for a specific user\r\nexport const updateTrade = async (tradeId, tradeData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/trades/${tradeId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(tradeData),\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error updating trade\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Trade Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a trade for a specific user\r\nexport const deleteTrade = async (tradeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/trades/${tradeId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error deleting trade\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Trade Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single trade by ID for a specific user\r\nexport const fetchTradeById = async (tradeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/trades/${tradeId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Trade not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Trade Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n// import NewTrade from \"./NewTrade\";\r\n\r\nconst MiniTradeTable = ({ userId }) => {\r\n  const [trades, setTrades] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null); // eslint-disable-next-line\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getTrades = async () => {\r\n      try {\r\n        const data = await fetchTrades();\r\n        setTrades(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getTrades();\r\n  }, []);\r\n\r\n  //   const handleOpenModal = () => {\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  //   const handleCloseModal = () => {\r\n  //     setShowModal(false);\r\n  //   };\r\n\r\n  if (loading) {\r\n    return <div>Loading trades...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error fetching trades: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"trade-table-container\">\r\n      <div className=\"header-card\">\r\n        <p className=\"title\">Trades</p>\r\n        {/* <i\r\n          className=\"btn btn-primary fa-solid fa-plus\"\r\n          id=\"trade-new-btn\"\r\n          onClick={handleOpenModal}\r\n        ></i> */}\r\n      </div>\r\n      <hr />\r\n      <table className=\"trade-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Pos.</th>\r\n            <th>Price</th>\r\n            <th>Exit Price</th>\r\n            <th>P/L</th>\r\n            <th>%</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {trades.map((trade) => (\r\n            <tr key={trade.id}>\r\n              <td>{formatDate(trade.entry_date)}</td>\r\n              <td>\r\n                {trade.symbol} ${trade.strike_price} {trade.option_type}\r\n              </td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>${trade.exit_price}</td>\r\n              <td>{formatCash(trade.profit_loss * 100)}</td>\r\n              <td>{(trade.roi * 100).toFixed(2)}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* {showModal && <NewTrade onClose={handleCloseModal} />} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniTradeTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst Bars = () => {\r\n  const [dailyPNLData, setDailyPNLData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [view, setView] = useState(\"daily\");\r\n\r\n  useEffect(() => {\r\n    const fetchDailyPNLData = async () => {\r\n      try {\r\n        const data = await fetchDailyPnls();\r\n        setDailyPNLData(data);\r\n        console.log(\"daily pnl: \", data);\r\n      } catch (error) {\r\n        setError(\"No Daily PNL data\");\r\n        console.error(\"No Daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDailyPNLData();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n  if (!dailyPNLData) return <p>No PNL data available</p>;\r\n\r\n  const formatMonthYear = (dateStr) => {\r\n    if (!dateStr || !dateStr.includes(\"-\")) return \"\";\r\n    const dateParts = dateStr.split(\"-\");\r\n    const month = dateParts[1];\r\n    const year = dateParts[0];\r\n    return `${month}/${year}`;\r\n  };\r\n\r\n  const getCurrentWeek = (data) => {\r\n    const today = new Date();\r\n\r\n    const startOfWeek = new Date(today);\r\n    startOfWeek.setDate(today.getDate() - today.getDay());\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    const endOfWeek = new Date(startOfWeek);\r\n    endOfWeek.setDate(startOfWeek.getDate() + 6);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    const weekData = data.filter((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      return entryDate >= startOfWeek && entryDate <= endOfWeek;\r\n    });\r\n\r\n    weekData.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n\r\n    return weekData;\r\n  };\r\n\r\n  const getCurrentMonth = (data) => {\r\n    const weeks = [];\r\n    let week = [];\r\n    const today = new Date();\r\n    const currentMonth = today.getMonth();\r\n\r\n    data.forEach((entry, index) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      if (entryDate.getMonth() === currentMonth) {\r\n        week.push(entry);\r\n        if ((index + 1) % 5 === 0) {\r\n          week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n          weeks.push(week);\r\n          week = [];\r\n        }\r\n      }\r\n    });\r\n\r\n    if (week.length) {\r\n      week.sort((a, b) => new Date(a.entry_date) - new Date(b.entry_date));\r\n      weeks.push(week);\r\n    }\r\n\r\n    return weeks;\r\n  };\r\n\r\n  const getMonthsData = (data) => {\r\n    const months = Array.from({ length: 12 }, () => []);\r\n    data.forEach((entry) => {\r\n      const entryDate = new Date(entry.entry_date);\r\n      months[entryDate.getMonth()].push(entry);\r\n    });\r\n    return months.filter((month) => month.length > 0);\r\n  };\r\n\r\n  const calculateBars = () => {\r\n    let barsData = [];\r\n\r\n    if (view === \"daily\") {\r\n      const currentWeek = getCurrentWeek(dailyPNLData);\r\n      barsData = currentWeek.map((day) => ({\r\n        date: formatDate(day.entry_date),\r\n        balance: parseFloat(day.balance || 0),\r\n      }));\r\n    } else if (view === \"weekly\") {\r\n      const currentMonth = getCurrentMonth(dailyPNLData);\r\n      barsData = currentMonth.map((week) => {\r\n        const weekBalance = week.reduce(\r\n          (sum, day) => sum + parseFloat(day.balance || 0),\r\n          0\r\n        );\r\n        return {\r\n          date: `${formatDate(week[0].entry_date)} - ${formatDate(\r\n            week[week.length - 1].entry_date\r\n          )}`,\r\n          balance: weekBalance,\r\n        };\r\n      });\r\n    } else if (view === \"monthly\") {\r\n      const months = getMonthsData(dailyPNLData);\r\n      barsData = months.map((month) => {\r\n        const monthBalance = month.reduce(\r\n          (sum, day) => sum + parseFloat(day.balance || 0),\r\n          0\r\n        );\r\n        return {\r\n          date: formatMonthYear(month[0].entry_date),\r\n          balance: monthBalance,\r\n        };\r\n      });\r\n    }\r\n\r\n    return barsData;\r\n  };\r\n\r\n  const barsData = calculateBars();\r\n\r\n  return (\r\n    <div className=\"main-bars-container\">\r\n      <div className=\"header-card\">\r\n        <div className=\"tab-container\">\r\n          <button\r\n            className={`tab-button ${view === \"daily\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"daily\")}\r\n          >\r\n            D\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"weekly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"weekly\")}\r\n          >\r\n            M\r\n          </button>\r\n          <button\r\n            className={`tab-button ${view === \"monthly\" ? \"active\" : \"\"}`}\r\n            onClick={() => setView(\"monthly\")}\r\n          >\r\n            Y\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <BarChart\r\n          data={barsData}\r\n          layout=\"vertical\"\r\n          style={{ background: \"transparent\" }}\r\n          margin={{ top: 0, right: 0, left: 0, bottom: 0 }}\r\n        >\r\n          <XAxis type=\"number\" tick={false} axisLine={false} />\r\n          <YAxis\r\n            type=\"category\"\r\n            dataKey=\"date\"\r\n            width={0}\r\n            tick={false}\r\n            axisLine={false}\r\n          />\r\n          <Tooltip\r\n            cursor={false}\r\n            formatter={(value) => formatCash(value)}\r\n            content={({ payload }) => {\r\n              if (payload && payload.length) {\r\n                const { date, balance } = payload[0].payload;\r\n                return (\r\n                  <div className=\"tooltip-content\">\r\n                    <p>{formatCash(balance)}</p>\r\n                    <p className=\"invest-date\">{date}</p>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            }}\r\n          />\r\n          <Bar\r\n            dataKey=\"balance\"\r\n            fill=\"#4a90e2\"\r\n            isAnimationActive={true}\r\n            radius={[5, 5, 5, 5]}\r\n            barSize={55}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n","const API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Create a new cash entry\r\nexport async function createCash(cashAmount) {\r\n  if (!userId) {\r\n    throw new Error(\"User ID is not available. Please log in.\");\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE_URL}/cash/`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      initial_cash: cashAmount.initial_cash,\r\n      entry_date: cashAmount.entry_date,\r\n      user_id: userId,\r\n    }),\r\n  });\r\n\r\n  const data = await response.json();\r\n  if (response.ok) {\r\n    console.log(\"Cash added successfully:\", data);\r\n    return data;\r\n  } else {\r\n    console.error(\"Error adding cash:\", data);\r\n    throw new Error(data);\r\n  }\r\n}\r\n\r\n// Fetch cash entries\r\nexport const getCash = async () => {\r\n  if (!userId) {\r\n    throw new Error(\"User ID is not available. Please log in.\");\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE_URL}/cash/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Error fetching cash data\");\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n","// Calculate Number of Trades\r\nexport const calculateNumberOfTrades = (trades) => trades.length;\r\n\r\n// Calculate Winning Trades\r\nexport const calculateWinningTrades = (trades) =>\r\n  trades.filter((trade) => trade.exit_price - trade.entry_price > 0).length;\r\n\r\n// Calculate Losing Trades\r\nexport const calculateLosingTrades = (trades) =>\r\n  trades.filter((trade) => trade.exit_price - trade.entry_price < 0).length;\r\n\r\n// Calculate Win Rate (percentage of winning trades)\r\nexport const calculateWinRate = (trades) => {\r\n  const winningTrades = calculateWinningTrades(trades);\r\n  const totalTrades = calculateNumberOfTrades(trades);\r\n  return totalTrades === 0 ? 0 : (winningTrades / totalTrades) * 100;\r\n};\r\n\r\n// Calculate Average Win (average profit of winning trades)\r\nexport const calculateAverageWin = (trades) => {\r\n  const winningTrades = trades.filter(\r\n    (trade) => trade.exit_price - trade.entry_price > 0\r\n  );\r\n  const totalWin = winningTrades.reduce(\r\n    (acc, trade) => acc + (trade.exit_price - trade.entry_price),\r\n    0\r\n  );\r\n  return winningTrades.length === 0 ? 0 : totalWin / winningTrades.length;\r\n};\r\n\r\n// Calculate Average Loss (average loss of losing trades)\r\nexport const calculateAverageLoss = (trades) => {\r\n  const losingTrades = trades.filter(\r\n    (trade) => trade.exit_price - trade.entry_price < 0\r\n  );\r\n  const totalLoss = losingTrades.reduce(\r\n    (acc, trade) => acc + Math.abs(trade.exit_price - trade.entry_price),\r\n    0\r\n  );\r\n  return losingTrades.length === 0 ? 0 : totalLoss / losingTrades.length;\r\n};\r\n\r\n// Calculate Risk-Reward Ratio (average win over average loss)\r\nexport const calculateRiskRewardRatio = (trades) => {\r\n  const averageWin = calculateAverageWin(trades);\r\n  const averageLoss = calculateAverageLoss(trades);\r\n  return averageLoss === 0 ? 0 : averageWin / averageLoss;\r\n};\r\n\r\n// Calculate Absolute Return (total profit/loss)\r\nexport const calculateAbsoluteReturn = (trades) => {\r\n  const totalPL = trades.reduce(\r\n    (acc, trade) => acc + (trade.exit_price - trade.entry_price),\r\n    0\r\n  );\r\n  return totalPL;\r\n};\r\n\r\n// Calculate Sharpe Ratio (return/risk, assumes risk-free rate of 0 for simplicity)\r\nexport const calculateSharpeRatio = (trades) => {\r\n  const absoluteReturn = calculateAbsoluteReturn(trades);\r\n  const standardDeviation = calculateStandardDeviation(trades);\r\n  return standardDeviation === 0 ? 0 : absoluteReturn / standardDeviation;\r\n};\r\n\r\n// Calculate Standard Deviation of returns for Sharpe Ratio\r\nexport const calculateStandardDeviation = (trades) => {\r\n  const returns = trades.map((trade) => trade.exit_price - trade.entry_price);\r\n  const mean = returns.reduce((acc, value) => acc + value, 0) / returns.length;\r\n  const variance =\r\n    returns.reduce((acc, value) => acc + Math.pow(value - mean, 2), 0) /\r\n    returns.length;\r\n  return Math.sqrt(variance);\r\n};\r\n\r\n// Calculate Average Days in Trade\r\nexport const calculateAverageDaysInTrade = (trades) => {\r\n  const totalDays = trades.reduce((acc, trade) => {\r\n    const entryDate = new Date(trade.entry_date);\r\n    const exitDate = new Date(trade.exit_date);\r\n    const diffTime = Math.abs(exitDate - entryDate);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    return acc + diffDays;\r\n  }, 0);\r\n  return trades.length === 0 ? 0 : totalDays / trades.length;\r\n};\r\n\r\n// Calculate Cash Balance\r\nexport const calculateCashBalance = (initialCash, netPL) => {\r\n  const initialCashNumber = Number(initialCash);\r\n  const netPLNumber = Number(netPL);\r\n\r\n  if (isNaN(initialCashNumber) || isNaN(netPLNumber)) {\r\n    console.error(\"Invalid input to calculateCashBalance:\", {\r\n      initialCash,\r\n      netPL,\r\n    });\r\n    return 0;\r\n  }\r\n\r\n  return initialCashNumber + netPLNumber;\r\n};\r\n","import { getCash } from \"../api/CashApi\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\nimport {\r\n  calculateNumberOfTrades,\r\n  calculateWinningTrades,\r\n  calculateLosingTrades,\r\n  calculateWinRate,\r\n  calculateAverageWin,\r\n  calculateAverageLoss,\r\n  calculateRiskRewardRatio,\r\n  calculateAbsoluteReturn,\r\n  calculateSharpeRatio,\r\n  calculateAverageDaysInTrade,\r\n} from \"./AnalysisCalc\";\r\n\r\nexport const performAnalysis = async () => {\r\n  try {\r\n    const cashData = await getCash();\r\n    const trades = await fetchTrades();\r\n\r\n    console.log(cashData);\r\n    console.log(trades);\r\n\r\n    // Calculate metrics\r\n    const numberOfTrades = calculateNumberOfTrades(trades);\r\n    const winningTrades = calculateWinningTrades(trades);\r\n    const losingTrades = calculateLosingTrades(trades);\r\n    const winRate = calculateWinRate(trades);\r\n    const averageWin = calculateAverageWin(trades);\r\n    const averageLoss = calculateAverageLoss(trades);\r\n    const riskRewardRatio = calculateRiskRewardRatio(trades);\r\n    const absoluteReturn = calculateAbsoluteReturn(trades);\r\n    const sharpeRatio = calculateSharpeRatio(trades);\r\n    const avgDaysInTrade = calculateAverageDaysInTrade(trades);\r\n\r\n    // Assuming netPL needs to be fetched or calculated elsewhere\r\n    // const netPL = ...; // Fetch or calculate netPL\r\n    // const cashBalance = calculateCashBalance(cashData.initial_cash, netPL);\r\n\r\n    // Prepare the results object\r\n    const analysisResults = {\r\n      numberOfTrades,\r\n      winningTrades,\r\n      losingTrades,\r\n      winRate,\r\n      averageWin,\r\n      averageLoss,\r\n      riskRewardRatio,\r\n      absoluteReturn,\r\n      sharpeRatio,\r\n      avgDaysInTrade,\r\n      // cashBalance, // Uncomment if needed\r\n    };\r\n\r\n    console.log(analysisResults);\r\n\r\n    return analysisResults;\r\n  } catch (error) {\r\n    console.error(\"Analysis Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { performAnalysis } from \"./AnalysisGet\";\r\nimport { Line } from \"rc-progress\";\r\n\r\nconst AnalysisDisplay = () => {\r\n  const [analysisResults, setAnalysisResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const results = await performAnalysis();\r\n        setAnalysisResults(results);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    console.error(\"Error fetching analysis data:\", error);\r\n  }\r\n\r\n  if (!analysisResults && !error) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const {\r\n    absoluteReturn = 0,\r\n    sharpeRatio = 0,\r\n    winRate = 0,\r\n    numberOfTrades = 0,\r\n    winningTrades = 0,\r\n    losingTrades = 0,\r\n    averageWin = 0,\r\n    averageLoss = 0,\r\n    riskRewardRatio = 0,\r\n  } = analysisResults || {};\r\n  const total = averageWin + averageLoss;\r\n  const winPercent = total > 0 ? (averageWin / total) * 100 : 50;\r\n  const formatCash = (value) => `$${value.toFixed(2)}`;\r\n  const absoluteReturnPercentage = absoluteReturn * 100;\r\n  const sharpeRatioPercentage = (sharpeRatio / 3) * 100;\r\n\r\n  const data = [\r\n    {\r\n      name: \"Average Win\",\r\n      value: winPercent,\r\n      color: \"#4a90e2\",\r\n      amount: averageWin,\r\n    },\r\n    {\r\n      name: \"Average Loss\",\r\n      value: 100 - winPercent,\r\n      color: \"#f44336\",\r\n      amount: averageLoss,\r\n    },\r\n  ];\r\n\r\n  const winRateData = [\r\n    { name: \"Win Rate\", value: winRate, color: \"#4a90e2\" },\r\n    { name: \"Remaining\", value: 100 - winRate, color: \"#d8e3ef\" },\r\n  ];\r\n  const formatValue = (value, isCurrency = false) => {\r\n    if (isNaN(value) || value === undefined) {\r\n      return isCurrency ? \"$0.00\" : \"N/A\";\r\n    }\r\n    return isCurrency ? `$${value.toFixed(2)}` : `${value.toFixed(2)}`;\r\n  };\r\n  return (\r\n    <div className=\"analysis-container\">\r\n      <div className=\"analysis-row\">\r\n        <div className=\"analysis-circle\">\r\n          <h3>Trades</h3>\r\n          <p>{numberOfTrades}</p>\r\n        </div>\r\n        <div className=\"analysis-circle\">\r\n          <h3>Wins</h3>\r\n          <p>{winningTrades}</p>\r\n        </div>\r\n        <div className=\"analysis-circle\">\r\n          <h3>Losses</h3>\r\n          <p>{losingTrades}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"analysis-metric-row\">\r\n        {/* Absolute Return Metric */}\r\n        <div className=\"analysis-metric\">\r\n          <h3>Absolute Return</h3>\r\n          <p>{`${absoluteReturn.toFixed(2) * 100}%`}</p>\r\n          <ResponsiveContainer width=\"100%\" height={40}>\r\n            <BarChart\r\n              data={[\r\n                {\r\n                  name: \"Abs. Return\",\r\n                  value: absoluteReturnPercentage.toFixed(2),\r\n                },\r\n              ]}\r\n              layout=\"vertical\"\r\n            >\r\n              <XAxis type=\"number\" domain={[0, 100]} hide />\r\n              <YAxis type=\"category\" dataKey=\"name\" hide />\r\n              <Bar\r\n                dataKey=\"value\"\r\n                fill={absoluteReturnPercentage >= 50 ? \"#4a90e2\" : \"#e74c3c\"}\r\n                background={{\r\n                  fill: \"#d8e3ef\",\r\n                  radius: [5, 5, 5, 5],\r\n                }}\r\n                isAnimationActive={true}\r\n                radius={[5, 5, 5, 5]}\r\n                barSize={20}\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Sharpe Ratio Metric */}\r\n        <div className=\"analysis-metric\">\r\n          <h3>Sharpe Ratio</h3>\r\n          <p>{sharpeRatio.toFixed(2)}</p>\r\n          <ResponsiveContainer width=\"100%\" height={40}>\r\n            <BarChart\r\n              data={[{ name: \"Sharpe Ratio\", value: sharpeRatioPercentage }]}\r\n              layout=\"vertical\"\r\n            >\r\n              <XAxis type=\"number\" domain={[0, 100]} hide />\r\n              <YAxis type=\"category\" dataKey=\"name\" hide />\r\n              <Bar\r\n                dataKey=\"value\"\r\n                fill={sharpeRatio >= 3 ? \"#4a90e2\" : \"#f44336\"}\r\n                background={{\r\n                  fill: \"#d8e3ef\",\r\n                  radius: [5, 5, 5, 5],\r\n                }}\r\n                isAnimationActive={true}\r\n                radius={[5, 5, 5, 5]}\r\n                barSize={20}\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"analysis-circle-row\">\r\n        <ResponsiveContainer width=\"100%\" height={150}>\r\n          <PieChart>\r\n            <Pie\r\n              data={winRateData}\r\n              innerRadius={50}\r\n              outerRadius={70}\r\n              startAngle={90}\r\n              endAngle={-270}\r\n              stroke=\"none\"\r\n              dataKey=\"value\"\r\n            >\r\n              {winRateData.map((entry, index) => (\r\n                <Cell\r\n                  key={`winrate-cell-${index}`}\r\n                  fill={entry.color}\r\n                  style={{\r\n                    transition: \"filter 0.3s\",\r\n                    cursor: entry.name === \"Win Rate\" ? \"pointer\" : \"default\",\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    if (entry.name === \"Win Rate\") {\r\n                      e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\r\n                    }\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.filter = \"none\";\r\n                  }}\r\n                />\r\n              ))}\r\n            </Pie>\r\n\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (\r\n                  payload &&\r\n                  payload.length &&\r\n                  payload[0].payload.name === \"Win Rate\"\r\n                ) {\r\n                  const { name, value } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p>{name}</p>\r\n                      <p className=\"amount\">{`${value.toFixed(2)}%`}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n\r\n        {/* Average Win and Loss */}\r\n        <ResponsiveContainer width=\"100%\" height={150}>\r\n          <PieChart>\r\n            <Pie\r\n              data={data}\r\n              innerRadius={50}\r\n              outerRadius={70}\r\n              dataKey=\"value\"\r\n              startAngle={90}\r\n              paddingAngle={1}\r\n              endAngle={-270}\r\n              // stroke=\"none\"\r\n            >\r\n              {data.map((entry, index) => (\r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={entry.color}\r\n                  style={{\r\n                    transition: \"filter 0.3s\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.filter = `drop-shadow(0 0 3px ${entry.color})`;\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.filter = \"none\";\r\n                  }}\r\n                />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { name, amount } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p>{name}</p>\r\n                      <p className=\"amount\">{formatCash(amount)}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisDisplay;\r\n","const API_BASE_URL = \"http://localhost:8000\"; // Ensure this is the correct URL for your API\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Fetch all transactions for a specific user\r\nexport const fetchTransactions = async () => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/transactions?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Error fetching transactions\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Transactions Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new transaction for a specific user\r\nexport const createTransaction = async (transactionData) => {\r\n  const response = await fetch(\r\n    `${API_BASE_URL}/transactions?user_id=${userId}`,\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...transactionData, user_id: userId }),\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error creating transaction\");\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\n// Update an existing transaction for a specific user\r\nexport const updateTransaction = async (transactionId, transactionData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/transactions/${transactionId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(transactionData),\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error updating transaction\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Transaction Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a transaction for a specific user\r\nexport const deleteTransaction = async (transactionId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/transactions/${transactionId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error deleting transaction\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Transaction Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single transaction by ID for a specific user\r\nexport const fetchTransactionById = async (transactionId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/transactions/${transactionId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Transaction not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Transaction Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","// Calculate Initial Cash (from API response)\r\nexport const calculateInitialCash = (cashData) => {\r\n  return cashData?.initial_cash ? Number(cashData.initial_cash) : 0;\r\n};\r\n\r\n// // Calculate Total Deposits\r\n// export const calculateTotalDeposits = (transactions) => {\r\n//   return transactions\r\n//     .filter((transaction) => transaction.transaction_type === \"deposit\")\r\n//     .reduce((total, transaction) => total + Number(transaction.amount), 0);\r\n// };\r\n\r\n// // Calculate Total Withdrawals\r\n// export const calculateTotalWithdrawals = (transactions) => {\r\n//   return transactions\r\n//     .filter((transaction) => transaction.transaction_type === \"withdrawal\")\r\n//     .reduce((total, transaction) => total + Number(transaction.amount), 0);\r\n// };\r\n\r\n// Calculate Total Deposits\r\nexport const calculateTotalDeposits = (transactions) => {\r\n  if (!Array.isArray(transactions)) {\r\n    console.error(\"Expected an array of transactions, but got:\", transactions);\r\n    return 0;\r\n  }\r\n\r\n  return transactions\r\n    .filter((transaction) => transaction.transaction_type === \"deposit\")\r\n    .reduce((total, transaction) => total + Number(transaction.amount), 0);\r\n};\r\n\r\n// Calculate Total Withdrawals\r\nexport const calculateTotalWithdrawals = (transactions) => {\r\n  if (!Array.isArray(transactions)) {\r\n    console.error(\"Expected an array of transactions, but got:\", transactions);\r\n    return 0;\r\n  }\r\n\r\n  return transactions\r\n    .filter((transaction) => transaction.transaction_type === \"withdrawal\")\r\n    .reduce((total, transaction) => total + Number(transaction.amount), 0);\r\n};\r\n\r\n// Calculate Net Profit/Loss (from daily PNL data)\r\nexport const calculateNetPL = (dailyPnls) => {\r\n  return dailyPnls.reduce((totalPL, pnl) => {\r\n    return totalPL + Number(pnl.balance);\r\n  }, 0);\r\n};\r\n\r\n// Calculate Available Cash (Initial Cash + Net P/L + Deposits - Withdrawals)\r\nexport const calculateAvailableCash = (initialCash, netPL, transactions) => {\r\n  const totalDeposits = calculateTotalDeposits(transactions);\r\n  const totalWithdrawals = calculateTotalWithdrawals(transactions);\r\n\r\n  return initialCash + totalDeposits - totalWithdrawals + netPL;\r\n};\r\n\r\n// Calculate Cash Balance (same as available cash)\r\nexport const calculateCashBalance = (initialCash, netPL, transactions) => {\r\n  return calculateAvailableCash(initialCash, netPL, transactions);\r\n};\r\n\r\n// Calculate Return on Investment (RoI) based on Initial Cash and Net P/L\r\nexport const calculateROI = (initialCash, netPL) => {\r\n  if (initialCash === 0) return 0;\r\n  return (netPL / initialCash) * 100;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { getCash } from \"../api/CashApi\";\r\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\r\nimport { LineChart, Line, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\nimport {\r\n  calculateInitialCash,\r\n  calculateNetPL,\r\n  calculateCashBalance,\r\n  calculateROI,\r\n} from \"../cash/CashCalc\";\r\n\r\nconst InvestmentChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [investmentSummary, setInvestmentSummary] = useState(null);\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchInvestmentData = async () => {\r\n      try {\r\n        const [dailyPnls, cashData, transactionsResponse] = await Promise.all([\r\n          fetchDailyPnls(),\r\n          getCash(),\r\n          fetchTransactions(),\r\n        ]);\r\n\r\n        if (dailyPnls && cashData && transactionsResponse) {\r\n          const sortedData = dailyPnls.sort(\r\n            (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n          );\r\n\r\n          setTransactions(transactionsResponse);\r\n\r\n          setChartData(formatChartData(sortedData, cashData));\r\n          setInvestmentSummary(\r\n            calculateInvestmentSummary(\r\n              sortedData,\r\n              cashData,\r\n              transactionsResponse\r\n            ) // Pass transactions\r\n          );\r\n        } else {\r\n          setError(\"No daily PNL, cash, or transaction data available\");\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching data\");\r\n        console.error(\"Error fetching daily PNL data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInvestmentData();\r\n  }, []);\r\n\r\n  const calculateInvestmentSummary = (dailyPnls, cashData, transactions) => {\r\n    const initialCash = calculateInitialCash(cashData);\r\n    const netPL = calculateNetPL(dailyPnls);\r\n    const cashBalance = calculateCashBalance(initialCash, netPL, transactions);\r\n    const roi = calculateROI(initialCash, netPL);\r\n\r\n    const latestDate = formatDate(\r\n      dailyPnls.length > 0 ? dailyPnls[dailyPnls.length - 1]?.entry_date : null\r\n    );\r\n\r\n    return {\r\n      balance: cashBalance,\r\n      roi: roi,\r\n      latestDate: latestDate,\r\n      pnl: netPL,\r\n    };\r\n  };\r\n\r\n  const formatChartData = (data, cashData) => {\r\n    const initialEntry = {\r\n      date: formatDate(cashData.entry_date),\r\n      closingBalance: parseFloat(cashData.initial_cash || 0),\r\n    };\r\n\r\n    const formattedData = data.map((entry) => ({\r\n      date: formatDate(entry.entry_date),\r\n      closingBalance: parseFloat(entry.close_cash || 0),\r\n    }));\r\n\r\n    return [initialEntry, ...formattedData];\r\n  };\r\n\r\n  return (\r\n    <div className=\"investment-chart-container\">\r\n      <div className=\"summary-section\">\r\n        <p className=\"investment-cash\">\r\n          {formatCash(investmentSummary?.balance || 0)}\r\n        </p>\r\n        <p className=\"investment-roi\">\r\n          {investmentSummary\r\n            ? `${formatCash(\r\n                investmentSummary.pnl || 0\r\n              )} (${investmentSummary.roi.toFixed(2)}%)`\r\n            : \"Loading...\"}\r\n        </p>\r\n        <p className=\"investment-date\">\r\n          {investmentSummary?.latestDate || \"Loading...\"}\r\n        </p>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={chartData} style={{ background: \"transparent\" }}>\r\n            <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { date, closingBalance } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p>{formatCash(closingBalance)}</p>\r\n                      <p className=\"invest-date\">{date}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"closingBalance\"\r\n              stroke=\"#4a90e2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvestmentChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\nimport { getCash } from \"../api/CashApi\";\r\nimport { performAnalysis } from \"../analysis/AnalysisGet\";\r\nimport {\r\n  Line,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst EQTCurve = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [tradeSummary, setTradeSummary] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAndAnalyzeData = async () => {\r\n      try {\r\n        const cashData = await getCash();\r\n        const trades = await fetchTrades();\r\n\r\n        if (cashData && trades && trades.length > 0) {\r\n          const startingEquity = parseFloat(cashData.initial_cash || 0);\r\n          const formattedData = formatChartData(\r\n            trades,\r\n            startingEquity,\r\n            cashData\r\n          );\r\n          setChartData(formattedData);\r\n\r\n          const analysisResults = await performAnalysis();\r\n\r\n          const finalEquity = formattedData[formattedData.length - 1].equity;\r\n          console.log(\"Starting Equity:\", startingEquity);\r\n          console.log(\"Final Equity:\", finalEquity);\r\n\r\n          const roi = (\r\n            ((finalEquity - startingEquity) / startingEquity) *\r\n            100\r\n          ).toFixed(2);\r\n\r\n          console.log(\"Calculated ROI:\", roi);\r\n\r\n          setTradeSummary({\r\n            totalTrades: analysisResults.numberOfTrades,\r\n            roi,\r\n            sharpeRatio: analysisResults.sharpeRatio.toFixed(2),\r\n          });\r\n        } else {\r\n          setError(\"No trade or cash data available\");\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching trade or cash data\");\r\n        console.error(\"Error:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAndAnalyzeData();\r\n  }, []);\r\n\r\n  const formatChartData = (trades, startingEquity, cashData) => {\r\n    let cumulativeEquity = startingEquity;\r\n    const idealIncrement =\r\n      (startingEquity * 3 - startingEquity) / trades.length;\r\n\r\n    const sortedTrades = trades.sort(\r\n      (a, b) => new Date(a.close_date) - new Date(b.close_date)\r\n    );\r\n\r\n    const chartData = [\r\n      {\r\n        date: formatDate(cashData.entry_date),\r\n        equity: startingEquity,\r\n        idealEquity: startingEquity,\r\n      },\r\n    ];\r\n\r\n    sortedTrades.forEach((trade, index) => {\r\n      cumulativeEquity += parseFloat(trade.profit_loss || 0) * 100;\r\n      const idealEquity = startingEquity + idealIncrement * (index + 1);\r\n\r\n      chartData.push({\r\n        date: formatDate(trade.close_date),\r\n        equity: cumulativeEquity,\r\n        idealEquity: idealEquity,\r\n      });\r\n    });\r\n\r\n    return chartData;\r\n  };\r\n\r\n  return (\r\n    <div className=\"equity-curve-chart-container\">\r\n      {/* Summary Section for Trade Analysis */}\r\n      <div className=\"summary-section\">\r\n        <p className=\"equity-summary-total-trades\">\r\n          <span className=\"trade-count\">\r\n            {tradeSummary ? tradeSummary.totalTrades : \"...\"}\r\n          </span>\r\n          <span className=\"trade-label\"> Trades</span>\r\n        </p>\r\n\r\n        <p className=\"equity-summary-roi\">\r\n          {tradeSummary ? `${tradeSummary.roi}%` : \"%...\"}\r\n        </p>\r\n        <p className=\"equity-summary-sharpe-ratio\">\r\n          {tradeSummary ? tradeSummary.sharpeRatio : \"Sharpe Ratio...\"}\r\n        </p>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <ComposedChart data={chartData}>\r\n            <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n            <YAxis hide={true} />\r\n\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { date, equity } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p>{formatCash(equity)}</p>\r\n                      <p className=\"trade-date\">{date}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"idealEquity\"\r\n              stroke=\"#dddddd\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              name=\"Ideal Equity\"\r\n            />\r\n\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"equity\"\r\n              stroke=\"#4A90E2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              name=\"Equity Curve\"\r\n            />\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EQTCurve;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DailyPNL from \"../controllers/pnl/DailyPNL\";\r\nimport NewDailyPNL from \"../controllers/pnl/NewDailyPNL\";\r\nimport Calendar from \"../controllers/pnl/Calender\";\r\nimport MiniTradeTable from \"../controllers/trades/MiniTradeTable\";\r\nimport Bars from \"../controllers/pnl/Bars\";\r\nimport AnalysisDisplay from \"../controllers/analysis/AnalysisDisplay\";\r\nimport InvestmentChart from \"../controllers/pnl/InvestmentChart\";\r\nimport EQTCurve from \"../controllers/trades/EQTcurve\";\r\n\r\nconst Home = ({ onClose }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem(\"user_data\");\r\n    if (storedUserData) {\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setUserData(parsedUserData);\r\n    }\r\n  }, []);\r\n\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleNewDailyPNL = (newDailyPNL) => {\r\n    console.log(\"New daily PNL entry:\", newDailyPNL);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home-dash\">\r\n        <div className=\"header-card\">\r\n          {userData && (\r\n            <p className=\"title\">\r\n              {/* Welcome {userData.fname || userData.username} */}\r\n            </p>\r\n          )}\r\n          <div className=\"tooltip\">\r\n            <i\r\n              className=\"btn btn-primary fa-solid fa-plus\"\r\n              id=\"new-pnl-btn\"\r\n              onClick={handleOpenModal}\r\n            ></i>\r\n            <span className=\"tooltiptext\">New P/L</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"profit-chart-trade\">\r\n          <InvestmentChart />\r\n        </div>\r\n        <div className=\"pnl-home\">\r\n          <DailyPNL />\r\n        </div>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <NewDailyPNL\r\n          onClose={handleCloseModal}\r\n          onNewDailyPNL={handleNewDailyPNL}\r\n        />\r\n      )}\r\n\r\n      {/* Calendar and Bars side by side */}\r\n      <div className=\"calendar-bars-container\">\r\n        <div className=\"bars-home\">\r\n          <Bars />\r\n        </div>\r\n        <div className=\"calendar-home\">\r\n          <Calendar />\r\n        </div>\r\n      </div>\r\n\r\n      {/* AnalysisDisplay in full width */}\r\n      <div className=\"analysis-display-container\">\r\n        <AnalysisDisplay />\r\n      </div>\r\n\r\n      {/* Trades Table and EQTchat side by side */}\r\n      <div className=\"trades-eqt-container\">\r\n        <div className=\"trades-table\">\r\n          <MiniTradeTable />\r\n        </div>\r\n        <div className=\"eqt-chart\">\r\n          <EQTCurve />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createTrade } from \"../api/TradesAPI\";\r\n// import { getTrades } from \"./TradeTable\";\r\n\r\nconst NewTrade = ({ onClose }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    symbol: \"\",\r\n    option_type: \"CALL\",\r\n    strike_price: \"\",\r\n    exp_date: \"\",\r\n    entry_price: \"\",\r\n    exit_price: \"\",\r\n    contracts: \"\",\r\n    entry_date: \"\",\r\n    close_date: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await createTrade({\r\n        ...formData,\r\n        strike_price: parseFloat(formData.strike_price),\r\n        entry_price: parseFloat(formData.entry_price),\r\n        exit_price: formData.exit_price\r\n          ? parseFloat(formData.exit_price)\r\n          : null,\r\n        contracts: parseInt(formData.contracts),\r\n      });\r\n\r\n      console.log(\"Success:\", response);\r\n      onClose();\r\n      navigate(\"/trades\", { replace: true });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Error submitting trade\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"new-trade-container\">\r\n        <div className=\"header-card\">\r\n          <p className=\"title\">New Trade</p>\r\n          <p className=\"close-btn\" onClick={onClose}>\r\n            &times;\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Entry Date\"\r\n              name=\"entry_date\"\r\n              value={formData.entry_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Symbol\"\r\n              name=\"symbol\"\r\n              value={formData.symbol}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <select\r\n              name=\"option_type\"\r\n              value={formData.option_type}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"CALL\">CALL</option>\r\n              <option value=\"PUT\">PUT</option>\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Strike Price\"\r\n              name=\"strike_price\"\r\n              value={formData.strike_price}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Exp. Date\"\r\n              name=\"exp_date\"\r\n              value={formData.exp_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Entry Price\"\r\n              name=\"entry_price\"\r\n              value={formData.entry_price}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Exit Price\"\r\n              name=\"exit_price\"\r\n              value={formData.exit_price}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"QTY\"\r\n              name=\"contracts\"\r\n              value={formData.contracts}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Close Date\"\r\n              name=\"close_date\"\r\n              value={formData.close_date}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTrade;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\nimport { formatDate, formatCash } from \"../func/functions\";\r\nimport NewTrade from \"./NewTrade\";\r\n\r\nconst TradeTable = ({ userId }) => {\r\n  const [trades, setTrades] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Fetch trades on component mount\r\n  useEffect(() => {\r\n    const getTrades = async () => {\r\n      try {\r\n        const data = await fetchTrades();\r\n        setTrades(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getTrades();\r\n  }, []);\r\n\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading trades...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error fetching trades: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"trade-table-container\">\r\n      <div className=\"header-card\">\r\n        <p className=\"title\">Trades</p>\r\n        <div className=\"tooltip\">\r\n          <i\r\n            className=\"btn btn-primary fa-solid fa-plus\"\r\n            id=\"trade-new-btn\"\r\n            onClick={handleOpenModal}\r\n          ></i>\r\n          <span className=\"tooltiptext\">New Trade</span>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <table className=\"trade-table\">\r\n        <thead>\r\n          <tr>\r\n            {/* <th>ID</th> */}\r\n            <th>Date</th>\r\n            <th>Pos.</th>\r\n            <th>Price</th>\r\n            <th>QTY</th>\r\n            <th>Principal</th>\r\n            <th>Exit Date</th>\r\n            <th>Exit Price</th>\r\n            <th>Total</th>\r\n            <th>P/L</th>\r\n            <th>RoI</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {trades.map((trade) => (\r\n            <tr key={trade.id}>\r\n              {/* <td>{trade.id}</td> */}\r\n              <td>{formatDate(trade.entry_date)}</td>\r\n              <td>\r\n                {trade.symbol} ${trade.strike_price} {trade.option_type}{\" \"}\r\n                {formatDate(trade.exp_date)}\r\n              </td>\r\n              <td>${trade.entry_price}</td>\r\n              <td>{trade.contracts}</td>\r\n              <td>{formatCash(trade.principal * 100)}</td>\r\n              <td>{formatDate(trade.close_date)}</td>\r\n              <td>${trade.exit_price}</td>\r\n              <td>{formatCash(trade.exit_price * trade.contracts * 100)}</td>\r\n              <td>{formatCash(trade.profit_loss * 100)}</td>\r\n              <td>{(trade.roi * 100).toFixed(2)}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {showModal && <NewTrade onClose={handleCloseModal} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradeTable;\r\n","const API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Fetch all watchlists for a specific user\r\nexport const fetchWatchlists = async () => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/watchlists?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Error fetching watchlists\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Watchlists Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new watchlist for a specific user\r\nexport const createWatchlist = async (watchlistData) => {\r\n  const response = await fetch(`${API_BASE_URL}/watchlists?user_id=${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ ...watchlistData, user_id: userId }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error creating watchlist\");\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\n// Update an existing watchlist for a specific user\r\nexport const updateWatchlist = async (watchlistId, watchlistData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/watchlists/${watchlistId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(watchlistData),\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error updating watchlist\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Watchlist Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a watchlist for a specific user\r\nexport const deleteWatchlist = async (watchlistId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/watchlists/${watchlistId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error deleting watchlist\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Watchlist Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single watchlist by ID for a specific user\r\nexport const fetchWatchlistById = async (watchlistId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/watchlists/${watchlistId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Watchlist not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Watchlist Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createWatchlist } from \"../api/WatchlistApi\";\r\n\r\nconst NewWatchlist = ({ onClose }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    symbol: \"\",\r\n    price: \"\",\r\n    target_price: \"\",\r\n    target_hit: false,\r\n    exp_date: \"\",\r\n    entry_date: \"\",\r\n    plan: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await createWatchlist(formData);\r\n      console.log(\"Success:\", response);\r\n      onClose();\r\n      navigate(\"/trades\", { replace: true });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Error submitting watchlist\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"new-watchlist-container\">\r\n        <div className=\"header-card\">\r\n          <p className=\"title\">New</p>\r\n          <p className=\"close-btn\" onClick={onClose}>\r\n            &times;\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Entry Date\"\r\n              name=\"entry_date\"\r\n              value={formData.entry_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Symbol\"\r\n              name=\"symbol\"\r\n              value={formData.symbol}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Price\"\r\n              name=\"price\"\r\n              value={formData.price}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Target Price\"\r\n              name=\"target_price\"\r\n              value={formData.target_price}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <select\r\n              name=\"target_hit\"\r\n              value={formData.target_hit ? \"Yes\" : \"No\"}\r\n              onChange={(e) =>\r\n                handleChange({\r\n                  target: {\r\n                    name: \"target_hit\",\r\n                    value: e.target.value === \"Yes\",\r\n                  },\r\n                })\r\n              }\r\n              required\r\n            >\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n          </label>\r\n\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Exp. Date\"\r\n              name=\"exp_date\"\r\n              value={formData.exp_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Plan\"\r\n              name=\"plan\"\r\n              value={formData.plan}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewWatchlist;\r\n","import React, { useState } from \"react\";\r\nimport { formatDate, formatCash, splitText } from \"../func/functions\";\r\n\r\nconst UpdateWatchlist = ({ watchlist, onClose, onSave, handleDelete }) => {\r\n  const [formData, setFormData] = useState({\r\n    target_hit: watchlist.target_hit,\r\n  });\r\n  const [showUpdateButton, setShowUpdateButton] = useState(false);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n  const handleToggle = () => {\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      target_hit: !prevFormData.target_hit,\r\n    }));\r\n    setShowUpdateButton(true);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSave(formData);\r\n    setShowUpdateButton(false);\r\n    setIsEditable(false);\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setIsEditable(true);\r\n    setShowUpdateButton(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h2>{watchlist.symbol}</h2>\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"watchlist-details\">\r\n            <div className=\"watchlist-header\">\r\n              <p className=\"no-id\">\r\n                N<sup>o</sup>: {`000${watchlist.id}`.slice(-5)}\r\n              </p>\r\n              <p className=\"entry-date\">{formatDate(watchlist.entry_date)}</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"watchlist-info\">\r\n              <p>\r\n                <strong>Price:</strong>\r\n                <span className=\"watchlist-value\">\r\n                  {formatCash(watchlist.price)}\r\n                </span>\r\n              </p>\r\n              <p className=\"target-price\">\r\n                <strong>Target Price:</strong>\r\n                <strong className=\"watchlist-value\">\r\n                  {formatCash(watchlist.target_price)}\r\n                </strong>\r\n              </p>\r\n              <p>\r\n                <strong>Exp. Date:</strong>\r\n                <span className=\"watchlist-value\">\r\n                  {formatDate(watchlist.exp_date)}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <hr className=\"small-hr\" />\r\n            <div className=\"plan-section\">\r\n              <p>\r\n                <strong>Plan:</strong>{\" \"}\r\n                {isEditable ? (\r\n                  <textarea\r\n                    value={formData.plan || watchlist.plan}\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        plan: e.target.value,\r\n                      })\r\n                    }\r\n                    className=\"plan-textarea\"\r\n                    rows=\"3\"\r\n                  />\r\n                ) : (\r\n                  <span className=\"plan-value\">\r\n                    {splitText(watchlist.plan)}\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n            <hr className=\"small-hr\" />\r\n            <div className=\"form-group\">\r\n              <label style={{ float: \"left\" }}>\r\n                <strong>Target Hit:</strong>\r\n              </label>\r\n              <div className=\"toggle-container\" style={{ float: \"right\" }}>\r\n                <label className=\"toggle-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.target_hit}\r\n                    onChange={handleToggle}\r\n                  />\r\n                  <span className=\"slider\"></span>\r\n                </label>\r\n                {/* <span className=\"toggle-label\">\r\n                  {formData.target_hit ? \"Yes\" : \"No\"}\r\n                </span> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr className=\"modal-hr\" />\r\n        <div className=\"modal-footer\">\r\n          <div className=\"icon-container\">\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleDelete(watchlist.id);\r\n              }}\r\n              className=\"delete-icon\"\r\n            >\r\n              <i className=\"fa-solid fa-trash\"></i>\r\n            </span>\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleEdit();\r\n              }}\r\n              className=\"settings-icon\"\r\n            >\r\n              <i className=\"fa-solid fa-cog\"></i>\r\n            </span>\r\n          </div>\r\n          {showUpdateButton && (\r\n            <button onClick={handleSubmit} className=\"update-button\">\r\n              Update\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateWatchlist;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchWatchlists, updateWatchlist } from \"../api/WatchlistApi\";\r\nimport NewWatchlist from \"./NewWatchlist\";\r\nimport UpdateWatchlist from \"./UpdateWatchlist\";\r\nimport { formatDate } from \"../func/functions\";\r\n\r\nconst Watchlist = () => {\r\n  const [watchlists, setWatchlists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedWatchlist, setSelectedWatchlist] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getWatchlists = async () => {\r\n      try {\r\n        const data = await fetchWatchlists();\r\n        setWatchlists(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getWatchlists();\r\n  }, []);\r\n\r\n  const handleOpenModal = (watchlist = null) => {\r\n    setSelectedWatchlist(watchlist);\r\n    setIsEditing(!!watchlist);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedWatchlist(null);\r\n    setIsEditing(false);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleSaveChanges = async (updatedData) => {\r\n    if (isEditing) {\r\n      try {\r\n        await updateWatchlist(selectedWatchlist.id, updatedData);\r\n        setWatchlists((prevWatchlists) =>\r\n          prevWatchlists.map((wl) =>\r\n            wl.id === selectedWatchlist.id ? { ...wl, ...updatedData } : wl\r\n          )\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error updating watchlist:\", error);\r\n      }\r\n    } else {\r\n    }\r\n    handleCloseModal();\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading watchlists...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error fetching watchlists: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"watchlist-container\">\r\n      <div className=\"header-card\">\r\n        <p className=\"title\">Watchlists</p>\r\n        <div className=\"tooltip\">\r\n          <i\r\n            className=\"btn btn-primary fa-solid fa-plus\"\r\n            id=\"watchlist-new-btn\"\r\n            onClick={() => handleOpenModal()}\r\n          ></i>\r\n          <span className=\"tooltiptext\">New Item</span>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n      <div className=\"watch-container\">\r\n        {watchlists.map((watchlist) => (\r\n          <div\r\n            className=\"watch-item\"\r\n            key={watchlist.id}\r\n            style={{\r\n              borderLeft:\r\n                watchlist.target_price > watchlist.price\r\n                  ? \"2px solid #4a90e2\"\r\n                  : \"2px solid red\",\r\n            }}\r\n            onClick={() => handleOpenModal(watchlist)}\r\n          >\r\n            <span className=\"watch-item-symbol\">{watchlist.symbol}</span>\r\n            <span className=\"watch-item-price\">\r\n              ${watchlist.price.toFixed(2)}\r\n            </span>\r\n            <span className=\"watch-item-target-price\">\r\n              ${watchlist.target_price.toFixed(2)}\r\n            </span>\r\n            <span className=\"watch-item-exp-date\">\r\n              {formatDate(watchlist.exp_date)}\r\n            </span>\r\n            <span className=\"watch-item-target-hit\">\r\n              {watchlist.target_hit ? \"Yes\" : \"No\"}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {showModal && isEditing && selectedWatchlist && (\r\n        <UpdateWatchlist\r\n          watchlist={selectedWatchlist}\r\n          onClose={handleCloseModal}\r\n          onSave={handleSaveChanges}\r\n        />\r\n      )}\r\n\r\n      {showModal && !isEditing && (\r\n        <NewWatchlist onClose={handleCloseModal} onSave={handleSaveChanges} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watchlist;\r\n","const API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Fetch all misc entries for a specific user\r\nexport const fetchMiscEntries = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/misc?user_id=${userId}`);\r\n    if (!response.ok) throw new Error(\"Error fetching misc entries\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Misc Entries Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single misc entry by ID for a specific user\r\nexport const fetchMiscEntryById = async (miscId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/misc/${miscId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Misc entry not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Misc Entry Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new misc entry for a specific user\r\nexport const createMiscEntry = async (miscData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/misc?user_id=${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...miscData, user_id: userId }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || \"Error creating misc entry\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Create Misc Entry Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an existing misc entry for a specific user\r\nexport const updateMiscEntry = async (miscId, miscData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/misc/${miscId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(miscData),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) throw new Error(\"Error updating misc entry\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Misc Entry Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a misc entry for a specific user\r\nexport const deleteMiscEntry = async (miscId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/misc/${miscId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n\r\n    if (!response.ok) throw new Error(\"Error deleting misc entry\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Misc Entry Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createMiscEntry } from \"../api/MiscAPI\";\r\n\r\nconst NewMisc = ({ onClose }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    category: \"plan\",\r\n    entry_date: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(\"Submitting Data:\", formData);\r\n      const response = await createMiscEntry(formData);\r\n      console.log(\"Success:\", response);\r\n      onClose();\r\n      navigate(\"/trades\", { replace: true });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Error submitting misc entry\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"new-misc-container\">\r\n        <div className=\"header-card\">\r\n          <p className=\"title\">New Misc</p>\r\n          <p className=\"close-btn\" onClick={onClose}>\r\n            &times;\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n          <label>\r\n            <select\r\n              name=\"category\"\r\n              value={formData.category}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"plan\">Plan</option>\r\n              <option value=\"summary\">Summary</option>\r\n              <option value=\"metrics\">Metrics</option>\r\n            </select>\r\n          </label>\r\n\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Entry Date\"\r\n              name=\"entry_date\"\r\n              value={formData.entry_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMisc;\r\n","import React, { useState } from \"react\";\r\nimport { formatDate, splitText } from \"../func/functions\";\r\n\r\nconst UpdateMisc = ({ misc, onClose, onSave, handleDelete }) => {\r\n  const [formData, setFormData] = useState({\r\n    category: misc.category || \"\",\r\n    entry_date: misc.entry_date || \"\",\r\n    description: misc.description || \"\",\r\n  });\r\n  const [isEditable, setIsEditable] = useState(false);\r\n  const [showUpdateButton, setShowUpdateButton] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setShowUpdateButton(true);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSave(formData);\r\n    setShowUpdateButton(false);\r\n    setIsEditable(false);\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setIsEditable(true);\r\n    setShowUpdateButton(true);\r\n  };\r\n\r\n  const handleTextAreaResize = (e) => {\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = `${e.target.scrollHeight}px`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h2>\r\n            {misc.category.charAt(0).toUpperCase() + misc.category.slice(1)}\r\n          </h2>\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"misc-details\">\r\n            <div className=\"misc-header\">\r\n              <p className=\"no-id\">\r\n                N<sup>o</sup>: {`000${misc.id}`.slice(-5)}\r\n              </p>\r\n              <p className=\"entry-date\">{formatDate(misc.entry_date)}</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"misc-description\">\r\n              {isEditable ? (\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                  onInput={handleTextAreaResize}\r\n                  rows=\"15\"\r\n                  style={{ width: \"98%\", overflow: \"hidden\" }}\r\n                />\r\n              ) : (\r\n                splitText(misc.description)\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr className=\"modal-hr\" />\r\n        <div className=\"modal-footer\">\r\n          <div className=\"misc-item-footer\">\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleDelete(misc.id);\r\n              }}\r\n              className=\"delete-icon\"\r\n            >\r\n              <i className=\"fa-solid fa-trash\"></i>\r\n            </span>\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleEdit();\r\n              }}\r\n              className=\"settings-icon\"\r\n            >\r\n              <i className=\"fa-solid fa-cog\"></i>\r\n            </span>\r\n          </div>\r\n          {showUpdateButton && (\r\n            <button onClick={handleSubmit} className=\"update-button\">\r\n              Update\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMisc;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  fetchMiscEntries,\r\n  updateMiscEntry,\r\n  createMiscEntry,\r\n  deleteMiscEntry,\r\n} from \"../api/MiscAPI\";\r\nimport NewMisc from \"./NewMisc\";\r\nimport UpdateMisc from \"./UpdateMisc\";\r\nimport { formatDate, splitText } from \"../func/functions\";\r\n\r\nconst Misc = () => {\r\n  const [miscEntries, setMiscEntries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedMisc, setSelectedMisc] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"plan\");\r\n\r\n  useEffect(() => {\r\n    const getMiscEntries = async () => {\r\n      try {\r\n        const data = await fetchMiscEntries();\r\n        setMiscEntries(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getMiscEntries();\r\n  }, []);\r\n\r\n  // Filter entries based on active tab\r\n  const filteredEntries = miscEntries\r\n    .filter((entry) =>\r\n      activeTab === \"plan\"\r\n        ? entry.category.toLowerCase() === \"plan\"\r\n        : activeTab === \"summary\"\r\n        ? entry.category.toLowerCase() === \"summary\"\r\n        : entry.category.toLowerCase() === \"metrics\"\r\n    )\r\n    .sort((a, b) => b.id - a.id);\r\n\r\n  const handleOpenModal = (misc = null) => {\r\n    setSelectedMisc(misc);\r\n    setIsEditing(!!misc);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedMisc(null);\r\n    setIsEditing(false);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleSaveChanges = async (updatedData) => {\r\n    if (isEditing) {\r\n      try {\r\n        await updateMiscEntry(selectedMisc.id, updatedData);\r\n        setMiscEntries((prevEntries) =>\r\n          prevEntries.map((entry) =>\r\n            entry.id === selectedMisc.id ? { ...entry, ...updatedData } : entry\r\n          )\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error updating misc entry:\", error);\r\n      }\r\n    } else {\r\n      try {\r\n        const newEntry = await createMiscEntry(updatedData);\r\n        setMiscEntries((prevEntries) => [...prevEntries, newEntry]);\r\n      } catch (error) {\r\n        console.error(\"Error creating misc entry:\", error);\r\n      }\r\n    }\r\n    handleCloseModal();\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteMiscEntry(id);\r\n      setMiscEntries((prevEntries) =>\r\n        prevEntries.filter((entry) => entry.id !== id)\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error deleting misc entry:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading entries...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error fetching entries: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"misc-main-container\">\r\n      <div className=\"header-card\">\r\n        <div className=\"tab-container\">\r\n          <button\r\n            className={`tab-button ${activeTab === \"plan\" ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(\"plan\")}\r\n          >\r\n            Plan\r\n          </button>\r\n          <button\r\n            className={`tab-button ${activeTab === \"summary\" ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(\"summary\")}\r\n          >\r\n            Summary\r\n          </button>\r\n          <button\r\n            className={`tab-button ${activeTab === \"metrics\" ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(\"metrics\")}\r\n          >\r\n            Metrics\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tooltip\">\r\n          <i\r\n            className=\"btn btn-primary fa-solid fa-plus\"\r\n            id=\"misc-new-btn\"\r\n            onClick={() => handleOpenModal()}\r\n          ></i>\r\n          <span className=\"tooltiptext\">New Misc.</span>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n      <div className=\"misc-list-container\">\r\n        {filteredEntries.map((entry) => (\r\n          <div\r\n            className=\"misc-item\"\r\n            key={entry.id}\r\n            onClick={() => handleOpenModal(entry)}\r\n          >\r\n            <div className=\"misc-header\">\r\n              <p className=\"no-id\">\r\n                N<sup>o</sup>: {`000${entry.id}`.slice(-5)}\r\n              </p>\r\n              <p className=\"entry-date\">{formatDate(entry.entry_date)}</p>\r\n            </div>\r\n            <div className=\"misc-item-body\">\r\n              <span className=\"misc-item-description\">\r\n                {splitText(entry.description)}\r\n              </span>\r\n            </div>\r\n            <div className=\"misc-item-footer\">\r\n              <span\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  handleDelete(entry.id);\r\n                }}\r\n                className=\"delete-icon\"\r\n              >\r\n                <i className=\"fa-solid fa-trash\"></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {showModal && isEditing && selectedMisc && (\r\n        <UpdateMisc\r\n          misc={selectedMisc}\r\n          onClose={handleCloseModal}\r\n          onSave={handleSaveChanges}\r\n        />\r\n      )}\r\n\r\n      {showModal && !isEditing && (\r\n        <NewMisc onClose={handleCloseModal} onSave={handleSaveChanges} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Misc;\r\n","import React from \"react\";\r\nimport TradeTable from \"../controllers/trades/TradeTable\";\r\nimport Watchlist from \"../controllers/watchlist/Watchlist\";\r\nimport Misc from \"../controllers/misc/Misc\";\r\nimport EQTCurve from \"../controllers/trades/EQTcurve\";\r\n\r\nconst Trades = () => {\r\n  return (\r\n    <div className=\"trades\">\r\n      <div className=\"trades-horizontal\">\r\n        <div className=\"watchlist-trade\">\r\n          <Watchlist />\r\n        </div>\r\n        <div className=\"misc-trade\">\r\n          <Misc />\r\n        </div>\r\n      </div>\r\n      <div className=\"eqt-curve-trade\">\r\n        <EQTCurve />\r\n      </div>\r\n      <div className=\"trades-trade\">\r\n        <TradeTable />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trades;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\n\r\nconst TradeSum = () => {\r\n  const [trades, setTrades] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getTrades = async () => {\r\n      try {\r\n        const data = await fetchTrades();\r\n        setTrades(data);\r\n        console.log(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(\"Error fetching trades\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getTrades();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  // Helper function to format dates\r\n  const formatDate = (date) => {\r\n    const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\r\n    return date.toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  // Weekly date (start of the week)\r\n  const startOfWeek = new Date(today);\r\n  startOfWeek.setDate(today.getDate() - today.getDay());\r\n  const weeklyDate = formatDate(startOfWeek);\r\n\r\n  // Monthly date (current month/year)\r\n  const monthlyDate = `${today.getMonth() + 1}/${today.getFullYear()}`;\r\n\r\n  const filterTrades = (period) => {\r\n    if (period === \"weekly\") {\r\n      const endOfWeek = new Date(startOfWeek);\r\n      endOfWeek.setDate(startOfWeek.getDate() + 6);\r\n      return trades.filter((trade) => {\r\n        const tradeDate = new Date(trade.entry_date);\r\n        return tradeDate >= startOfWeek && tradeDate <= endOfWeek;\r\n      });\r\n    } else if (period === \"monthly\") {\r\n      const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\r\n      const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n      return trades.filter((trade) => {\r\n        const tradeDate = new Date(trade.entry_date);\r\n        return tradeDate >= startOfMonth && tradeDate <= endOfMonth;\r\n      });\r\n    }\r\n    return trades;\r\n  };\r\n\r\n  const renderTradeRows = (tradeList) =>\r\n    tradeList.map((trade) => (\r\n      <tr key={trade.id}>\r\n        <td>\r\n          {trade.symbol} ${trade.strike_price} {trade.option_type}\r\n          {trade.exp_date}\r\n        </td>\r\n        <td>\r\n          ${trade.entry_price} - ${trade.exit_price}\r\n        </td>\r\n        <td>{(trade.roi * 100).toFixed(2)}%</td>\r\n      </tr>\r\n    ));\r\n\r\n  return (\r\n    <div className=\"trade-summary-container\">\r\n      <div className=\"column weekly\">\r\n        <div className=\"header\">\r\n          <h3>Weekly</h3>\r\n          <span className=\"date\">{weeklyDate}</span>\r\n        </div>\r\n        <hr />\r\n        <table className=\"trade-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Pos.</th>\r\n              <th>Price</th>\r\n              <th>%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{renderTradeRows(filterTrades(\"weekly\"))}</tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"column monthly\">\r\n        <div className=\"header\">\r\n          <h3>Monthly</h3>\r\n          <span className=\"date\">{monthlyDate}</span>\r\n        </div>\r\n        <hr />\r\n        <table className=\"trade-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Pos.</th>\r\n              <th>Price</th>\r\n              <th>%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{renderTradeRows(filterTrades(\"monthly\"))}</tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"column all-trades\">\r\n        <h3>All Trades</h3>\r\n        <hr />\r\n        <table className=\"trade-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Pos.</th>\r\n              <th>Price</th>\r\n              <th>%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{renderTradeRows(trades)}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradeSum;\r\n","import React from \"react\";\r\nimport Bars from \"../controllers/pnl/Bars\";\r\nimport Calendar from \"../controllers/pnl/Calender\";\r\nimport TradeSum from \"../controllers/trades/TradeSum\";\r\nimport AnalysisDisplay from \"../controllers/analysis/AnalysisDisplay\";\r\nimport InvestmentChart from \"../controllers/pnl/InvestmentChart\";\r\nimport EQTCurve from \"../controllers/trades/EQTcurve\";\r\n\r\nconst Analysis = () => {\r\n  return (\r\n    <div className=\"Analysis\">\r\n      {/* <div className=\"eqt-curve\">\r\n        <EQTCurve />\r\n      </div> */}\r\n      <div className=\"two-horizontal-charts\">\r\n        <div className=\"investment-chart\">\r\n          <InvestmentChart />\r\n        </div>\r\n        <div className=\"eqt-curve\">\r\n          <EQTCurve />\r\n        </div>\r\n      </div>\r\n      {/* Calendar and Bars side by side */}\r\n      <div className=\"calendar-bars-container\">\r\n        <div className=\"bars-home\">\r\n          <Bars />\r\n        </div>\r\n        <div className=\"calendar-home\">\r\n          <Calendar />\r\n        </div>\r\n      </div>\r\n      <div className=\"analysis-analysis\">\r\n        <AnalysisDisplay />\r\n      </div>\r\n\r\n      <div className=\"trade-sum-analysis\">\r\n        <TradeSum />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analysis;\r\n\r\n// import React from \"react\";\r\n// import Bars from \"../controllers/pnl/Bars\";\r\n// import TradeSum from \"../controllers/trades/TradeSum\";\r\n// import AnalysisDisplay from \"../controllers/analysis/AnalysisDisplay\";\r\n// import InvestmentChart from \"../controllers/pnl/InvestmentChart\";\r\n// import EQTCurve from \"../controllers/trades/EQTcurve\";\r\n\r\n// const Analysis = () => {\r\n//   return (\r\n//     <div className=\"Analysis\">\r\n//       <div className=\"two-horizontal-analysis\">\r\n//         <div className=\"bars-analysis\">\r\n//           <Bars />\r\n//         </div>\r\n//         <div className=\"analysis-analysis\">\r\n//           <AnalysisDisplay />\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"two-horizontal-analysis\">\r\n//         <div className=\"\">\r\n//           <InvestmentChart />\r\n//         </div>\r\n//         <div className=\"\">\r\n//           <EQTCurve />\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"trade-sum-analysis\">\r\n//         <TradeSum />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Analysis;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FaMoneyBillWave,\r\n  FaChartLine,\r\n  FaCashRegister,\r\n  FaPercentage,\r\n  FaChartPie,\r\n} from \"react-icons/fa\";\r\nimport { getCash } from \"../api/CashApi\";\r\nimport { fetchDailyPnls } from \"../api/DailyPNLApi\";\r\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\r\nimport {\r\n  calculateInitialCash,\r\n  calculateAvailableCash,\r\n  calculateNetPL,\r\n  calculateCashBalance,\r\n  calculateTotalDeposits,\r\n  calculateTotalWithdrawals,\r\n  calculateROI,\r\n} from \"./CashCalc\";\r\nimport { formatCash } from \"../func/functions\";\r\n\r\nconst Cash = () => {\r\n  const [cashData, setCashData] = useState(null);\r\n  const [dailyPnls, setDailyPnls] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true); // eslint-disable-next-line\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [cashResponse, pnlResponse, transactionsResponse] =\r\n          await Promise.all([getCash(), fetchDailyPnls(), fetchTransactions()]);\r\n\r\n        setCashData(cashResponse);\r\n        setDailyPnls(pnlResponse);\r\n        setTransactions(transactionsResponse);\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(\"Error fetching cash data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  const initialCash = cashData ? calculateInitialCash(cashData) : 0;\r\n  const netPL = dailyPnls.length > 0 ? calculateNetPL(dailyPnls) : 0;\r\n\r\n  const totalDeposits =\r\n    transactions.length > 0 ? calculateTotalDeposits(transactions) : 0;\r\n  const totalWithdrawals =\r\n    transactions.length > 0 ? calculateTotalWithdrawals(transactions) : 0;\r\n  const cash = formatCash(initialCash + totalDeposits - totalWithdrawals);\r\n\r\n  const cashBalance =\r\n    transactions.length > 0 || netPL !== 0\r\n      ? formatCash(calculateCashBalance(initialCash, netPL, transactions))\r\n      : formatCash(initialCash);\r\n\r\n  const roi =\r\n    initialCash !== 0 && netPL !== 0\r\n      ? `${calculateROI(initialCash, netPL).toFixed(2)}%`\r\n      : \"0%\";\r\n\r\n  return (\r\n    <div className=\"cash-container\">\r\n      <div className=\"cash-card-container\">\r\n        {/* Capital Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaCashRegister className=\"card-icon\" />\r\n              <span className=\"label\">Capital:</span>\r\n            </div>\r\n            <span className=\"value\">{formatCash(initialCash)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Cash Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaChartPie className=\"card-icon\" />\r\n              <span className=\"label\">Cash:</span>\r\n            </div>\r\n            <span className=\"value\">{cash}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Net P/L Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaChartLine className=\"card-icon\" />\r\n              <span className=\"label\">P/L:</span>\r\n            </div>\r\n            <span className=\"value\">{formatCash(netPL)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Equity Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaMoneyBillWave className=\"card-icon\" />\r\n              <span className=\"label\">Equity:</span>\r\n            </div>\r\n            <span className=\"value\">{cashBalance}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* RoI Card */}\r\n        <div className=\"cash-card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"icon-label\">\r\n              <FaPercentage className=\"card-icon\" />\r\n              <span className=\"label\">RoI:</span>\r\n            </div>\r\n            <span className=\"value\">{roi}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // return (\r\n  //   <div className=\"cash-container\">\r\n  //     <div className=\"cash-card-container\">\r\n  //       {/* Capital Card */}\r\n  //       <div className=\"cash-card\">\r\n  //         <div className=\"card-content\">\r\n  //           <div className=\"icon-label\">\r\n  //             <FaCashRegister className=\"card-icon\" />\r\n  //             <span className=\"label\">Capital:</span>\r\n  //           </div>\r\n  //           <span className=\"value\">{formatCash(initialCash)}</span>\r\n  //         </div>\r\n  //       </div>\r\n\r\n  //       {/* Cash Card */}\r\n  //       <div className=\"cash-card\">\r\n  //         <div className=\"card-content\">\r\n  //           <FaChartPie className=\"card-icon\" />\r\n\r\n  //           <span className=\"label\">Cash:</span>\r\n  //           <span className=\"value\">{cash}</span>\r\n  //         </div>\r\n  //       </div>\r\n\r\n  //       {/* Net P/L Card */}\r\n  //       <div className=\"cash-card\">\r\n  //         <div className=\"card-content\">\r\n  //           <FaChartLine className=\"card-icon\" />\r\n  //           <span className=\"label\">P/L:</span>\r\n  //           <span className=\"value\">{formatCash(netPL)}</span>\r\n  //         </div>\r\n  //       </div>\r\n\r\n  //       {/* Cash Balance Card */}\r\n  //       <div className=\"cash-card\">\r\n  //         <div className=\"card-content\">\r\n  //           <FaMoneyBillWave className=\"card-icon\" />\r\n  //           <span className=\"label\">Equity:</span>\r\n  //           <span className=\"value\">{cashBalance}</span>\r\n  //         </div>\r\n  //       </div>\r\n\r\n  //       {/* RoI Card */}\r\n  //       <div className=\"cash-card\">\r\n  //         <div className=\"card-content\">\r\n  //           <FaPercentage className=\"card-icon\" />\r\n  //           <span className=\"label\">RoI:</span>\r\n  //           <span className=\"value\">{roi}</span>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default Cash;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createCash } from \"../api/CashApi\";\r\n\r\nconst NewCash = ({ onClose, onNewCash }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    entry_date: \"\",\r\n    initial_cash: 0,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newCash = await createCash({\r\n        initial_cash: parseFloat(formData.initial_cash),\r\n        entry_date: formData.entry_date,\r\n      });\r\n      onNewCash(newCash);\r\n      onClose();\r\n      navigate(\"/accounts\", { replace: true });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error submitting cash entry:\", error);\r\n      alert(\"Error submitting cash entry\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"new-cash-container\">\r\n        <div className=\"header-card\">\r\n          <p className=\"title\">Add Cash</p>\r\n          <p className=\"close-btn\" onClick={onClose}>\r\n            &times;\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Initial Cash\"\r\n              name=\"initial_cash\"\r\n              value={formData.initial_cash}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Entry Date\"\r\n              name=\"entry_date\"\r\n              value={formData.entry_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCash;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createTransaction } from \"../api/TransactionsAPI\";\r\n\r\nconst NewTransaction = ({ onClose }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    transaction_date: \"\",\r\n    transaction_type: \"deposit\",\r\n    amount: \"\",\r\n    transaction_summary: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await createTransaction({\r\n        ...formData,\r\n        amount: parseFloat(formData.amount),\r\n      });\r\n\r\n      console.log(\"Success:\", response);\r\n      onClose();\r\n      navigate(\"/accounts\", { replace: true });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Error submitting transaction\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"new-transaction-container\">\r\n        <div className=\"header-card\">\r\n          <p className=\"title\">New Transaction</p>\r\n          <p className=\"close-btn\" onClick={onClose}>\r\n            &times;\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Transaction Date\"\r\n              name=\"transaction_date\"\r\n              value={formData.transaction_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <select\r\n              name=\"transaction_type\"\r\n              value={formData.transaction_type}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"deposit\">Deposit</option>\r\n              <option value=\"withdrawal\">Withdrawal</option>\r\n              <option value=\"trade\">Trade</option>\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Amount\"\r\n              name=\"amount\"\r\n              value={formData.amount}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Summary\"\r\n              name=\"transaction_summary\"\r\n              value={formData.transaction_summary}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTransaction;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchTransactions } from \"../api/TransactionsAPI\";\r\nimport { fetchTrades } from \"../api/TradesAPI\";\r\nimport { getCash } from \"../api/CashApi\";\r\nimport { formatDate, formatCash } from \"../func/functions\";\r\nimport NewTransaction from \"./NewTransaction\";\r\n\r\nconst TransactionTable = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Fetch transactions, trades, and initial cash on component mount\r\n  useEffect(() => {\r\n    const getTransactionsTradesAndCash = async () => {\r\n      try {\r\n        const transactionsData = await fetchTransactions();\r\n        const tradesData = await fetchTrades();\r\n        const cashData = await getCash();\r\n\r\n        console.log(\"Fetched trades:\", tradesData);\r\n        console.log(\"Fetched cash:\", cashData);\r\n\r\n        // Format initial cash as a transaction entry without multiplying by 100\r\n        const initialCashEntry = {\r\n          id: `cash-${cashData.id}`,\r\n          transaction_date: cashData.entry_date,\r\n          transaction_type: \"Initial Cash\",\r\n          amount: parseFloat(cashData.initial_cash),\r\n          transaction_summary: `Initial cash of ${formatCash(\r\n            parseFloat(cashData.initial_cash)\r\n          )}`,\r\n          isInitialCash: true, // Add a flag to identify initial cash entry\r\n        };\r\n\r\n        // Format trades to match transaction format\r\n        const formattedTrades = tradesData.map((trade) => {\r\n          const profitLossAmount = parseFloat(trade.profit_loss || 0) * 100;\r\n          const profitOrLoss = profitLossAmount >= 0 ? \"profit\" : \"loss\";\r\n\r\n          return {\r\n            id: trade.id,\r\n            transaction_date: trade.close_date,\r\n            transaction_type: \"Trade\",\r\n            amount: profitLossAmount,\r\n            transaction_summary: `${trade.symbol} trade with ${formatCash(\r\n              Math.abs(profitLossAmount)\r\n            )} ${profitOrLoss}`,\r\n            isInitialCash: false, // Not initial cash\r\n          };\r\n        });\r\n\r\n        // Combine all entries and sort them\r\n        const allData = [\r\n          ...transactionsData,\r\n          ...formattedTrades,\r\n          initialCashEntry,\r\n        ].sort((a, b) => {\r\n          const dateComparison =\r\n            new Date(b.transaction_date) - new Date(a.transaction_date);\r\n          if (dateComparison !== 0) return dateComparison;\r\n\r\n          // Ensure initial cash is last if on the same date as other transactions\r\n          return a.isInitialCash ? 1 : -1;\r\n        });\r\n\r\n        setTransactions(allData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getTransactionsTradesAndCash();\r\n  }, []);\r\n\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error fetching transactions: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"transaction-table-container\">\r\n      <div className=\"header-card\">\r\n        <p className=\"title\">Transactions</p>\r\n\r\n        <div class=\"tooltip\">\r\n          <i\r\n            className=\"btn btn-primary fa-solid fa-plus\"\r\n            id=\"transaction-new-btn\"\r\n            onClick={handleOpenModal}\r\n          ></i>\r\n          <span class=\"tooltiptext\">New Txn.</span>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <table className=\"transaction-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map((transaction) => (\r\n            <tr key={transaction.id}>\r\n              <td>{formatDate(transaction.transaction_date)}</td>\r\n              <td>{transaction.transaction_type}</td>\r\n              <td>{formatCash(transaction.amount)}</td>\r\n              <td>{transaction.transaction_summary}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {showModal && <NewTransaction onClose={handleCloseModal} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionTable;\r\n","const API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Fetch all rules for a specific user\r\nexport const fetchRules = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/rules?user_id=${userId}`);\r\n    if (!response.ok) throw new Error(\"Error fetching rules\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Rules Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new rule for a specific user\r\nexport const createRule = async (ruleData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/rules?user_id=${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...ruleData, user_id: userId }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || \"Error creating rule\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Create Rule Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an existing rule for a specific user\r\nexport const updateRule = async (ruleId, ruleData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(ruleData),\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error updating rule\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Rule Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a rule for a specific user\r\nexport const deleteRule = async (ruleId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error deleting rule\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Rule Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single rule by ID for a specific user\r\nexport const fetchRuleById = async (ruleId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/rules/${ruleId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Rule not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Rule Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createRule } from \"../api/RulesAPI\";\r\n\r\nconst NewRule = ({ onClose }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    entry_date: \"\",\r\n    rule: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await createRule(formData);\r\n      console.log(\"Rule created successfully:\", response);\r\n      onClose();\r\n      navigate(\"/accounts\", { replace: true });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error creating rule:\", error);\r\n      alert(\"Error submitting rule\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"new-rule-container\">\r\n        <div className=\"header-card\">\r\n          <p className=\"title\">New Rule</p>\r\n          <p className=\"close-btn\" onClick={onClose}>\r\n            &times;\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Entry Date\"\r\n              name=\"entry_date\"\r\n              value={formData.entry_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <textarea\r\n              placeholder=\"Rule Description\"\r\n              name=\"rule\"\r\n              value={formData.rule}\r\n              onChange={handleChange}\r\n              required\r\n              rows=\"4\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add Rule</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewRule;\r\n","import React, { useState } from \"react\";\r\nimport { formatDate, splitText } from \"../func/functions\";\r\n\r\nconst UpdateRule = ({ rule, onClose, onSave, handleDelete }) => {\r\n  const [formData, setFormData] = useState({\r\n    entry_date: rule.entry_date,\r\n    rule: rule.rule,\r\n  });\r\n\r\n  const [showUpdateButton, setShowUpdateButton] = useState(false);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    setShowUpdateButton(true);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSave(formData);\r\n    setShowUpdateButton(false);\r\n    setIsEditable(false);\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setIsEditable(true);\r\n    setShowUpdateButton(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <p className=\"no-id\">\r\n            N<sup>o</sup>: {`000${rule.id}`.slice(-5)}\r\n          </p>{\" \"}\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"rule-details\">\r\n            <hr />\r\n            <div className=\"rule-info\">\r\n              <label>\r\n                {isEditable ? (\r\n                  <textarea\r\n                    name=\"rule\"\r\n                    value={formData.rule}\r\n                    onChange={handleChange}\r\n                    className=\"rule-textarea\"\r\n                    rows=\"10\"\r\n                    placeholder=\"Edit your rule here\"\r\n                  />\r\n                ) : (\r\n                  <span className=\"rule-value\">{splitText(rule.rule)}</span>\r\n                )}\r\n              </label>\r\n            </div>\r\n            <hr className=\"small-hr\" />\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {isEditable ? (\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"entry_date\"\r\n                    value={formData.entry_date}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                ) : (\r\n                  <span>{formatDate(formData.entry_date)}</span>\r\n                )}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr className=\"modal-hr\" />\r\n        <div className=\"modal-footer\">\r\n          <div className=\"icon-container\">\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleDelete(rule.id);\r\n              }}\r\n              className=\"delete-icon\"\r\n            >\r\n              <i className=\"fa-solid fa-trash\"></i>\r\n            </span>\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleEdit();\r\n              }}\r\n              className=\"settings-icon\"\r\n            >\r\n              <i className=\"fa-solid fa-cog\"></i>\r\n            </span>\r\n          </div>\r\n          {showUpdateButton && (\r\n            <button onClick={handleSubmit} className=\"update-button\">\r\n              Update\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateRule;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchRules, updateRule, createRule } from \"../api/RulesAPI\";\r\nimport NewRule from \"./NewRule\";\r\nimport UpdateRule from \"./UpdateRule\";\r\nimport { formatDate } from \"../func/functions\";\r\n\r\nconst Rules = () => {\r\n  const [rules, setRules] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRule, setSelectedRule] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // Fetch the list of rules initially\r\n  useEffect(() => {\r\n    const getRules = async () => {\r\n      try {\r\n        const data = await fetchRules();\r\n        setRules(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getRules();\r\n  }, []);\r\n\r\n  // Open modal for new rule or editing an existing rule\r\n  const handleOpenModal = (rule = null) => {\r\n    setSelectedRule(rule);\r\n    setIsEditing(!!rule);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Close the modal and reset selected rule\r\n  const handleCloseModal = () => {\r\n    setSelectedRule(null);\r\n    setIsEditing(false);\r\n    setShowModal(false);\r\n  };\r\n\r\n  // Handle saving changes (either add or update a rule)\r\n  const handleSaveChanges = async (ruleData) => {\r\n    try {\r\n      if (isEditing) {\r\n        // Update an existing rule\r\n        await updateRule(selectedRule.id, ruleData);\r\n      } else {\r\n        // Create a new rule\r\n        await createRule(ruleData);\r\n      }\r\n\r\n      // Refetch the rules from server to get the latest state\r\n      const refreshedRules = await fetchRules();\r\n      setRules(refreshedRules);\r\n    } catch (error) {\r\n      console.error(\"Error saving rule:\", error);\r\n    } finally {\r\n      handleCloseModal();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading rules...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error fetching rules: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rules-container\">\r\n      <div className=\"header-card\">\r\n        <p className=\"title\">Rules</p>\r\n        <div className=\"tooltip\">\r\n          <i\r\n            className=\"btn btn-primary fa-solid fa-plus\"\r\n            id=\"rule-new-btn\"\r\n            onClick={() => handleOpenModal()}\r\n          ></i>\r\n          <span className=\"tooltiptext\">New Rule</span>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n      <div className=\"rules-list\">\r\n        {rules.map((rule, index) => {\r\n          const ruleText = rule.rule.split(\"|\")[0].trim();\r\n\r\n          return (\r\n            <div\r\n              className=\"rule-item\"\r\n              key={rule.id}\r\n              onClick={() => handleOpenModal(rule)}\r\n            >\r\n              <span className=\"rule-item-date\">{index + 1}</span>\r\n              <span className=\"rule-item-text\">{ruleText}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {showModal && isEditing && selectedRule && (\r\n        <UpdateRule\r\n          rule={selectedRule}\r\n          onClose={handleCloseModal}\r\n          onSave={handleSaveChanges}\r\n        />\r\n      )}\r\n\r\n      {showModal && !isEditing && (\r\n        <NewRule onClose={handleCloseModal} onSave={handleSaveChanges} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rules;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { fetchRules, updateRule, createRule } from \"../api/RulesAPI\";\r\n// import NewRule from \"./NewRule\";\r\n// import UpdateRule from \"./UpdateRule\";\r\n// import { formatDate } from \"../func/functions\";\r\n\r\n// const Rules = () => {\r\n//   const [rules, setRules] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [selectedRule, setSelectedRule] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const getRules = async () => {\r\n//       try {\r\n//         const data = await fetchRules();\r\n//         setRules(data);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         setError(error.message);\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     getRules();\r\n//   }, []);\r\n\r\n//   const handleOpenModal = (rule = null) => {\r\n//     setSelectedRule(rule);\r\n//     setIsEditing(!!rule);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setSelectedRule(null);\r\n//     setIsEditing(false);\r\n//     setShowModal(false);\r\n//   };\r\n\r\n//   const handleSaveChanges = async (ruleData) => {\r\n//     try {\r\n//       if (isEditing) {\r\n//         await updateRule(selectedRule.id, ruleData);\r\n//       } else {\r\n//         await createRule(ruleData);\r\n//       }\r\n\r\n//       const refreshedRules = await fetchRules();\r\n//       setRules(refreshedRules);\r\n//     } catch (error) {\r\n//       console.error(\"Error saving rule:\", error);\r\n//     } finally {\r\n//       handleCloseModal();\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading rules...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error fetching rules: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"rules-container\">\r\n//       <div className=\"header-card\">\r\n//         <p className=\"title\">Rules</p>\r\n//         <div className=\"tooltip\">\r\n//           <i\r\n//             className=\"btn btn-primary fa-solid fa-plus\"\r\n//             id=\"rule-new-btn\"\r\n//             onClick={() => handleOpenModal()}\r\n//           ></i>\r\n//           <span className=\"tooltiptext\">New Rule</span>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <hr />\r\n//       <div className=\"rules-list\">\r\n//         {rules.map((rule) => (\r\n//           <div\r\n//             className=\"rule-item\"\r\n//             key={rule.id}\r\n//             onClick={() => handleOpenModal(rule)}\r\n//           >\r\n//             <span className=\"rule-item-date\">\r\n//               {formatDate(rule.entry_date)}\r\n//             </span>\r\n//             <span className=\"rule-item-text\">{rule.rule}</span>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {showModal && isEditing && selectedRule && (\r\n//         <UpdateRule\r\n//           rule={selectedRule}\r\n//           onClose={handleCloseModal}\r\n//           onSave={handleSaveChanges}\r\n//         />\r\n//       )}\r\n\r\n//       {showModal && !isEditing && (\r\n//         <NewRule onClose={handleCloseModal} onSave={handleSaveChanges} />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Rules;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Cash from \"../controllers/cash/Cash\";\r\nimport NewCash from \"../controllers/cash/NewCash\";\r\nimport AnalysisDisplay from \"../controllers/analysis/AnalysisDisplay\";\r\nimport TransactionTable from \"../controllers/transactions/TransactionTable\";\r\nimport InvestmentChart from \"../controllers/pnl/InvestmentChart\";\r\nimport EQTCurve from \"../controllers/trades/EQTcurve\";\r\nimport Rules from \"../controllers/rules/Rules\";\r\n\r\nconst Accounts = ({ onClose }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Load user data from localStorage\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem(\"user_data\");\r\n    if (storedUserData) {\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setUserData(parsedUserData);\r\n    }\r\n  }, []);\r\n\r\n  // Modal handlers\r\n  const handleOpenModal = () => setShowModal(true);\r\n  const handleCloseModal = () => setShowModal(false);\r\n\r\n  const handleNewCash = (newCash) => {\r\n    console.log(\"New cash entry:\", newCash);\r\n  };\r\n\r\n  return (\r\n    <div className=\"accounts\">\r\n      {/* Header Section */}\r\n      <div className=\"accounts-dash\">\r\n        <div className=\"header-card\">\r\n          {userData && (\r\n            <p className=\"title\">\r\n              {/* Welcome, {userData.fname || userData.username}! */}\r\n            </p>\r\n          )}\r\n          <div className=\"tooltip\">\r\n            <i\r\n              className=\"btn btn-primary fa-solid fa-plus\"\r\n              id=\"new-cash-btn\"\r\n              onClick={handleOpenModal}\r\n            ></i>\r\n            <span className=\"tooltiptext\">Add Cash</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cash-accounts\">\r\n        <Cash />\r\n      </div>\r\n      <div className=\"investment-chart\">\r\n        <InvestmentChart />\r\n      </div>\r\n      <div className=\"analysis-analysis-account\">\r\n        <AnalysisDisplay />\r\n      </div>\r\n      <div className=\"account-horizontal\">\r\n        <div className=\"transactions-accounts\">\r\n          <TransactionTable />\r\n        </div>\r\n        <div className=\"rules-accounts\">\r\n          <Rules />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"eqt-curve\">\r\n        <EQTCurve />\r\n      </div>\r\n\r\n      {showModal && (\r\n        <NewCash onClose={handleCloseModal} onNewCash={handleNewCash} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import Cash from \"../controllers/cash/Cash\";\r\n// import NewCash from \"../controllers/cash/NewCash\";\r\n// import TransactionTable from \"../controllers/transactions/TransactionTable\";\r\n// import InvestmentChart from \"../controllers/pnl/InvestmentChart\";\r\n\r\n// const Accounts = ({ onClose }) => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const storedUserData = localStorage.getItem(\"user_data\");\r\n//     if (storedUserData) {\r\n//       const parsedUserData = JSON.parse(storedUserData);\r\n//       setUserData(parsedUserData);\r\n//     }\r\n//   }, []);\r\n\r\n//   const handleOpenModal = () => {\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setShowModal(false);\r\n//   };\r\n\r\n//   const handleNewCash = (newCash) => {\r\n//     console.log(\"New cash entry:\", newCash);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"accounts\">\r\n//       <div className=\"accounts-dash\">\r\n//         <div className=\"header-card\">\r\n//           {userData && (\r\n//             <p className=\"title\">\r\n//               {/* Welcome {userData.fname || userData.username} */}\r\n//             </p>\r\n//           )}\r\n//           <div class=\"tooltip\">\r\n//             <i\r\n//               className=\"btn btn-primary fa-solid fa-plus\"\r\n//               id=\"new-cash-btn\"\r\n//               onClick={handleOpenModal}\r\n//             ></i>\r\n//             <span class=\"tooltiptext\">Add Cash</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"cash-accounts\">\r\n//         <Cash />\r\n//       </div>\r\n//       <div className=\"dashboard-container-home\">\r\n//         <div className=\"profit-chart-trade\">\r\n//           <InvestmentChart />\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* <div className=\"cash-accounts\">\r\n//         <Cash />\r\n//       </div> */}\r\n//       {showModal && (\r\n//         <NewCash onClose={handleCloseModal} onNewCash={handleNewCash} />\r\n//       )}\r\n//       <div className=\"transactions-accounts\">\r\n//         <TransactionTable />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Accounts;\r\n","// trading-app/trading-frontend/src/components/controllers/api/UserAPI.js\r\n\r\nconst API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Register Users\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/users/`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    if (!response.ok) {\r\n      const errorDetails = await response.json();\r\n      throw new Error(\r\n        `Error registering user: ${errorDetails.detail || response.statusText}`\r\n      );\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Register User Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Login Users\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    console.log(\"Fetching login with credentials:\", credentials.toString());\r\n\r\n    const response = await fetch(`${API_BASE_URL}/auth/token`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: credentials,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || \"Error logging in\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Login Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUsers = async (skip = 0, limit = 100) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/users/?skip=${skip}&limit=${limit}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Error fetching users\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Users Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUser = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users/${userId}`);\r\n    if (!response.ok) throw new Error(\"User not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch User Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateUser = async (userId, userData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    if (!response.ok) throw new Error(\"Error updating user\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update User Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteUser = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (!response.ok) throw new Error(\"Error deleting user\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete User Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default {\r\n  fetchUsers,\r\n  fetchUser,\r\n  updateUser,\r\n  deleteUser,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../api/UserAPI\";\r\nimport { decodeJWT } from \"../func/functions\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const credentials = new URLSearchParams();\r\n      credentials.append(\"username\", username);\r\n      credentials.append(\"password\", password);\r\n\r\n      const response = await loginUser(credentials);\r\n      const decodedToken = decodeJWT(response.access_token);\r\n\r\n      const userId = decodedToken.sub || decodedToken.user_id;\r\n      console.log(\"User ID:\", userId);\r\n      console.log(decodedToken);\r\n\r\n      localStorage.setItem(\"access_token\", response.access_token);\r\n      localStorage.setItem(\"user_data\", JSON.stringify(decodedToken));\r\n\r\n      setError(\"\");\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      window.location.href = \"/\";\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin} className=\"auth-form\">\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n        {loading ? \"Logging in...\" : \"Login\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser, loginUser } from \"../api/UserAPI\"; // import loginUser\r\nimport { decodeJWT } from \"../func/functions\"; // import decodeJWT if used\r\n\r\nconst Register = ({ onRegisterSuccess }) => {\r\n  const [formData, setFormData] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phoneNumber: \"\",\r\n    accountType: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const {\r\n        fname,\r\n        lname,\r\n        username,\r\n        email,\r\n        password,\r\n        phoneNumber,\r\n        accountType,\r\n      } = formData;\r\n      await registerUser({\r\n        fname,\r\n        lname,\r\n        username,\r\n        email,\r\n        password,\r\n        phone_number: phoneNumber,\r\n        account_type: accountType,\r\n      });\r\n\r\n      const credentials = new URLSearchParams();\r\n      credentials.append(\"username\", username);\r\n      credentials.append(\"password\", password);\r\n      const loginResponse = await loginUser(credentials);\r\n\r\n      const decodedToken = decodeJWT(loginResponse.access_token);\r\n      localStorage.setItem(\"access_token\", loginResponse.access_token);\r\n      localStorage.setItem(\"user_data\", JSON.stringify(decodedToken));\r\n\r\n      if (onRegisterSuccess) onRegisterSuccess();\r\n      window.location.href = \"/\";\r\n    } catch (err) {\r\n      setError(err.message || \"Error registering user\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister} className=\"auth-form\">\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {/* Form Fields */}\r\n      <input\r\n        type=\"text\"\r\n        name=\"fname\"\r\n        placeholder=\"First Name\"\r\n        value={formData.fname}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"lname\"\r\n        placeholder=\"Last Name\"\r\n        value={formData.lname}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        placeholder=\"Username\"\r\n        value={formData.username}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        value={formData.password}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"phoneNumber\"\r\n        placeholder=\"Phone Number\"\r\n        value={formData.phoneNumber}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <select\r\n        name=\"accountType\"\r\n        value={formData.accountType}\r\n        onChange={handleInputChange}\r\n        required\r\n      >\r\n        <option value=\"\" disabled>\r\n          Account Type\r\n        </option>\r\n        <option value=\"personal\">Personal</option>\r\n        <option value=\"business\">Business</option>\r\n      </select>\r\n      <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n        {loading ? \"Registering...\" : \"Register\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { registerUser } from \"../api/UserAPI\";\r\n\r\n// const Register = ({ onRegisterSuccess }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     fname: \"\",\r\n//     lname: \"\",\r\n//     username: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     phoneNumber: \"\",\r\n//     accountType: \"\",\r\n//   });\r\n//   const [error, setError] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate(); // For navigation\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(\"\");\r\n\r\n//     const {\r\n//       fname,\r\n//       lname,\r\n//       username,\r\n//       email,\r\n//       password,\r\n//       phoneNumber,\r\n//       accountType,\r\n//     } = formData;\r\n\r\n//     if (\r\n//       !fname ||\r\n//       !lname ||\r\n//       !username ||\r\n//       !email ||\r\n//       !password ||\r\n//       !phoneNumber ||\r\n//       !accountType\r\n//     ) {\r\n//       setError(\"All fields are required.\");\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await registerUser({\r\n//         fname,\r\n//         lname,\r\n//         username,\r\n//         email,\r\n//         password,\r\n//         phone_number: phoneNumber,\r\n//         account_type: accountType,\r\n//       });\r\n\r\n//       // Navigate to home upon successful registration\r\n//       navigate(\"/\", { replace: true });\r\n\r\n//       if (onRegisterSuccess) onRegisterSuccess();\r\n//     } catch (err) {\r\n//       setError(err.message || \"Error registering user\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleRegister} className=\"auth-form\">\r\n//       {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"fname\"\r\n//         placeholder=\"First Name\"\r\n//         value={formData.fname}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"lname\"\r\n//         placeholder=\"Last Name\"\r\n//         value={formData.lname}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"username\"\r\n//         placeholder=\"Username\"\r\n//         value={formData.username}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"email\"\r\n//         name=\"email\"\r\n//         placeholder=\"Email\"\r\n//         value={formData.email}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"password\"\r\n//         name=\"password\"\r\n//         placeholder=\"Password\"\r\n//         value={formData.password}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"phoneNumber\"\r\n//         placeholder=\"Phone Number\"\r\n//         value={formData.phoneNumber}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       />\r\n//       <select\r\n//         name=\"accountType\"\r\n//         value={formData.accountType}\r\n//         onChange={handleInputChange}\r\n//         required\r\n//       >\r\n//         <option value=\"\" disabled>\r\n//           Select Account Type\r\n//         </option>\r\n//         <option value=\"personal\">Personal</option>\r\n//         <option value=\"business\">Business</option>\r\n//       </select>\r\n\r\n//       <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n//         {loading ? \"Registering...\" : \"Register\"}\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n// // import React, { useState } from \"react\";\r\n// // import { registerUser } from \"../api/UserAPI\";\r\n\r\n// // const Register = ({ onRegisterSuccess }) => {\r\n// //   const [formData, setFormData] = useState({\r\n// //     fname: \"\",\r\n// //     lname: \"\",\r\n// //     username: \"\",\r\n// //     email: \"\",\r\n// //     password: \"\",\r\n// //     phoneNumber: \"\",\r\n// //     accountType: \"\",\r\n// //   });\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const [loading, setLoading] = useState(false);\r\n\r\n// //   const handleInputChange = (e) => {\r\n// //     const { name, value } = e.target;\r\n// //     setFormData((prev) => ({ ...prev, [name]: value }));\r\n// //   };\r\n\r\n// //   const handleRegister = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setLoading(true);\r\n// //     setError(\"\");\r\n\r\n// //     const {\r\n// //       fname,\r\n// //       lname,\r\n// //       username,\r\n// //       email,\r\n// //       password,\r\n// //       phoneNumber,\r\n// //       accountType,\r\n// //     } = formData;\r\n\r\n// //     if (\r\n// //       !fname ||\r\n// //       !lname ||\r\n// //       !username ||\r\n// //       !email ||\r\n// //       !password ||\r\n// //       !phoneNumber ||\r\n// //       !accountType\r\n// //     ) {\r\n// //       setError(\"All fields are required.\");\r\n// //       setLoading(false);\r\n// //       return;\r\n// //     }\r\n\r\n// //     try {\r\n// //       await registerUser({\r\n// //         fname,\r\n// //         lname,\r\n// //         username,\r\n// //         email,\r\n// //         password,\r\n// //         phone_number: phoneNumber,\r\n// //         account_type: accountType,\r\n// //       });\r\n// //       if (onRegisterSuccess) onRegisterSuccess();\r\n// //     } catch (err) {\r\n// //       setError(err.message || \"Error registering user\");\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <form onSubmit={handleRegister} className=\"auth-form\">\r\n// //       {error && <p className=\"error-message\">{error}</p>}\r\n\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         name=\"fname\"\r\n// //         placeholder=\"First Name\"\r\n// //         value={formData.fname}\r\n// //         onChange={handleInputChange}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         name=\"lname\"\r\n// //         placeholder=\"Last Name\"\r\n// //         value={formData.lname}\r\n// //         onChange={handleInputChange}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         name=\"username\"\r\n// //         placeholder=\"Username\"\r\n// //         value={formData.username}\r\n// //         onChange={handleInputChange}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"email\"\r\n// //         name=\"email\"\r\n// //         placeholder=\"Email\"\r\n// //         value={formData.email}\r\n// //         onChange={handleInputChange}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"password\"\r\n// //         name=\"password\"\r\n// //         placeholder=\"Password\"\r\n// //         value={formData.password}\r\n// //         onChange={handleInputChange}\r\n// //         required\r\n// //       />\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         name=\"phoneNumber\"\r\n// //         placeholder=\"Phone Number\"\r\n// //         value={formData.phoneNumber}\r\n// //         onChange={handleInputChange}\r\n// //         required\r\n// //       />\r\n// //       <select\r\n// //         name=\"accountType\"\r\n// //         value={formData.accountType}\r\n// //         onChange={handleInputChange}\r\n// //         required\r\n// //       >\r\n// //         <option value=\"\" disabled>\r\n// //           Select Account Type\r\n// //         </option>\r\n// //         <option value=\"personal\">Personal</option>\r\n// //         <option value=\"business\">Business</option>\r\n// //       </select>\r\n\r\n// //       <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n// //         {loading ? \"Registering...\" : \"Register\"}\r\n// //       </button>\r\n// //     </form>\r\n// //   );\r\n// // };\r\n\r\n// // export default Register;\r\n\r\n// // // import React, { useState } from \"react\";\r\n// // // import { registerUser } from \"../api/UserAPI\";\r\n\r\n// // // const Register = ({ onRegisterSuccess }) => {\r\n// // //   const [fname, setFname] = useState(\"\");\r\n// // //   const [lname, setLname] = useState(\"\");\r\n// // //   const [username, setUsername] = useState(\"\");\r\n// // //   const [email, setEmail] = useState(\"\");\r\n// // //   const [password, setPassword] = useState(\"\");\r\n// // //   const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n// // //   const [accountType, setAccountType] = useState(\"\");\r\n// // //   const [error, setError] = useState(\"\");\r\n// // //   const [loading, setLoading] = useState(false);\r\n\r\n// // //   const handleRegister = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     setLoading(true);\r\n\r\n// // //     try {\r\n// // //       const userData = {\r\n// // //         fname,\r\n// // //         lname,\r\n// // //         username,\r\n// // //         email,\r\n// // //         password,\r\n// // //         phone_number: phoneNumber,\r\n// // //         account_type: accountType,\r\n// // //       };\r\n// // //       await registerUser(userData);\r\n// // //       setError(\"\");\r\n// // //       if (onRegisterSuccess) onRegisterSuccess();\r\n// // //     } catch (err) {\r\n// // //       setError(err.message || \"Error registering user\");\r\n// // //     }\r\n// // //     setLoading(false);\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <form onSubmit={handleRegister} className=\"auth-form\">\r\n// // //       {error && <p className=\"error-message\">{error}</p>}\r\n// // //       <input\r\n// // //         type=\"text\"\r\n// // //         placeholder=\"First Name\"\r\n// // //         value={fname}\r\n// // //         onChange={(e) => setFname(e.target.value)}\r\n// // //         required\r\n// // //       />\r\n// // //       <input\r\n// // //         type=\"text\"\r\n// // //         placeholder=\"Last Name\"\r\n// // //         value={lname}\r\n// // //         onChange={(e) => setLname(e.target.value)}\r\n// // //         required\r\n// // //       />\r\n// // //       <input\r\n// // //         type=\"text\"\r\n// // //         placeholder=\"Username\"\r\n// // //         value={username}\r\n// // //         onChange={(e) => setUsername(e.target.value)}\r\n// // //         required\r\n// // //       />\r\n// // //       <input\r\n// // //         type=\"email\"\r\n// // //         placeholder=\"Email\"\r\n// // //         value={email}\r\n// // //         onChange={(e) => setEmail(e.target.value)}\r\n// // //         required\r\n// // //       />\r\n// // //       <input\r\n// // //         type=\"password\"\r\n// // //         placeholder=\"Password\"\r\n// // //         value={password}\r\n// // //         onChange={(e) => setPassword(e.target.value)}\r\n// // //         required\r\n// // //       />\r\n// // //       <input\r\n// // //         type=\"text\"\r\n// // //         placeholder=\"Phone Number\"\r\n// // //         value={phoneNumber}\r\n// // //         onChange={(e) => setPhoneNumber(e.target.value)}\r\n// // //         required\r\n// // //       />\r\n// // //       <select\r\n// // //         value={accountType}\r\n// // //         onChange={(e) => setAccountType(e.target.value)}\r\n// // //       >\r\n// // //         <option value=\"\" disabled>\r\n// // //           Select Account Type\r\n// // //         </option>\r\n// // //         <option value=\"personal\">Personal</option>\r\n// // //         <option value=\"business\">Business</option>\r\n// // //       </select>\r\n// // //       <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n// // //         {loading ? \"Registering...\" : \"Register\"}\r\n// // //       </button>\r\n// // //     </form>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Login from \"../controllers/users/Login\";\r\nimport Register from \"../controllers/users/Register\";\r\n\r\nconst Landing = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"access_token\");\r\n    if (token) {\r\n      navigate(\"/\", { replace: true });\r\n    }\r\n  }, [navigate]);\r\n\r\n  const toggleAuthMode = () => setIsLogin(!isLogin);\r\n  const handleRegisterSuccess = () => setIsLogin(true);\r\n\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <div className=\"landing-content\">\r\n        <div className=\"auth-container\">\r\n          {isLogin ? (\r\n            <>\r\n              <Login />\r\n              <div className=\"auth-options\">\r\n                <button className=\"link-btn\" onClick={toggleAuthMode}>\r\n                  Register\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Register onRegisterSuccess={handleRegisterSuccess} />\r\n              <button className=\"link-btn\" onClick={toggleAuthMode}>\r\n                Log In\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","const API_BASE_URL = \"http://localhost:8000\"; // Ensure this is the correct URL for your API\r\n\r\n// Retrieve userId from localStorage\r\nconst getUserId = () => {\r\n  const userDataString = localStorage.getItem(\"user_data\");\r\n  if (!userDataString) {\r\n    console.error(\"No user data found in localStorage\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const userData = JSON.parse(userDataString);\r\n    return userData.sub;\r\n  } catch (error) {\r\n    console.error(\"Error parsing user data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Retrieve the userId\r\nconst userId = getUserId();\r\n\r\n// Fetch all financial records for a specific user\r\nexport const fetchFinancials = async () => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/financials?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Error fetching financial records\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Financials Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new financial record for a specific user\r\nexport const createFinancial = async (financialData) => {\r\n  const response = await fetch(`${API_BASE_URL}/financials?user_id=${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ ...financialData, user_id: userId }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error creating financial record\");\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\n// Update an existing financial record for a specific user\r\nexport const updateFinancial = async (financialId, financialData) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/financials/${financialId}?user_id=${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(financialData),\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error updating financial record\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Update Financial Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a financial record for a specific user\r\nexport const deleteFinancial = async (financialId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/financials/${financialId}?user_id=${userId}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    if (!response.ok) throw new Error(\"Error deleting financial record\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Delete Financial Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single financial record by ID for a specific user\r\nexport const fetchFinancialById = async (financialId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/financials/${financialId}?user_id=${userId}`\r\n    );\r\n    if (!response.ok) throw new Error(\"Financial record not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetch Financial Record Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createFinancial } from \"../api/FinancialAPI\";\r\n\r\nconst NewFinancial = ({ onClose, onSuccess }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    entry_date: \"\",\r\n    income: \"\",\r\n    NEC: \"\",\r\n    FFA: \"\",\r\n    PLAY: \"\",\r\n    LTSS: \"\",\r\n    GIVE: \"\",\r\n    comments: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await createFinancial({\r\n        ...formData,\r\n        income: parseFloat(formData.income) || 0,\r\n        NEC: parseFloat(formData.NEC) || 0,\r\n        FFA: parseFloat(formData.FFA) || 0,\r\n        PLAY: parseFloat(formData.PLAY) || 0,\r\n        LTSS: parseFloat(formData.LTSS) || 0,\r\n        GIVE: parseFloat(formData.GIVE) || 0,\r\n      });\r\n\r\n      console.log(\"Success:\", response);\r\n      onSuccess(response);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Error submitting financial entry\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"new-financial-container\">\r\n        <div className=\"header-card\">\r\n          <p className=\"title\">Financial</p>\r\n          <p className=\"close-btn\" onClick={onClose}>\r\n            &times;\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n          <label>\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Entry Date\"\r\n              name=\"entry_date\"\r\n              value={formData.entry_date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Income\"\r\n              name=\"income\"\r\n              value={formData.income}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"NEC\"\r\n              name=\"NEC\"\r\n              value={formData.NEC}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"FFA\"\r\n              name=\"FFA\"\r\n              value={formData.FFA}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"PLAY\"\r\n              name=\"PLAY\"\r\n              value={formData.PLAY}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"LTSS\"\r\n              name=\"LTSS\"\r\n              value={formData.LTSS}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"GIVE\"\r\n              name=\"GIVE\"\r\n              value={formData.GIVE}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Comments\"\r\n              name=\"comments\"\r\n              value={formData.comments}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewFinancial;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchFinancials } from \"../api/FinancialAPI\";\r\nimport { formatDate, formatCash } from \"../func/functions\";\r\nimport NewFinancial from \"./NewFinancial\";\r\n\r\nconst Financial = () => {\r\n  const [financials, setFinancials] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getFinancials = async () => {\r\n      try {\r\n        const data = await fetchFinancials();\r\n        setFinancials(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getFinancials();\r\n  }, []);\r\n\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleNewEntrySuccess = (newEntry) => {\r\n    setFinancials((prevFinancials) => [newEntry, ...prevFinancials]);\r\n    handleCloseModal();\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading financials...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error fetching financials: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"financial-table-container\">\r\n      <div className=\"header-card\">\r\n        <p className=\"title\">Financial</p>\r\n        <div className=\"tooltip\">\r\n          <i\r\n            className=\"btn btn-primary fa-solid fa-plus\"\r\n            id=\"financial-new-btn\"\r\n            onClick={handleOpenModal}\r\n          ></i>\r\n          <span className=\"tooltiptext\">New Entry</span>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <table className=\"financial-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Income</th>\r\n            <th>Expenses</th>\r\n            <th>NEC</th>\r\n            <th>FFA</th>\r\n            <th>PLAY</th>\r\n            <th>LTSS</th>\r\n            <th>GIVE</th>\r\n            <th>Net Worth</th>\r\n            <th>Comments</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {financials.map((entry) => (\r\n            <tr key={entry.id}>\r\n              <td>{formatDate(entry.entry_date)}</td>\r\n              <td>{formatCash(entry.income)}</td>\r\n              <td>{formatCash(entry.expenses)}</td>\r\n              <td>{formatCash(entry.NEC)}</td>\r\n              <td>{formatCash(entry.FFA)}</td>\r\n              <td>{formatCash(entry.PLAY)}</td>\r\n              <td>{formatCash(entry.LTSS)}</td>\r\n              <td>{formatCash(entry.GIVE)}</td>\r\n              <td>{formatCash(entry.networth)}</td>\r\n              <td>{entry.comments || \"N/A\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {showModal && (\r\n        <NewFinancial\r\n          onClose={handleCloseModal}\r\n          onSuccess={handleNewEntrySuccess}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Financial;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchFinancials } from \"../api/FinancialAPI\";\r\nimport { LineChart, Line, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { formatCash, formatDate } from \"../func/functions\";\r\n\r\nconst NetWorthChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [summary, setSummary] = useState({\r\n    networth: null,\r\n    previousNetworth: null,\r\n    difference: null,\r\n    date: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const financials = await fetchFinancials();\r\n        const sortedData = financials.sort(\r\n          (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n        );\r\n\r\n        // Format the data for the chart\r\n        const formattedData = sortedData.map((entry) => ({\r\n          date: formatDate(entry.entry_date),\r\n          networth: parseFloat(entry.networth),\r\n        }));\r\n\r\n        setChartData(formattedData);\r\n\r\n        // Calculate summary based on the most recent and previous entries\r\n        if (sortedData.length > 1) {\r\n          const latest = sortedData[sortedData.length - 1];\r\n          const previous = sortedData[sortedData.length - 2];\r\n          const networth = parseFloat(latest.networth);\r\n          const previousNetworth = parseFloat(previous.networth);\r\n          const difference = networth - previousNetworth;\r\n\r\n          setSummary({\r\n            networth,\r\n            previousNetworth,\r\n            difference,\r\n            date: formatDate(latest.entry_date),\r\n          });\r\n        } else if (sortedData.length === 1) {\r\n          const latest = sortedData[0];\r\n          setSummary({\r\n            networth: parseFloat(latest.networth),\r\n            previousNetworth: null,\r\n            difference: null,\r\n            date: formatDate(latest.entry_date),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching financial data\");\r\n        console.error(\"Error fetching financial data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"networth-chart-container\">\r\n      <div className=\"summary-section\">\r\n        <p className=\"networth-cash\">{formatCash(summary.networth || 0)}</p>\r\n        {summary.previousNetworth !== null && (\r\n          <p className=\"networth-previous\">\r\n            Previous: {formatCash(summary.previousNetworth)}\r\n          </p>\r\n        )}\r\n        {summary.difference !== null && (\r\n          <p className=\"networth-difference\">\r\n            Difference: {formatCash(summary.difference)} (\r\n            {summary.difference > 0 ? \"Gain\" : \"Loss\"})\r\n          </p>\r\n        )}\r\n        <p className=\"networth-date\">{summary.date}</p>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={chartData} style={{ background: \"transparent\" }}>\r\n            <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n            <Tooltip\r\n              cursor={false}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { date, networth } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p className=\"networth-tooltip\">{formatCash(networth)}</p>\r\n                      <p className=\"networth-date\">{date}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"networth\"\r\n              stroke=\"#4a90e2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NetWorthChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { fetchFinancials } from \"../api/FinancialAPI\";\r\nimport { formatCash } from \"../func/functions\";\r\n\r\nconst AccountDistributionChart = () => {\r\n  const [accountData, setAccountData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const financials = await fetchFinancials();\r\n\r\n        // Find the most recent entry based on entry_date\r\n        const latestEntry = financials.reduce((latest, current) =>\r\n          new Date(current.entry_date) > new Date(latest.entry_date)\r\n            ? current\r\n            : latest\r\n        );\r\n\r\n        const data = [\r\n          { name: \"NEC\", value: parseFloat(latestEntry.NEC), color: \"#4a90e2\" },\r\n          { name: \"FFA\", value: parseFloat(latestEntry.FFA), color: \"#50e3c2\" },\r\n          {\r\n            name: \"PLAY\",\r\n            value: parseFloat(latestEntry.PLAY),\r\n            color: \"#f8e71c\",\r\n          },\r\n          {\r\n            name: \"LTSS\",\r\n            value: parseFloat(latestEntry.LTSS),\r\n            color: \"#f5a623\",\r\n          },\r\n          {\r\n            name: \"GIVE\",\r\n            value: parseFloat(latestEntry.GIVE),\r\n            color: \"#d0021b\",\r\n          },\r\n        ];\r\n\r\n        setAccountData(data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching account data:\", err);\r\n        setError(\"Error fetching account data\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"account-distribution-chart-container\">\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <PieChart>\r\n          <Pie\r\n            data={accountData}\r\n            dataKey=\"value\"\r\n            nameKey=\"name\"\r\n            // stroke=\"none\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            innerRadius={60}\r\n            outerRadius={80}\r\n            paddingAngle={5}\r\n            startAngle={90}\r\n            endAngle={-270}\r\n          >\r\n            {accountData.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={entry.color}\r\n                style={{\r\n                  transition: \"filter 0.3s\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.filter = `drop-shadow(0 0 5px ${entry.color})`;\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  e.currentTarget.style.filter = \"none\";\r\n                }}\r\n              />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip\r\n            cursor={false}\r\n            content={({ payload }) => {\r\n              if (payload && payload.length) {\r\n                const { name, value } = payload[0].payload;\r\n                return (\r\n                  <div className=\"tooltip-content\">\r\n                    <p>{name}</p>\r\n                    <p className=\"amount\">{formatCash(value)}</p>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            }}\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountDistributionChart;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\n// import { fetchFinancials } from \"../api/FinancialAPI\";\r\n// import { formatCash } from \"../func/functions\";\r\n\r\n// const AccountDistributionChart = () => {\r\n//   const [accountData, setAccountData] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const financials = await fetchFinancials();\r\n//         const latestEntry = financials[financials.length - 1];\r\n\r\n//         const data = [\r\n//           { name: \"NEC\", value: parseFloat(latestEntry.NEC), color: \"#4a90e2\" },\r\n//           { name: \"FFA\", value: parseFloat(latestEntry.FFA), color: \"#50e3c2\" },\r\n//           {\r\n//             name: \"PLAY\",\r\n//             value: parseFloat(latestEntry.PLAY),\r\n//             color: \"#f8e71c\",\r\n//           },\r\n//           {\r\n//             name: \"LTSS\",\r\n//             value: parseFloat(latestEntry.LTSS),\r\n//             color: \"#f5a623\",\r\n//           },\r\n//           {\r\n//             name: \"GIVE\",\r\n//             value: parseFloat(latestEntry.GIVE),\r\n//             color: \"#d0021b\",\r\n//           },\r\n//         ];\r\n\r\n//         setAccountData(data);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching account data:\", err);\r\n//         setError(\"Error fetching account data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   if (error) {\r\n//     return <div>{error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"account-distribution-chart-container\">\r\n//       <ResponsiveContainer width=\"100%\" height={300}>\r\n//         <PieChart>\r\n//           <Pie\r\n//             data={accountData}\r\n//             dataKey=\"value\"\r\n//             nameKey=\"name\"\r\n//             cx=\"50%\"\r\n//             cy=\"50%\"\r\n//             innerRadius={60}\r\n//             outerRadius={80}\r\n//             paddingAngle={5}\r\n//             startAngle={90}\r\n//             endAngle={-270}\r\n//           >\r\n//             {accountData.map((entry, index) => (\r\n//               <Cell\r\n//                 key={`cell-${index}`}\r\n//                 fill={entry.color}\r\n//                 style={{\r\n//                   transition: \"filter 0.3s\",\r\n//                   cursor: \"pointer\",\r\n//                 }}\r\n//                 onMouseEnter={(e) => {\r\n//                   e.currentTarget.style.filter = `drop-shadow(0 0 5px ${entry.color})`;\r\n//                 }}\r\n//                 onMouseLeave={(e) => {\r\n//                   e.currentTarget.style.filter = \"none\";\r\n//                 }}\r\n//               />\r\n//             ))}\r\n//           </Pie>\r\n//           <Tooltip\r\n//             cursor={false}\r\n//             content={({ payload }) => {\r\n//               if (payload && payload.length) {\r\n//                 const { name, value } = payload[0].payload;\r\n//                 return (\r\n//                   <div className=\"tooltip-content\">\r\n//                     <p>{name}</p>\r\n//                     <p className=\"amount\">{formatCash(value)}</p>\r\n//                   </div>\r\n//                 );\r\n//               }\r\n//               return null;\r\n//             }}\r\n//           />\r\n//         </PieChart>\r\n//       </ResponsiveContainer>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountDistributionChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchFinancials } from \"../api/FinancialAPI\";\r\nimport { BarChart, Bar, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { formatDate, formatCash } from \"../func/functions\";\r\n\r\nconst IncomeExpensesComparisonChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [summary, setSummary] = useState({\r\n    income: null,\r\n    expenses: null,\r\n    date: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const financials = await fetchFinancials();\r\n        const sortedData = financials.sort(\r\n          (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n        );\r\n\r\n        setChartData(formatChartData(sortedData));\r\n        setSummary(calculateSummary(sortedData));\r\n      } catch (error) {\r\n        setError(\"Error fetching financial data\");\r\n        console.error(\"Error fetching financial data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const calculateSummary = (data) => {\r\n    const latestEntry = data[data.length - 1];\r\n    return {\r\n      income: latestEntry?.income || 0,\r\n      expenses: latestEntry?.expenses || 0,\r\n      date: formatDate(latestEntry?.entry_date),\r\n    };\r\n  };\r\n\r\n  const formatChartData = (data) => {\r\n    return data.map((entry) => ({\r\n      date: formatDate(entry.entry_date),\r\n      income: parseFloat(entry.income),\r\n      expenses: Math.abs(parseFloat(entry.expenses)),\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"income-expenses-comparison-chart-container\">\r\n      <div className=\"summary-section\">\r\n        <p className=\"income-summary\" style={{ color: \"#4a90e2\" }}>\r\n          {formatCash(summary.income || 0)}\r\n        </p>\r\n        <p className=\"expenses-summary\" style={{ color: \"#f44336\" }}>\r\n          {formatCash(summary.expenses || 0)}\r\n        </p>\r\n        <p className=\"date-summary\">{summary.date || \"Loading...\"}</p>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={chartData} style={{ background: \"transparent\" }}>\r\n            <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n            <Tooltip\r\n              formatter={(value) => formatCash(value)}\r\n              content={({ payload }) => {\r\n                if (payload && payload.length) {\r\n                  const { date, income, expenses } = payload[0].payload;\r\n                  return (\r\n                    <div className=\"tooltip-content\">\r\n                      <p style={{ color: \"#4a90e2\" }}>\r\n                        Income: {formatCash(income)}\r\n                      </p>\r\n                      <p style={{ color: \"#f44336\" }}>\r\n                        Expenses: {formatCash(expenses)}\r\n                      </p>\r\n                      <p className=\"chart-date\">{date}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null;\r\n              }}\r\n            />\r\n            <Bar\r\n              dataKey=\"income\"\r\n              fill=\"#4a90e2\"\r\n              isAnimationActive={true}\r\n              radius={[5, 5, 5, 5]}\r\n              barSize={55}\r\n            />\r\n            <Bar\r\n              dataKey=\"expenses\"\r\n              fill=\"#f44336\"\r\n              isAnimationActive={true}\r\n              radius={[5, 5, 5, 5]}\r\n              barSize={55}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpensesComparisonChart;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { fetchFinancials } from \"../api/FinancialAPI\";\r\n// import { LineChart, Line, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\n// import { formatDate, formatCash } from \"../func/functions\";\r\n\r\n// const IncomeExpensesComparisonChart = () => {\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [chartData, setChartData] = useState([]);\r\n//   const [summary, setSummary] = useState({\r\n//     income: null,\r\n//     expenses: null,\r\n//     date: null,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const financials = await fetchFinancials();\r\n//         const sortedData = financials.sort(\r\n//           (a, b) => new Date(a.entry_date) - new Date(b.entry_date)\r\n//         );\r\n\r\n//         setChartData(formatChartData(sortedData));\r\n//         setSummary(calculateSummary(sortedData));\r\n//       } catch (error) {\r\n//         setError(\"Error fetching financial data\");\r\n//         console.error(\"Error fetching financial data:\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const calculateSummary = (data) => {\r\n//     const latestEntry = data[data.length - 1];\r\n//     return {\r\n//       income: latestEntry?.income || 0,\r\n//       expenses: latestEntry?.expenses || 0,\r\n//       date: formatDate(latestEntry?.entry_date),\r\n//     };\r\n//   };\r\n\r\n//   const formatChartData = (data) => {\r\n//     return data.map((entry) => ({\r\n//       date: formatDate(entry.entry_date),\r\n//       income: parseFloat(entry.income),\r\n//       expenses: Math.abs(parseFloat(entry.expenses)),\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"income-expenses-comparison-chart-container\">\r\n//       <div className=\"summary-section\">\r\n//         <p className=\"income-summary\" style={{ color: \"#4a90e2\" }}>\r\n//           {formatCash(summary.income || 0)}\r\n//         </p>\r\n//         <p className=\"expenses-summary\" style={{ color: \"#f44336\" }}>\r\n//           {formatCash(summary.expenses || 0)}\r\n//         </p>\r\n//         <p className=\"date-summary\">{summary.date || \"Loading...\"}</p>\r\n//       </div>\r\n\r\n//       {loading ? (\r\n//         <div>Loading...</div>\r\n//       ) : error ? (\r\n//         <div>{error}</div>\r\n//       ) : (\r\n//         <ResponsiveContainer width=\"100%\" height={300}>\r\n//           <LineChart data={chartData} style={{ background: \"transparent\" }}>\r\n//             <XAxis dataKey=\"date\" tick={false} axisLine={false} />\r\n//             <Tooltip\r\n//               cursor={false}\r\n//               formatter={(value) => formatCash(value)}\r\n//               content={({ payload }) => {\r\n//                 if (payload && payload.length) {\r\n//                   const { date, income, expenses } = payload[0].payload;\r\n//                   return (\r\n//                     <div className=\"tooltip-content\">\r\n//                       <p style={{ color: \"#4a90e2\" }}>\r\n//                         Income: {formatCash(income)}\r\n//                       </p>\r\n//                       <p style={{ color: \"#f44336\" }}>\r\n//                         Expenses: {formatCash(expenses)}\r\n//                       </p>\r\n//                       <p className=\"chart-date\">{date}</p>\r\n//                     </div>\r\n//                   );\r\n//                 }\r\n//                 return null;\r\n//               }}\r\n//             />\r\n//             <Line\r\n//               type=\"monotone\"\r\n//               dataKey=\"income\"\r\n//               stroke=\"#4a90e2\"\r\n//               strokeWidth={2}\r\n//               dot={false}\r\n//             />\r\n//             <Line\r\n//               type=\"monotone\"\r\n//               dataKey=\"expenses\"\r\n//               stroke=\"#f44336\"\r\n//               strokeWidth={2}\r\n//               dot={false}\r\n//             />\r\n//           </LineChart>\r\n//         </ResponsiveContainer>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IncomeExpensesComparisonChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { fetchFinancials } from \"../api/FinancialAPI\";\r\nimport { formatCash } from \"../func/functions\";\r\n\r\nconst SavingsGrowthChart = () => {\r\n  const [savingsData, setSavingsData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const financials = await fetchFinancials();\r\n\r\n        // Find the most recent entry based on entry_date\r\n        const latestEntry = financials.reduce((latest, current) =>\r\n          new Date(current.entry_date) > new Date(latest.entry_date)\r\n            ? current\r\n            : latest\r\n        );\r\n\r\n        const data = [\r\n          {\r\n            name: \"LTSS\",\r\n            value: parseFloat(latestEntry.LTSS),\r\n            color: \"#4a90e2\",\r\n          },\r\n          {\r\n            name: \"FFA\",\r\n            value: parseFloat(latestEntry.FFA),\r\n            color: \"#50e3c2\",\r\n          },\r\n        ];\r\n\r\n        setSavingsData(data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching savings data:\", err);\r\n        setError(\"Error fetching savings data\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"savings-growth-chart\">\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <PieChart>\r\n          <Pie\r\n            data={savingsData}\r\n            dataKey=\"value\"\r\n            nameKey=\"name\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            innerRadius={60}\r\n            outerRadius={80}\r\n            paddingAngle={5}\r\n            startAngle={90}\r\n            endAngle={-270}\r\n          >\r\n            {savingsData.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={entry.color}\r\n                style={{\r\n                  transition: \"filter 0.3s\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.filter = `drop-shadow(0 0 5px ${entry.color})`;\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  e.currentTarget.style.filter = \"none\";\r\n                }}\r\n              />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip\r\n            cursor={false}\r\n            content={({ payload }) => {\r\n              if (payload && payload.length) {\r\n                const { name, value } = payload[0].payload;\r\n                return (\r\n                  <div className=\"tooltip-content\">\r\n                    <p>{name}</p>\r\n                    <p className=\"amount\">{formatCash(value)}</p>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            }}\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavingsGrowthChart;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\r\n// import { fetchFinancials } from \"../api/FinancialAPI\";\r\n// import { formatCash } from \"../func/functions\";\r\n\r\n// const SavingsGrowthChart = () => {\r\n//   const [savingsData, setSavingsData] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const financials = await fetchFinancials();\r\n//         const latestEntry = financials[financials.length - 1];\r\n\r\n//         const data = [\r\n//           {\r\n//             name: \"LTSS\",\r\n//             value: parseFloat(latestEntry.LTSS),\r\n//             color: \"#4a90e2\",\r\n//           },\r\n//           { name: \"FFA\", value: parseFloat(latestEntry.FFA), color: \"#50e3c2\" },\r\n//         ];\r\n\r\n//         setSavingsData(data);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching savings data:\", err);\r\n//         setError(\"Error fetching savings data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   if (error) {\r\n//     return <div>{error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"savings-growth-chart\">\r\n//       <ResponsiveContainer width=\"100%\" height={300}>\r\n//         <PieChart>\r\n//           <Pie\r\n//             data={savingsData}\r\n//             dataKey=\"value\"\r\n//             nameKey=\"name\"\r\n//             cx=\"50%\"\r\n//             cy=\"50%\"\r\n//             innerRadius={60}\r\n//             outerRadius={80}\r\n//             paddingAngle={5}\r\n//             startAngle={90}\r\n//             endAngle={-270}\r\n//           >\r\n//             {savingsData.map((entry, index) => (\r\n//               <Cell\r\n//                 key={`cell-${index}`}\r\n//                 fill={entry.color}\r\n//                 style={{\r\n//                   transition: \"filter 0.3s\",\r\n//                   cursor: \"pointer\",\r\n//                 }}\r\n//                 onMouseEnter={(e) => {\r\n//                   e.currentTarget.style.filter = `drop-shadow(0 0 5px ${entry.color})`;\r\n//                 }}\r\n//                 onMouseLeave={(e) => {\r\n//                   e.currentTarget.style.filter = \"none\";\r\n//                 }}\r\n//               />\r\n//             ))}\r\n//           </Pie>\r\n//           <Tooltip\r\n//             cursor={false}\r\n//             content={({ payload }) => {\r\n//               if (payload && payload.length) {\r\n//                 const { name, value } = payload[0].payload;\r\n//                 return (\r\n//                   <div className=\"tooltip-content\">\r\n//                     <p>{name}</p>\r\n//                     <p className=\"amount\">{formatCash(value)}</p>\r\n//                   </div>\r\n//                 );\r\n//               }\r\n//               return null;\r\n//             }}\r\n//           />\r\n//         </PieChart>\r\n//       </ResponsiveContainer>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SavingsGrowthChart;\r\n","import React from \"react\";\r\nimport Financial from \"../controllers/financial/Financial\";\r\nimport NetWorthChart from \"../controllers/financial/NetWorthChart\";\r\nimport AccountDistributionChart from \"../controllers/financial/AccountDistributionChart\";\r\nimport IncomeExpensesComparisonChart from \"../controllers/financial/IncomeExpensesComparisonChart\";\r\nimport SavingsGrowthChart from \"../controllers/financial/SavingsGrowthChart\";\r\n\r\nconst Networth = () => {\r\n  return (\r\n    <div className=\"networth-page-container\">\r\n      <div className=\"networth-chart-section\">\r\n        <NetWorthChart />\r\n      </div>\r\n\r\n      <div className=\"financial-table-section\">\r\n        <Financial />\r\n      </div>\r\n\r\n      <div className=\"savings-account-charts-container\">\r\n        <div className=\"account-distribution-chart\">\r\n          <AccountDistributionChart />\r\n        </div>\r\n        <div className=\"savings-growth-chart\">\r\n          <SavingsGrowthChart />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"income-expenses-chart-section\">\r\n        <IncomeExpensesComparisonChart />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Networth;\r\n","// src/components/nav/Navigation.js\r\n\r\nimport React from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { FaSignOutAlt } from \"react-icons/fa\";\r\nimport \"../styles/styles.css\";\r\n\r\nconst Navigation = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"user_data\");\r\n    navigate(\"/start\", { replace: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"nav-container\">\r\n        <div className=\"search\">\r\n          <input type=\"text\" placeholder=\"Search...\" />\r\n        </div>\r\n        <div className=\"nav-links\">\r\n          <Link to=\"/\" className={location.pathname === \"/\" ? \"active\" : \"\"}>\r\n            Home\r\n          </Link>\r\n          <Link\r\n            to=\"/trades\"\r\n            className={location.pathname === \"/trades\" ? \"active\" : \"\"}\r\n          >\r\n            Trades\r\n          </Link>\r\n          <Link\r\n            to=\"/analysis\"\r\n            className={location.pathname === \"/analysis\" ? \"active\" : \"\"}\r\n          >\r\n            Analysis\r\n          </Link>\r\n          <Link\r\n            to=\"/networth\"\r\n            className={location.pathname === \"/networth\" ? \"active\" : \"\"}\r\n          >\r\n            Networth\r\n          </Link>\r\n          <Link\r\n            to=\"/accounts\"\r\n            className={location.pathname === \"/accounts\" ? \"active\" : \"\"}\r\n          >\r\n            Profile\r\n          </Link>\r\n\r\n          <button className=\"logout-btn\" title=\"Logout\" onClick={handleLogout}>\r\n            <FaSignOutAlt className=\"logout-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","// src/components/nav/LandingNavigation.js\r\n\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"../styles/styles.css\";\r\n\r\nconst LandingNavigation = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"nav-container\">\r\n        <div className=\"nav-links\">\r\n          {/* <Link\r\n            to=\"/start\"\r\n            className={location.pathname === \"/start\" ? \"active\" : \"\"}\r\n          >\r\n            Login\r\n          </Link> */}\r\n          {/* <Link\r\n            to=\"/register\"\r\n            className={location.pathname === \"/register\" ? \"active\" : \"\"}\r\n          >\r\n            Register\r\n          </Link> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingNavigation;\r\n","// src/App.js\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./components/styles/styles.css\";\nimport Home from \"./components/pages/Home\";\nimport Trades from \"./components/pages/Trades\";\nimport Analysis from \"./components/pages/Analysis\";\nimport Accounts from \"./components/pages/Accounts\";\nimport Landing from \"./components/pages/Landing\";\nimport Networth from \"./components/pages/Networth\";\nimport Navigation from \"./components/nav/Navigation\";\nimport LandingNavigation from \"./components/nav/LandingNavigation\";\nimport { ProtectedRoute } from \"./components/controllers/func/functions\";\n\nconst AppContent = () => {\n  const location = useLocation();\n  const isLandingPage =\n    location.pathname === \"/start\" || location.pathname === \"/register\";\n\n  return (\n    <div className=\"app\">\n      {isLandingPage ? <LandingNavigation /> : <Navigation />}\n      <main>\n        <Routes>\n          <Route path=\"/start\" element={<Landing />} />\n          <Route path=\"/register\" element={<Landing />} />\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute>\n                <Home />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/trades\"\n            element={\n              <ProtectedRoute>\n                <Trades />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/analysis\"\n            element={\n              <ProtectedRoute>\n                <Analysis />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/accounts\"\n            element={\n              <ProtectedRoute>\n                <Accounts />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/networth\"\n            element={\n              <ProtectedRoute>\n                <Networth />\n              </ProtectedRoute>\n            }\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nconst App = () => (\n  <Router>\n    <AppContent />\n  </Router>\n);\n\nexport default App;\n\n// // src/App.js\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   useLocation,\n// } from \"react-router-dom\";\n// import \"./components/styles/styles.css\";\n// import Home from \"./components/pages/Home\";\n// import Trades from \"./components/pages/Trades\";\n// import Analysis from \"./components/pages/Analysis\";\n// import Accounts from \"./components/pages/Accounts\";\n// import Landing from \"./components/pages/Landing\";\n// import Networth from \"./components/pages/Networth\";\n// import Navigation from \"./components/nav/Navigation\";\n// import LandingNavigation from \"./components/nav/LandingNavigation\";\n// import { ProtectedRoute } from \"./components/controllers/func/functions\";\n\n// const App = () => {\n//   const location = useLocation();\n\n//   const isLandingPage =\n//     location.pathname === \"/start\" || location.pathname === \"/register\";\n\n//   return (\n//     <Router>\n//       <div className=\"app\">\n//         {isLandingPage ? <LandingNavigation /> : <Navigation />}\n//         <main>\n//           <Routes>\n//             <Route path=\"/start\" element={<Landing />} />\n//             <Route path=\"/register\" element={<Landing />} />\n//             <Route\n//               path=\"/\"\n//               element={\n//                 <ProtectedRoute>\n//                   <Home />\n//                 </ProtectedRoute>\n//               }\n//             />\n//             <Route\n//               path=\"/trades\"\n//               element={\n//                 <ProtectedRoute>\n//                   <Trades />\n//                 </ProtectedRoute>\n//               }\n//             />\n//             <Route\n//               path=\"/analysis\"\n//               element={\n//                 <ProtectedRoute>\n//                   <Analysis />\n//                 </ProtectedRoute>\n//               }\n//             />\n//             <Route\n//               path=\"/accounts\"\n//               element={\n//                 <ProtectedRoute>\n//                   <Accounts />\n//                 </ProtectedRoute>\n//               }\n//             />\n//             <Route\n//               path=\"/networth\"\n//               element={\n//                 <ProtectedRoute>\n//                   <Networth />\n//                 </ProtectedRoute>\n//               }\n//             />\n//           </Routes>\n//         </main>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n// // import React from \"react\";\n// // import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// // import \"./components/styles/styles.css\";\n// // import Home from \"./components/pages/Home\";\n// // import Trades from \"./components/pages/Trades\";\n// // import Analysis from \"./components/pages/Analysis\";\n// // import Accounts from \"./components/pages/Accounts\";\n// // import Landing from \"./components/pages/Landing\";\n// // import Networth from \"./components/pages/Networth\";\n// // import Navigation from \"./components/nav/Navigation\";\n// // import { ProtectedRoute } from \"./components/controllers/func/functions\";\n\n// // const App = () => {\n// //   return (\n// //     <Router>\n// //       <div className=\"app\">\n// //         <Navigation />\n// //         <main>\n// //           <Routes>\n// //             <Route path=\"/start\" element={<Landing />} />\n// //             <Route\n// //               path=\"/\"\n// //               element={\n// //                 <ProtectedRoute>\n// //                   <Home />\n// //                 </ProtectedRoute>\n// //               }\n// //             />\n// //             <Route\n// //               path=\"/trades\"\n// //               element={\n// //                 <ProtectedRoute>\n// //                   <Trades />\n// //                 </ProtectedRoute>\n// //               }\n// //             />\n// //             <Route\n// //               path=\"/analysis\"\n// //               element={\n// //                 <ProtectedRoute>\n// //                   <Analysis />\n// //                 </ProtectedRoute>\n// //               }\n// //             />\n// //             <Route\n// //               path=\"/accounts\"\n// //               element={\n// //                 <ProtectedRoute>\n// //                   <Accounts />\n// //                 </ProtectedRoute>\n// //               }\n// //             />\n// //             <Route\n// //               path=\"/networth\"\n// //               element={\n// //                 <ProtectedRoute>\n// //                   <Networth />\n// //                 </ProtectedRoute>\n// //               }\n// //             />\n// //           </Routes>\n// //         </main>\n// //       </div>\n// //     </Router>\n// //   );\n// // };\n\n// // export default App;\n","// src/index.js\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}